/* Generated by Cython 0.29.35 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "define_macros": [
            [
                "TRANS_START", 
                99
            ]
        ], 
        "depends": [], 
        "include_dirs": [
            "./mmfparser/player"
        ], 
        "language": "c++", 
        "name": "mmfparser.data.chunkloaders.objects", 
        "sources": [
            "./mmfparser/data/chunkloaders/objects.pyx"
        ]
    }, 
    "module_name": "mmfparser.data.chunkloaders.objects"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_35"
#define CYTHON_HEX_VERSION 0x001D23F0
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PY_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS (PY_VERSION_HEX < 0x030C00A5)
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #if PY_VERSION_HEX >= 0x030B00A4
    #undef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 0
  #elif !defined(CYTHON_FAST_THREAD_STATE)
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL (PY_VERSION_HEX < 0x030A0000)
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS ((PY_VERSION_HEX >= 0x030600B1) && (PY_VERSION_HEX < 0x030C00A5))
  #endif
  #if PY_VERSION_HEX >= 0x030B00A4
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if PY_VERSION_HEX >= 0x030B00A1
    static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *kwds=NULL, *argcount=NULL, *posonlyargcount=NULL, *kwonlyargcount=NULL;
        PyObject *nlocals=NULL, *stacksize=NULL, *flags=NULL, *replace=NULL, *call_result=NULL, *empty=NULL;
        const char *fn_cstr=NULL;
        const char *name_cstr=NULL;
        PyCodeObject* co=NULL;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        if (!(kwds=PyDict_New())) goto end;
        if (!(argcount=PyLong_FromLong(a))) goto end;
        if (PyDict_SetItemString(kwds, "co_argcount", argcount) != 0) goto end;
        if (!(posonlyargcount=PyLong_FromLong(0))) goto end;
        if (PyDict_SetItemString(kwds, "co_posonlyargcount", posonlyargcount) != 0) goto end;
        if (!(kwonlyargcount=PyLong_FromLong(k))) goto end;
        if (PyDict_SetItemString(kwds, "co_kwonlyargcount", kwonlyargcount) != 0) goto end;
        if (!(nlocals=PyLong_FromLong(l))) goto end;
        if (PyDict_SetItemString(kwds, "co_nlocals", nlocals) != 0) goto end;
        if (!(stacksize=PyLong_FromLong(s))) goto end;
        if (PyDict_SetItemString(kwds, "co_stacksize", stacksize) != 0) goto end;
        if (!(flags=PyLong_FromLong(f))) goto end;
        if (PyDict_SetItemString(kwds, "co_flags", flags) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_code", code) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_consts", c) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_names", n) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_varnames", v) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_freevars", fv) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_cellvars", cell) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_linetable", lnos) != 0) goto end;
        if (!(fn_cstr=PyUnicode_AsUTF8AndSize(fn, NULL))) goto end;
        if (!(name_cstr=PyUnicode_AsUTF8AndSize(name, NULL))) goto end;
        if (!(co = PyCode_NewEmpty(fn_cstr, name_cstr, fline))) goto end;
        if (!(replace = PyObject_GetAttrString((PyObject*)co, "replace"))) goto cleanup_code_too;
        if (!(empty = PyTuple_New(0))) goto cleanup_code_too; // unfortunately __pyx_empty_tuple isn't available here
        if (!(call_result = PyObject_Call(replace, empty, kwds))) goto cleanup_code_too;
        Py_XDECREF((PyObject*)co);
        co = (PyCodeObject*)call_result;
        call_result = NULL;
        if (0) {
            cleanup_code_too:
            Py_XDECREF((PyObject*)co);
            co = NULL;
        }
        end:
        Py_XDECREF(kwds);
        Py_XDECREF(argcount);
        Py_XDECREF(posonlyargcount);
        Py_XDECREF(kwonlyargcount);
        Py_XDECREF(nlocals);
        Py_XDECREF(stacksize);
        Py_XDECREF(replace);
        Py_XDECREF(call_result);
        Py_XDECREF(empty);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return co;
    }
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__mmfparser__data__chunkloaders__objects
#define __PYX_HAVE_API__mmfparser__data__chunkloaders__objects
/* Early includes */
#include <string.h>
#include <stdio.h>
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "mmfparser/data/chunkloaders/objects.pyx",
  "stringsource",
  "mmfparser/bytereader.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_9mmfparser_10bytereader_ByteReader;
struct __pyx_obj_9mmfparser_6loader_DataLoader;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter;
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_seek;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_read;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readByte;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readString;
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readUnicodeString;

/* "mmfparser/bytereader.pxd":33
 *     cpdef int tell(self)
 *     cpdef data(self)
 *     cpdef bint seek(self, int pos, int mode = ?)             # <<<<<<<<<<<<<<
 *     cpdef read(self, int size = ?)
 *     cpdef adjust(self, int to)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_seek {
  int __pyx_n;
  int mode;
};

/* "mmfparser/bytereader.pxd":34
 *     cpdef data(self)
 *     cpdef bint seek(self, int pos, int mode = ?)
 *     cpdef read(self, int size = ?)             # <<<<<<<<<<<<<<
 *     cpdef adjust(self, int to)
 *     cpdef size_t size(self)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_read {
  int __pyx_n;
  int size;
};

/* "mmfparser/bytereader.pxd":37
 *     cpdef adjust(self, int to)
 *     cpdef size_t size(self)
 *     cpdef short readByte(self, bint asUnsigned = ?) except? -10             # <<<<<<<<<<<<<<
 *     cpdef int readShort(self, bint asUnsigned = ?) except? -10
 *     cpdef float readFloat(self) except? -10
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readByte {
  int __pyx_n;
  int asUnsigned;
};

/* "mmfparser/bytereader.pxd":38
 *     cpdef size_t size(self)
 *     cpdef short readByte(self, bint asUnsigned = ?) except? -10
 *     cpdef int readShort(self, bint asUnsigned = ?) except? -10             # <<<<<<<<<<<<<<
 *     cpdef float readFloat(self) except? -10
 *     cpdef double readDouble(self) except? -10
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort {
  int __pyx_n;
  int asUnsigned;
};

/* "mmfparser/bytereader.pxd":41
 *     cpdef float readFloat(self) except? -10
 *     cpdef double readDouble(self) except? -10
 *     cpdef readInt(self, bint asUnsigned = ?)             # <<<<<<<<<<<<<<
 *     cpdef bytes readString(self, size=?)
 *     cpdef unicode readUnicodeString(self, size=?)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt {
  int __pyx_n;
  int asUnsigned;
};

/* "mmfparser/bytereader.pxd":42
 *     cpdef double readDouble(self) except? -10
 *     cpdef readInt(self, bint asUnsigned = ?)
 *     cpdef bytes readString(self, size=?)             # <<<<<<<<<<<<<<
 *     cpdef unicode readUnicodeString(self, size=?)
 *     cpdef tuple readColor(self)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readString {
  int __pyx_n;
  PyObject *size;
};

/* "mmfparser/bytereader.pxd":43
 *     cpdef readInt(self, bint asUnsigned = ?)
 *     cpdef bytes readString(self, size=?)
 *     cpdef unicode readUnicodeString(self, size=?)             # <<<<<<<<<<<<<<
 *     cpdef tuple readColor(self)
 *     cpdef ByteReader readReader(self, size_t size)
 */
struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readUnicodeString {
  int __pyx_n;
  PyObject *size;
};
struct __pyx_opt_args_9mmfparser_6loader_10DataLoader_readString;

/* "mmfparser/loader.pxd":31
 *     cdef bint init(self, ByteReader reader, DataLoader parent,
 *                    dict settings) except False
 *     cpdef readString(self, ByteReader reader, size=?)             # <<<<<<<<<<<<<<
 */
struct __pyx_opt_args_9mmfparser_6loader_10DataLoader_readString {
  int __pyx_n;
  PyObject *size;
};

/* "mmfparser/bytereader.pxd":20
 * from libc.stdio cimport FILE
 * 
 * cdef class ByteReader:             # <<<<<<<<<<<<<<
 *     cdef unsigned char * buffer
 *     cdef unsigned int start, pos, data_size, lastPosition
 */
struct __pyx_obj_9mmfparser_10bytereader_ByteReader {
  PyObject_HEAD
  struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *__pyx_vtab;
  unsigned char *buffer;
  unsigned int start;
  unsigned int pos;
  unsigned int data_size;
  unsigned int lastPosition;
  PyObject *original;
  int shared;
  PyObject *python_fp;
};


/* "mmfparser/loader.pxd":20
 * from mmfparser.bytereader cimport ByteReader
 * 
 * cdef class DataLoader             # <<<<<<<<<<<<<<
 * 
 * cdef class DataLoader:
 */
struct __pyx_obj_9mmfparser_6loader_DataLoader {
  PyObject_HEAD
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader *__pyx_vtab;
  PyObject *settings;
  struct __pyx_obj_9mmfparser_6loader_DataLoader *parent;
};


/* "mmfparser/data/chunkloaders/objects.pyx":28
 *     LIVES, COUNTER, RTF, SUBAPPLICATION)
 * 
 * cdef class AlterableValues(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public list items
 *     cpdef read(self, ByteReader reader):
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  PyObject *items;
};


/* "mmfparser/data/chunkloaders/objects.pyx":40
 *             reader.writeInt(item)
 * 
 * cdef class AlterableStrings(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public list items
 * 
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  PyObject *items;
};


/* "mmfparser/data/chunkloaders/objects.pyx":90
 * )
 * 
 * cdef class Shape(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int borderSize
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int borderSize;
  PyObject *borderColor;
  int shape;
  int fillType;
  PyObject *lineFlags;
  PyObject *color1;
  PyObject *color2;
  int gradientFlags;
  int image;
};


/* "mmfparser/data/chunkloaders/objects.pyx":171
 * ]
 * 
 * cdef class _Background(DataLoader):             # <<<<<<<<<<<<<<
 *     def getCollisionMode(self):
 *         return COLLISION_MODES[self.collisionMode]
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
};


/* "mmfparser/data/chunkloaders/objects.pyx":184
 *         return True
 * 
 * cdef class QuickBackdrop(_Background):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int obstacleType
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background __pyx_base;
  int obstacleType;
  int collisionMode;
  int width;
  int height;
  PyObject *shape;
};


/* "mmfparser/data/chunkloaders/objects.pyx":209
 *         self.shape.write(reader)
 * 
 * cdef class Backdrop(_Background):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int obstacleType
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background __pyx_base;
  int obstacleType;
  int collisionMode;
  int width;
  int height;
  int image;
};


/* "mmfparser/data/chunkloaders/objects.pyx":240
 * ]
 * 
 * cdef class AnimationDirection(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         list frames
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  PyObject *frames;
  int minSpeed;
  int maxSpeed;
  int hasSingle;
  int repeat;
  int backTo;
};


/* "mmfparser/data/chunkloaders/objects.pyx":332
 * ]
 * 
 * cdef class Animation(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         cdef int index
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int index;
  PyObject *directions;
  PyObject *loadedDirections;
};


/* "mmfparser/data/chunkloaders/objects.pyx":422
 *         ANIMATION_NAMES[index]))
 * 
 * cdef class AnimationHeader(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         dict loadedAnimations
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  PyObject *loadedAnimations;
  PyObject *items;
};


/* "mmfparser/data/chunkloaders/objects.pyx":520
 * cdef int FLOAT_PAD = 0x0800
 * 
 * cdef class Counters(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int width
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int width;
  int height;
  int player;
  int displayType;
  int flags;
  int inverse;
  int font;
  PyObject *frames;
  PyObject *shape;
  int integerDigits;
  int formatFloat;
  int formatFloats;
  int floatDigits;
  int useDecimals;
  int decimals;
  int addNulls;
};


/* "mmfparser/data/chunkloaders/objects.pyx":602
 * )
 * 
 * cdef class Paragraph(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int font
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int font;
  PyObject *flags;
  PyObject *color;
  PyObject *value;
};


/* "mmfparser/data/chunkloaders/objects.pyx":630
 *             return INVALID_FONT
 * 
 * cdef class Text(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int width
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int width;
  int height;
  PyObject *items;
};


/* "mmfparser/data/chunkloaders/objects.pyx":673
 * )
 * 
 * cdef class RTFObject(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int version
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int version;
  PyObject *options;
  PyObject *backColor;
  int width;
  int height;
  PyObject *value;
};


/* "mmfparser/data/chunkloaders/objects.pyx":742
 * )
 * 
 * cdef class SubApplication(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int width
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int width;
  int height;
  int version;
  int startFrame;
  PyObject *options;
  int iconOffset;
  PyObject *name;
};


/* "mmfparser/data/chunkloaders/objects.pyx":782
 *         reader.writeString(self.name)
 * 
 * cdef class Counter(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int initial
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  int initial;
  int minimum;
  int maximum;
};


/* "mmfparser/data/chunkloaders/objects.pyx":851
 * )
 * 
 * cdef class ObjectCommon(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         object newFlags
 */
struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon {
  struct __pyx_obj_9mmfparser_6loader_DataLoader __pyx_base;
  PyObject *newFlags;
  PyObject *flags;
  PyObject *preferences;
  int version;
  PyObject *movements;
  PyObject *animations;
  PyObject *qualifiers;
  int identifier;
  PyObject *backColour;
  PyObject *values;
  PyObject *strings;
  PyObject *text;
  PyObject *subApplication;
  PyObject *rtf;
  PyObject *counters;
  PyObject *counter;
  PyObject *extensionVersion;
  PyObject *extensionId;
  PyObject *extensionPrivate;
  PyObject *extensionData;
  PyObject *fadeIn;
  PyObject *fadeOut;
};



/* "mmfparser/bytereader.pxd":20
 * from libc.stdio cimport FILE
 * 
 * cdef class ByteReader:             # <<<<<<<<<<<<<<
 *     cdef unsigned char * buffer
 *     cdef unsigned int start, pos, data_size, lastPosition
 */

struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader {
  int (*tell)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  PyObject *(*data)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  int (*seek)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_seek *__pyx_optional_args);
  PyObject *(*read)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_read *__pyx_optional_args);
  PyObject *(*adjust)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int, int __pyx_skip_dispatch);
  size_t (*size)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  short (*readByte)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readByte *__pyx_optional_args);
  int (*readShort)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort *__pyx_optional_args);
  float (*readFloat)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  double (*readDouble)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  PyObject *(*readInt)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt *__pyx_optional_args);
  PyObject *(*readString)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readString *__pyx_optional_args);
  PyObject *(*readUnicodeString)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readUnicodeString *__pyx_optional_args);
  PyObject *(*readColor)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *(*readReader)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, size_t, int __pyx_skip_dispatch);
  int (*write)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, PyObject *, int __pyx_skip_dispatch);
  int (*write_size)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, char *, size_t, int __pyx_skip_dispatch);
  int (*skipBytes)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, size_t, int __pyx_skip_dispatch);
  int (*rewind)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, size_t, int __pyx_skip_dispatch);
  int (*_read)(struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, void *, int);
};
static struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *__pyx_vtabptr_9mmfparser_10bytereader_ByteReader;


/* "mmfparser/loader.pxd":20
 * from mmfparser.bytereader cimport ByteReader
 * 
 * cdef class DataLoader             # <<<<<<<<<<<<<<
 * 
 * cdef class DataLoader:
 */

struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader {
  PyObject *(*read)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch);
  PyObject *(*initialize)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch);
  int (*init)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, struct __pyx_obj_9mmfparser_6loader_DataLoader *, PyObject *);
  PyObject *(*readString)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch, struct __pyx_opt_args_9mmfparser_6loader_10DataLoader_readString *__pyx_optional_args);
};
static struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader *__pyx_vtabptr_9mmfparser_6loader_DataLoader;


/* "mmfparser/data/chunkloaders/objects.pyx":28
 *     LIVES, COUNTER, RTF, SUBAPPLICATION)
 * 
 * cdef class AlterableValues(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public list items
 *     cpdef read(self, ByteReader reader):
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AlterableValues {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AlterableValues;


/* "mmfparser/data/chunkloaders/objects.pyx":40
 *             reader.writeInt(item)
 * 
 * cdef class AlterableStrings(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public list items
 * 
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings;


/* "mmfparser/data/chunkloaders/objects.pyx":90
 * )
 * 
 * cdef class Shape(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int borderSize
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Shape {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Shape;


/* "mmfparser/data/chunkloaders/objects.pyx":171
 * ]
 * 
 * cdef class _Background(DataLoader):             # <<<<<<<<<<<<<<
 *     def getCollisionMode(self):
 *         return COLLISION_MODES[self.collisionMode]
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects__Background {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects__Background;


/* "mmfparser/data/chunkloaders/objects.pyx":184
 *         return True
 * 
 * cdef class QuickBackdrop(_Background):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int obstacleType
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop {
  struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects__Background __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop;


/* "mmfparser/data/chunkloaders/objects.pyx":209
 *         self.shape.write(reader)
 * 
 * cdef class Backdrop(_Background):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int obstacleType
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Backdrop {
  struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects__Background __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Backdrop;


/* "mmfparser/data/chunkloaders/objects.pyx":240
 * ]
 * 
 * cdef class AnimationDirection(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         list frames
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection;


/* "mmfparser/data/chunkloaders/objects.pyx":332
 * ]
 * 
 * cdef class Animation(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         cdef int index
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Animation {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Animation;


/* "mmfparser/data/chunkloaders/objects.pyx":422
 *         ANIMATION_NAMES[index]))
 * 
 * cdef class AnimationHeader(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         dict loadedAnimations
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader;


/* "mmfparser/data/chunkloaders/objects.pyx":520
 * cdef int FLOAT_PAD = 0x0800
 * 
 * cdef class Counters(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int width
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Counters {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Counters;


/* "mmfparser/data/chunkloaders/objects.pyx":602
 * )
 * 
 * cdef class Paragraph(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int font
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Paragraph {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Paragraph;


/* "mmfparser/data/chunkloaders/objects.pyx":630
 *             return INVALID_FONT
 * 
 * cdef class Text(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int width
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Text {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Text;


/* "mmfparser/data/chunkloaders/objects.pyx":673
 * )
 * 
 * cdef class RTFObject(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int version
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_RTFObject {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_RTFObject;


/* "mmfparser/data/chunkloaders/objects.pyx":742
 * )
 * 
 * cdef class SubApplication(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int width
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_SubApplication {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_SubApplication;


/* "mmfparser/data/chunkloaders/objects.pyx":782
 *         reader.writeString(self.name)
 * 
 * cdef class Counter(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         int initial
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Counter {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Counter;


/* "mmfparser/data/chunkloaders/objects.pyx":851
 * )
 * 
 * cdef class ObjectCommon(DataLoader):             # <<<<<<<<<<<<<<
 *     cdef public:
 *         object newFlags
 */

struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon {
  struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader __pyx_base;
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if CYTHON_FAST_PYCALL
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif // CYTHON_FAST_PYCALL
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyDictContains.proto */
static CYTHON_INLINE int __Pyx_PyDict_ContainsTF(PyObject* item, PyObject* dict, int eq) {
    int result = PyDict_Contains(dict, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_SubtractObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* py_dict_keys.proto */
static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod0.proto */
static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CallUnboundCMethod0(cfunc, self)\
    (likely((cfunc)->func) ?\
        (likely((cfunc)->flag == METH_NOARGS) ?  (*((cfunc)->func))(self, NULL) :\
         (PY_VERSION_HEX >= 0x030600B1 && likely((cfunc)->flag == METH_FASTCALL) ?\
            (PY_VERSION_HEX >= 0x030700A0 ?\
                (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)(cfunc)->func)(self, &__pyx_empty_tuple, 0) :\
                (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)(cfunc)->func)(self, &__pyx_empty_tuple, 0, NULL)) :\
          (PY_VERSION_HEX >= 0x030700A0 && (cfunc)->flag == (METH_FASTCALL | METH_KEYWORDS) ?\
            (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)(cfunc)->func)(self, &__pyx_empty_tuple, 0, NULL) :\
            (likely((cfunc)->flag == (METH_VARARGS | METH_KEYWORDS)) ?  ((*(PyCFunctionWithKeywords)(void*)(PyCFunction)(cfunc)->func)(self, __pyx_empty_tuple, NULL)) :\
               ((cfunc)->flag == METH_VARARGS ?  (*((cfunc)->func))(self, __pyx_empty_tuple) :\
               __Pyx__CallUnboundCMethod0(cfunc, self)))))) :\
        __Pyx__CallUnboundCMethod0(cfunc, self))
#else
#define __Pyx_CallUnboundCMethod0(cfunc, self)  __Pyx__CallUnboundCMethod0(cfunc, self)
#endif

/* dict_getitem_default.proto */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value);

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* CallUnboundCMethod2.proto */
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* CallNextTpDealloc.proto */
static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc);

/* CallNextTpTraverse.proto */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

/* CallNextTpClear.proto */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto_0_29_35
#define __PYX_HAVE_RT_ImportType_proto_0_29_35
#if __STDC_VERSION__ >= 201112L
#include <stdalign.h>
#endif
#if __STDC_VERSION__ >= 201112L || __cplusplus >= 201103L
#define __PYX_GET_STRUCT_ALIGNMENT_0_29_35(s) alignof(s)
#else
#define __PYX_GET_STRUCT_ALIGNMENT_0_29_35(s) sizeof(void*)
#endif
enum __Pyx_ImportType_CheckSize_0_29_35 {
   __Pyx_ImportType_CheckSize_Error_0_29_35 = 0,
   __Pyx_ImportType_CheckSize_Warn_0_29_35 = 1,
   __Pyx_ImportType_CheckSize_Ignore_0_29_35 = 2
};
static PyTypeObject *__Pyx_ImportType_0_29_35(PyObject* module, const char *module_name, const char *class_name, size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_0_29_35 check_size);
#endif

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyObject *dict);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* SetNameInClass.proto */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? _PyDict_SetItem_KnownHash(ns, name, value, ((PyASCIIObject *) name)->hash) : PyObject_SetItem(ns, name, value))
#elif CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_SetNameInClass(ns, name, value)\
    (likely(PyDict_CheckExact(ns)) ? PyDict_SetItem(ns, name, value) : PyObject_SetItem(ns, name, value))
#else
#define __Pyx_SetNameInClass(ns, name, value)  PyObject_SetItem(ns, name, value)
#endif

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_short(short value);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_5Shape_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_5Shape_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Animation_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Animation_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_8Counters_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_4Text_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_4Text_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_7Counter_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch); /* proto*/

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'mmfparser.bytereader' */
static PyTypeObject *__pyx_ptype_9mmfparser_10bytereader_ByteReader = 0;

/* Module declarations from 'mmfparser.loader' */
static PyTypeObject *__pyx_ptype_9mmfparser_6loader_DataLoader = 0;

/* Module declarations from 'mmfparser.data.chunkloaders.objects' */
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableValues = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects__Background = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Backdrop = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Animation = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counters = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Paragraph = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Text = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_RTFObject = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_SubApplication = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counter = 0;
static PyTypeObject *__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon = 0;
static int __pyx_v_9mmfparser_4data_12chunkloaders_7objects_INT_DIGITS_MASK;
static int __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DIGITS_MASK;
static int __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FORMAT_FLOAT;
static int __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DIGITS_SHIFT;
static int __pyx_v_9mmfparser_4data_12chunkloaders_7objects_USE_DECIMALS;
static int __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DECIMALS_MASK;
static int __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DECIMALS_SHIFT;
static int __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_PAD;
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_getClosestDirection(int, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AlterableValues__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AlterableStrings__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Shape__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle__Background__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_QuickBackdrop__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Backdrop__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AnimationDirection__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Animation__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AnimationHeader__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Counters__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Paragraph__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Text__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_RTFObject__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_SubApplication__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Counter__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *, PyObject *); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_ObjectCommon__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *, PyObject *); /*proto*/
#define __Pyx_MODULE_NAME "mmfparser.data.chunkloaders.objects"
extern int __pyx_module_is_main_mmfparser__data__chunkloaders__objects;
int __pyx_module_is_main_mmfparser__data__chunkloaders__objects = 0;

/* Implementation of 'mmfparser.data.chunkloaders.objects' */
static PyObject *__pyx_builtin_object;
static PyObject *__pyx_builtin_xrange;
static PyObject *__pyx_builtin_KeyError;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_IndexError;
static PyObject *__pyx_builtin_max;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_AttributeError;
static const char __pyx_k_[] = "";
static const char __pyx_k_0[] = "0";
static const char __pyx_k_1[] = "1";
static const char __pyx_k_2[] = "2";
static const char __pyx_k_3[] = "3";
static const char __pyx_k_4[] = "4";
static const char __pyx_k_5[] = "5";
static const char __pyx_k_6[] = "6";
static const char __pyx_k_7[] = "7";
static const char __pyx_k_8[] = "8";
static const char __pyx_k_9[] = "9";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_Box[] = "Box";
static const char __pyx_k_RTF[] = "RTF";
static const char __pyx_k_Top[] = "Top";
static const char __pyx_k__20[] = "-";
static const char __pyx_k__21[] = "+";
static const char __pyx_k__22[] = ".";
static const char __pyx_k_all[] = "__all__";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_max[] = "max";
static const char __pyx_k_new[] = "new";
static const char __pyx_k_Fine[] = "Fine";
static const char __pyx_k_Kill[] = "Kill";
static const char __pyx_k_Left[] = "Left";
static const char __pyx_k_Line[] = "Line";
static const char __pyx_k_None[] = "None";
static const char __pyx_k_TEXT[] = "TEXT";
static const char __pyx_k_Text[] = "Text";
static const char __pyx_k_copy[] = "copy";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_keys[] = "keys";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_read[] = "read";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_LIVES[] = "LIVES";
static const char __pyx_k_Modal[] = "Modal";
static const char __pyx_k_Motif[] = "Motif";
static const char __pyx_k_Popup[] = "Popup";
static const char __pyx_k_Right[] = "Right";
static const char __pyx_k_SCORE[] = "SCORE";
static const char __pyx_k_Shape[] = "Shape";
static const char __pyx_k_Sleep[] = "Sleep";
static const char __pyx_k_Solid[] = "Solid";
static const char __pyx_k_build[] = "build";
static const char __pyx_k_count[] = "count";
static const char __pyx_k_image[] = "image";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_new_2[] = "__new__";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_width[] = "width";
static const char __pyx_k_write[] = "write";
static const char __pyx_k_Border[] = "Border";
static const char __pyx_k_Bottom[] = "Bottom";
static const char __pyx_k_Docked[] = "Docked";
static const char __pyx_k_FadeIn[] = "FadeIn";
static const char __pyx_k_Global[] = "Global";
static const char __pyx_k_HIDDEN[] = "HIDDEN";
static const char __pyx_k_Hidden[] = "Hidden";
static const char __pyx_k_Ladder[] = "Ladder";
static const char __pyx_k_Relief[] = "Relief";
static const char __pyx_k_Reopen[] = "Reopen";
static const char __pyx_k_Values[] = "Values";
static const char __pyx_k_compat[] = "compat";
static const char __pyx_k_handle[] = "handle";
static const char __pyx_k_height[] = "height";
static const char __pyx_k_images[] = "images";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_object[] = "object";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_xrange[] = "xrange";
static const char __pyx_k_BitDict[] = "BitDict";
static const char __pyx_k_COUNTER[] = "COUNTER";
static const char __pyx_k_Caption[] = "Caption";
static const char __pyx_k_Correct[] = "Correct";
static const char __pyx_k_Counter[] = "Counter";
static const char __pyx_k_Docked1[] = "Docked1";
static const char __pyx_k_Docked2[] = "Docked2";
static const char __pyx_k_Ellipse[] = "Ellipse";
static const char __pyx_k_FALLING[] = "FALLING";
static const char __pyx_k_FadeOut[] = "FadeOut";
static const char __pyx_k_Falling[] = "Falling";
static const char __pyx_k_JUMPING[] = "JUMPING";
static const char __pyx_k_Jumping[] = "Jumping";
static const char __pyx_k_NUMBERS[] = "NUMBERS";
static const char __pyx_k_Numbers[] = "Numbers";
static const char __pyx_k_RUNNING[] = "RUNNING";
static const char __pyx_k_Running[] = "Running";
static const char __pyx_k_STOPPED[] = "STOPPED";
static const char __pyx_k_Sprites[] = "Sprites";
static const char __pyx_k_Stopped[] = "Stopped";
static const char __pyx_k_Stretch[] = "Stretch";
static const char __pyx_k_TabStop[] = "TabStop";
static const char __pyx_k_WALKING[] = "WALKING";
static const char __pyx_k_Walking[] = "Walking";
static const char __pyx_k_getFlag[] = "getFlag";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_BOUNCING[] = "BOUNCING";
static const char __pyx_k_Backdrop[] = "Backdrop";
static const char __pyx_k_Backsave[] = "Backsave";
static const char __pyx_k_Bouncing[] = "Bouncing";
static const char __pyx_k_CLIMBING[] = "CLIMBING";
static const char __pyx_k_Climbing[] = "Climbing";
static const char __pyx_k_Counters[] = "Counters";
static const char __pyx_k_Gradient[] = "Gradient";
static const char __pyx_k_Internal[] = "Internal";
static const char __pyx_k_InverseX[] = "InverseX";
static const char __pyx_k_InverseY[] = "InverseY";
static const char __pyx_k_KeyError[] = "KeyError";
static const char __pyx_k_MDIChild[] = "MDIChild";
static const char __pyx_k_Platform[] = "Platform";
static const char __pyx_k_QUESTION[] = "QUESTION";
static const char __pyx_k_SHOOTING[] = "SHOOTING";
static const char __pyx_k_STAND_UP[] = "STAND_UP";
static const char __pyx_k_Shooting[] = "Shooting";
static const char __pyx_k_Stand_up[] = "Stand up";
static const char __pyx_k_Vertical[] = "Vertical";
static const char __pyx_k_byteflag[] = "byteflag";
static const char __pyx_k_checksum[] = "checksum";
static const char __pyx_k_getFlags[] = "getFlags";
static const char __pyx_k_getIndex[] = "getIndex";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_setFlags[] = "setFlags";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_writeInt[] = "writeInt";
static const char __pyx_k_ANIMATION[] = "ANIMATION";
static const char __pyx_k_APPEARING[] = "APPEARING";
static const char __pyx_k_Animation[] = "Animation";
static const char __pyx_k_Appearing[] = "Appearing";
static const char __pyx_k_Movements[] = "Movements";
static const char __pyx_k_NONE_FILL[] = "NONE_FILL";
static const char __pyx_k_NeverKill[] = "NeverKill";
static const char __pyx_k_Paragraph[] = "Paragraph";
static const char __pyx_k_RTFObject[] = "RTFObject";
static const char __pyx_k_RTF_FLAGS[] = "RTF_FLAGS";
static const char __pyx_k_Rectangle[] = "Rectangle";
static const char __pyx_k_Resizable[] = "Resizable";
static const char __pyx_k_enumerate[] = "enumerate";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_mmfparser[] = "mmfparser";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_writeByte[] = "writeByte";
static const char __pyx_k_Animations[] = "Animations";
static const char __pyx_k_Background[] = "Background";
static const char __pyx_k_FILL_TYPES[] = "FILL_TYPES";
static const char __pyx_k_FakeSprite[] = "FakeSprite";
static const char __pyx_k_Horizontal[] = "Horizontal";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_InkEffects[] = "InkEffects";
static const char __pyx_k_LINE_SHAPE[] = "LINE_SHAPE";
static const char __pyx_k_LoadOnCall[] = "LoadOnCall";
static const char __pyx_k_MOTIF_FILL[] = "MOTIF_FILL";
static const char __pyx_k_NeverSleep[] = "NeverSleep";
static const char __pyx_k_SOLID_FILL[] = "SOLID_FILL";
static const char __pyx_k_ShareLives[] = "ShareLives";
static const char __pyx_k_SystemMenu[] = "SystemMenu";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_WindowProc[] = "WindowProc";
static const char __pyx_k_fromHandle[] = "fromHandle";
static const char __pyx_k_initialize[] = "initialize";
static const char __pyx_k_objectType[] = "objectType";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_references[] = "references";
static const char __pyx_k_writeColor[] = "writeColor";
static const char __pyx_k_writeShort[] = "writeShort";
static const char __pyx_k_BackEffects[] = "BackEffects";
static const char __pyx_k_CROUCH_DOWN[] = "CROUCH_DOWN";
static const char __pyx_k_Crouch_down[] = "Crouch down";
static const char __pyx_k_DialogFrame[] = "DialogFrame";
static const char __pyx_k_HideOnClose[] = "HideOnClose";
static const char __pyx_k_InvalidFont[] = "InvalidFont";
static const char __pyx_k_ManualSleep[] = "ManualSleep";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_SHAPE_FLAGS[] = "SHAPE_FLAGS";
static const char __pyx_k_SHAPE_TYPES[] = "SHAPE_TYPES";
static const char __pyx_k_ShareScores[] = "ShareScores";
static const char __pyx_k_ToolCaption[] = "ToolCaption";
static const char __pyx_k_Transitions[] = "Transitions";
static const char __pyx_k_Transparent[] = "Transparent";
static const char __pyx_k_VerticalBar[] = "VerticalBar";
static const char __pyx_k_alternative[] = "alternative";
static const char __pyx_k_writeReader[] = "writeReader";
static const char __pyx_k_writeString[] = "writeString";
static const char __pyx_k_Background_2[] = "_Background";
static const char __pyx_k_ClipSiblings[] = "ClipSiblings";
static const char __pyx_k_CollisionBox[] = "CollisionBox";
static const char __pyx_k_DISAPPEARING[] = "DISAPPEARING";
static const char __pyx_k_DisableClose[] = "DisableClose";
static const char __pyx_k_Disappearing[] = "Disappearing";
static const char __pyx_k_INVALID_FONT[] = "INVALID_FONT";
static const char __pyx_k_OBJECT_FLAGS[] = "OBJECT_FLAGS";
static const char __pyx_k_ObjectCommon[] = "ObjectCommon";
static const char __pyx_k_QuickDisplay[] = "QuickDisplay";
static const char __pyx_k_RightAligned[] = "RightAligned";
static const char __pyx_k_ShareGlobals[] = "ShareGlobals";
static const char __pyx_k_TEXT_COUNTER[] = "TEXT_COUNTER";
static const char __pyx_k_VERTICAL_BAR[] = "VERTICAL_BAR";
static const char __pyx_k_checkDefault[] = "checkDefault";
static const char __pyx_k_obstacleType[] = "obstacleType";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_stringsource[] = "stringsource";
static const char __pyx_k_BOX_COLLISION[] = "BOX_COLLISION";
static const char __pyx_k_BottomAligned[] = "BottomAligned";
static const char __pyx_k_DISPLAY_NAMES[] = "DISPLAY_NAMES";
static const char __pyx_k_ELLIPSE_SHAPE[] = "ELLIPSE_SHAPE";
static const char __pyx_k_GRADIENT_FILL[] = "GRADIENT_FILL";
static const char __pyx_k_HorizontalBar[] = "HorizontalBar";
static const char __pyx_k_NONE_OBSTACLE[] = "NONE_OBSTACLE";
static const char __pyx_k_ObstacleSolid[] = "ObstacleSolid";
static const char __pyx_k_QuickBackdrop[] = "QuickBackdrop";
static const char __pyx_k_animationDict[] = "animationDict";
static const char __pyx_k_collisionMode[] = "collisionMode";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_AppletProblems[] = "AppletProblems";
static const char __pyx_k_AttributeError[] = "AttributeError";
static const char __pyx_k_COUNTER_FRAMES[] = "COUNTER_FRAMES";
static const char __pyx_k_CustomableSize[] = "CustomableSize";
static const char __pyx_k_DOCK_POSITIONS[] = "DOCK_POSITIONS";
static const char __pyx_k_DisplayInFront[] = "DisplayInFront";
static const char __pyx_k_FINE_COLLISION[] = "FINE_COLLISION";
static const char __pyx_k_FakeCollisions[] = "FakeCollisions";
static const char __pyx_k_FineCollisions[] = "FineCollisions";
static const char __pyx_k_GRADIENT_TYPES[] = "GRADIENT_TYPES";
static const char __pyx_k_HORIZONTAL_BAR[] = "HORIZONTAL_BAR";
static const char __pyx_k_OBSTACLE_TYPES[] = "OBSTACLE_TYPES";
static const char __pyx_k_SOLID_OBSTACLE[] = "SOLID_OBSTACLE";
static const char __pyx_k_SUBAPPLICATION[] = "SUBAPPLICATION";
static const char __pyx_k_SubApplication[] = "SubApplication";
static const char __pyx_k_User_defined_1[] = "User defined 1";
static const char __pyx_k_User_defined_2[] = "User defined 2";
static const char __pyx_k_User_defined_3[] = "User defined 3";
static const char __pyx_k_User_defined_4[] = "User defined 4";
static const char __pyx_k_User_defined_s[] = "User defined %s";
static const char __pyx_k_VerticalCenter[] = "VerticalCenter";
static const char __pyx_k_VerticalSlider[] = "VerticalSlider";
static const char __pyx_k_VisibleAtStart[] = "VisibleAtStart";
static const char __pyx_k_ANIMATION_NAMES[] = "ANIMATION_NAMES";
static const char __pyx_k_AlterableValues[] = "AlterableValues";
static const char __pyx_k_AnimationHeader[] = "AnimationHeader";
static const char __pyx_k_COLLISION_MODES[] = "COLLISION_MODES";
static const char __pyx_k_LADDER_OBSTACLE[] = "LADDER_OBSTACLE";
static const char __pyx_k_PARAGRAPH_FLAGS[] = "PARAGRAPH_FLAGS";
static const char __pyx_k_RECTANGLE_SHAPE[] = "RECTANGLE_SHAPE";
static const char __pyx_k_RunBeforeFadeIn[] = "RunBeforeFadeIn";
static const char __pyx_k_SolidBackground[] = "SolidBackground";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_AlterableStrings[] = "AlterableStrings";
static const char __pyx_k_HAS_SINGLE_SPEED[] = "HAS_SINGLE_SPEED";
static const char __pyx_k_HorizontalCenter[] = "HorizontalCenter";
static const char __pyx_k_HorizontalSlider[] = "HorizontalSlider";
static const char __pyx_k_InternalBacksave[] = "InternalBacksave";
static const char __pyx_k_NEW_OBJECT_FLAGS[] = "NEW_OBJECT_FLAGS";
static const char __pyx_k_ObstaclePlatform[] = "ObstaclePlatform";
static const char __pyx_k_AutomaticRotation[] = "AutomaticRotation";
static const char __pyx_k_PLATFORM_OBSTACLE[] = "PLATFORM_OBSTACLE";
static const char __pyx_k_VERTICAL_GRADIENT[] = "VERTICAL_GRADIENT";
static const char __pyx_k_mmfparser_bitdict[] = "mmfparser.bitdict";
static const char __pyx_k_pyx_unpickle_Text[] = "__pyx_unpickle_Text";
static const char __pyx_k_AnimationDirection[] = "AnimationDirection";
static const char __pyx_k_DoNotCreateAtStart[] = "DoNotCreateAtStart";
static const char __pyx_k_OBJECT_PREFERENCES[] = "OBJECT_PREFERENCES";
static const char __pyx_k_RunEvenIfNotActive[] = "RunEvenIfNotActive";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_pyx_unpickle_Shape[] = "__pyx_unpickle_Shape";
static const char __pyx_k_DoNotSaveBackground[] = "DoNotSaveBackground";
static const char __pyx_k_HORIZONTAL_GRADIENT[] = "HORIZONTAL_GRADIENT";
static const char __pyx_k_SharePlayerControls[] = "SharePlayerControls";
static const char __pyx_k_getClosestAnimation[] = "getClosestAnimation";
static const char __pyx_k_SUBAPPLICATION_FLAGS[] = "SUBAPPLICATION_FLAGS";
static const char __pyx_k_ScrollingIndependant[] = "ScrollingIndependant";
static const char __pyx_k_TRANSPARENT_OBSTACLE[] = "TRANSPARENT_OBSTACLE";
static const char __pyx_k_mmfparser_bytereader[] = "mmfparser.bytereader";
static const char __pyx_k_pyx_unpickle_Counter[] = "__pyx_unpickle_Counter";
static const char __pyx_k_pyx_unpickle_Backdrop[] = "__pyx_unpickle_Backdrop";
static const char __pyx_k_pyx_unpickle_Counters[] = "__pyx_unpickle_Counters";
static const char __pyx_k_ANIMATION_ALTERNATIVES[] = "ANIMATION_ALTERNATIVES";
static const char __pyx_k_pyx_unpickle_Animation[] = "__pyx_unpickle_Animation";
static const char __pyx_k_pyx_unpickle_Paragraph[] = "__pyx_unpickle_Paragraph";
static const char __pyx_k_pyx_unpickle_RTFObject[] = "__pyx_unpickle_RTFObject";
static const char __pyx_k_pyx_unpickle__Background[] = "__pyx_unpickle__Background";
static const char __pyx_k_pyx_unpickle_ObjectCommon[] = "__pyx_unpickle_ObjectCommon";
static const char __pyx_k_pyx_unpickle_QuickBackdrop[] = "__pyx_unpickle_QuickBackdrop";
static const char __pyx_k_pyx_unpickle_SubApplication[] = "__pyx_unpickle_SubApplication";
static const char __pyx_k_pyx_unpickle_AlterableValues[] = "__pyx_unpickle_AlterableValues";
static const char __pyx_k_pyx_unpickle_AnimationHeader[] = "__pyx_unpickle_AnimationHeader";
static const char __pyx_k_pyx_unpickle_AlterableStrings[] = "__pyx_unpickle_AlterableStrings";
static const char __pyx_k_pyx_unpickle_AnimationDirectio[] = "__pyx_unpickle_AnimationDirection";
static const char __pyx_k_no_animation_could_be_found_for[] = "no animation could be found for %r";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0[] = "Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))";
static const char __pyx_k_mmfparser_data_chunkloaders_move[] = "mmfparser.data.chunkloaders.movement";
static const char __pyx_k_mmfparser_data_chunkloaders_obje[] = "mmfparser.data.chunkloaders.objectinfo";
static const char __pyx_k_mmfparser_data_chunkloaders_tran[] = "mmfparser.data.chunkloaders.transition";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_2[] = "Incompatible checksums (0x%x vs (0xd172a1b, 0x9ec7f4f, 0xe670cae) = (borderColor, borderSize, color1, color2, fillType, gradientFlags, image, lineFlags, parent, settings, shape))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_3[] = "Incompatible checksums (0x%x vs (0xb6a31ef, 0xa020ac5, 0xf3ec034) = (parent, settings))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_4[] = "Incompatible checksums (0x%x vs (0x1b1299c, 0x2dd4423, 0x1151f38) = (collisionMode, height, obstacleType, parent, settings, shape, width))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_5[] = "Incompatible checksums (0x%x vs (0x96fb5c9, 0x74c6bf0, 0x03e2edf) = (collisionMode, height, image, obstacleType, parent, settings, width))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_6[] = "Incompatible checksums (0x%x vs (0x495eeed, 0x2875f86, 0xd569d74) = (backTo, frames, hasSingle, maxSpeed, minSpeed, parent, repeat, settings))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_7[] = "Incompatible checksums (0x%x vs (0x1f239e1, 0x93a14e1, 0x6de3be1) = (directions, index, loadedDirections, parent, settings))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_8[] = "Incompatible checksums (0x%x vs (0x46f45fa, 0x59e88da, 0xf46d8cc) = (items, loadedAnimations, parent, settings))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_9[] = "Incompatible checksums (0x%x vs (0x370f5a3, 0x72f9b51, 0xdbbd62e) = (addNulls, decimals, displayType, flags, floatDigits, font, formatFloat, formatFloats, frames, height, integerDigits, inverse, parent, player, settings, shape, useDecimals, width))";
static const char __pyx_k_mmfparser_data_chunkloaders_obje_2[] = "mmfparser/data/chunkloaders/objects.pyx";
static const char __pyx_k_mmfparser_data_chunkloaders_obje_3[] = "mmfparser.data.chunkloaders.objects";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_10[] = "Incompatible checksums (0x%x vs (0x653b896, 0x95af037, 0x9d7686e) = (color, flags, font, parent, settings, value))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_11[] = "Incompatible checksums (0x%x vs (0x4c8d0f0, 0x54e3da4, 0x6a4421c) = (height, items, parent, settings, width))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_12[] = "Incompatible checksums (0x%x vs (0x6d5924e, 0x479af0f, 0xb80938b) = (backColor, height, options, parent, settings, value, version, width))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_13[] = "Incompatible checksums (0x%x vs (0x027ea54, 0xa092419, 0x9d603d2) = (height, iconOffset, name, options, parent, settings, startFrame, version, width))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_14[] = "Incompatible checksums (0x%x vs (0x105b14b, 0xb146145, 0xfee8776) = (initial, maximum, minimum, parent, settings))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_15[] = "Incompatible checksums (0x%x vs (0x3d2aa71, 0xb6da4cc, 0x7b59b43) = (animations, backColour, counter, counters, extensionData, extensionId, extensionPrivate, extensionVersion, fadeIn, fadeOut, flags, identifier, movements, newFlags, parent, preferences, qualifiers, rtf, settings, strings, subApplication, text, values, version))";
static PyObject *__pyx_kp_b_;
static PyObject *__pyx_kp_s_;
static PyObject *__pyx_kp_s_0;
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_kp_s_2;
static PyObject *__pyx_kp_s_3;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_kp_s_5;
static PyObject *__pyx_kp_s_6;
static PyObject *__pyx_kp_s_7;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_kp_s_9;
static PyObject *__pyx_n_s_ANIMATION;
static PyObject *__pyx_n_s_ANIMATION_ALTERNATIVES;
static PyObject *__pyx_n_s_ANIMATION_NAMES;
static PyObject *__pyx_n_s_APPEARING;
static PyObject *__pyx_n_s_AlterableStrings;
static PyObject *__pyx_n_s_AlterableValues;
static PyObject *__pyx_n_s_Animation;
static PyObject *__pyx_n_s_AnimationDirection;
static PyObject *__pyx_n_s_AnimationHeader;
static PyObject *__pyx_n_s_Animations;
static PyObject *__pyx_n_s_Appearing;
static PyObject *__pyx_n_s_AppletProblems;
static PyObject *__pyx_n_s_AttributeError;
static PyObject *__pyx_n_s_AutomaticRotation;
static PyObject *__pyx_n_s_BOUNCING;
static PyObject *__pyx_n_s_BOX_COLLISION;
static PyObject *__pyx_n_s_BackEffects;
static PyObject *__pyx_n_s_Backdrop;
static PyObject *__pyx_n_s_Background;
static PyObject *__pyx_n_s_Background_2;
static PyObject *__pyx_n_s_Backsave;
static PyObject *__pyx_n_s_BitDict;
static PyObject *__pyx_n_s_Border;
static PyObject *__pyx_n_s_Bottom;
static PyObject *__pyx_n_s_BottomAligned;
static PyObject *__pyx_n_s_Bouncing;
static PyObject *__pyx_n_s_Box;
static PyObject *__pyx_n_s_CLIMBING;
static PyObject *__pyx_n_s_COLLISION_MODES;
static PyObject *__pyx_n_s_COUNTER;
static PyObject *__pyx_n_s_COUNTER_FRAMES;
static PyObject *__pyx_n_s_CROUCH_DOWN;
static PyObject *__pyx_n_s_Caption;
static PyObject *__pyx_n_s_Climbing;
static PyObject *__pyx_n_s_ClipSiblings;
static PyObject *__pyx_n_s_CollisionBox;
static PyObject *__pyx_n_s_Correct;
static PyObject *__pyx_n_s_Counter;
static PyObject *__pyx_n_s_Counters;
static PyObject *__pyx_kp_s_Crouch_down;
static PyObject *__pyx_n_s_CustomableSize;
static PyObject *__pyx_n_s_DISAPPEARING;
static PyObject *__pyx_n_s_DISPLAY_NAMES;
static PyObject *__pyx_n_s_DOCK_POSITIONS;
static PyObject *__pyx_n_s_DialogFrame;
static PyObject *__pyx_n_s_DisableClose;
static PyObject *__pyx_n_s_Disappearing;
static PyObject *__pyx_n_s_DisplayInFront;
static PyObject *__pyx_n_s_DoNotCreateAtStart;
static PyObject *__pyx_n_s_DoNotSaveBackground;
static PyObject *__pyx_n_s_Docked;
static PyObject *__pyx_n_s_Docked1;
static PyObject *__pyx_n_s_Docked2;
static PyObject *__pyx_n_s_ELLIPSE_SHAPE;
static PyObject *__pyx_n_s_Ellipse;
static PyObject *__pyx_n_s_FALLING;
static PyObject *__pyx_n_s_FILL_TYPES;
static PyObject *__pyx_n_s_FINE_COLLISION;
static PyObject *__pyx_n_s_FadeIn;
static PyObject *__pyx_n_s_FadeOut;
static PyObject *__pyx_n_s_FakeCollisions;
static PyObject *__pyx_n_s_FakeSprite;
static PyObject *__pyx_n_s_Falling;
static PyObject *__pyx_n_s_Fine;
static PyObject *__pyx_n_s_FineCollisions;
static PyObject *__pyx_n_s_GRADIENT_FILL;
static PyObject *__pyx_n_s_GRADIENT_TYPES;
static PyObject *__pyx_n_s_Global;
static PyObject *__pyx_n_s_Gradient;
static PyObject *__pyx_n_s_HAS_SINGLE_SPEED;
static PyObject *__pyx_n_s_HIDDEN;
static PyObject *__pyx_n_s_HORIZONTAL_BAR;
static PyObject *__pyx_n_s_HORIZONTAL_GRADIENT;
static PyObject *__pyx_n_s_Hidden;
static PyObject *__pyx_n_s_HideOnClose;
static PyObject *__pyx_n_s_Horizontal;
static PyObject *__pyx_n_s_HorizontalBar;
static PyObject *__pyx_n_s_HorizontalCenter;
static PyObject *__pyx_n_s_HorizontalSlider;
static PyObject *__pyx_n_s_INVALID_FONT;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_10;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_11;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_12;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_13;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_14;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_15;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_2;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_3;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_4;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_5;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_6;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_7;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_8;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_9;
static PyObject *__pyx_n_s_IndexError;
static PyObject *__pyx_n_s_InkEffects;
static PyObject *__pyx_n_s_Internal;
static PyObject *__pyx_n_s_InternalBacksave;
static PyObject *__pyx_n_s_InvalidFont;
static PyObject *__pyx_n_s_InverseX;
static PyObject *__pyx_n_s_InverseY;
static PyObject *__pyx_n_s_JUMPING;
static PyObject *__pyx_n_s_Jumping;
static PyObject *__pyx_n_s_KeyError;
static PyObject *__pyx_n_s_Kill;
static PyObject *__pyx_n_s_LADDER_OBSTACLE;
static PyObject *__pyx_n_s_LINE_SHAPE;
static PyObject *__pyx_n_s_LIVES;
static PyObject *__pyx_n_s_Ladder;
static PyObject *__pyx_n_s_Left;
static PyObject *__pyx_n_s_Line;
static PyObject *__pyx_n_s_LoadOnCall;
static PyObject *__pyx_n_s_MDIChild;
static PyObject *__pyx_n_s_MOTIF_FILL;
static PyObject *__pyx_n_s_ManualSleep;
static PyObject *__pyx_n_s_Modal;
static PyObject *__pyx_n_s_Motif;
static PyObject *__pyx_n_s_Movements;
static PyObject *__pyx_n_s_NEW_OBJECT_FLAGS;
static PyObject *__pyx_n_s_NONE_FILL;
static PyObject *__pyx_n_s_NONE_OBSTACLE;
static PyObject *__pyx_n_s_NUMBERS;
static PyObject *__pyx_n_s_NeverKill;
static PyObject *__pyx_n_s_NeverSleep;
static PyObject *__pyx_n_s_None;
static PyObject *__pyx_n_s_Numbers;
static PyObject *__pyx_n_s_OBJECT_FLAGS;
static PyObject *__pyx_n_s_OBJECT_PREFERENCES;
static PyObject *__pyx_n_s_OBSTACLE_TYPES;
static PyObject *__pyx_n_s_ObjectCommon;
static PyObject *__pyx_n_s_ObstaclePlatform;
static PyObject *__pyx_n_s_ObstacleSolid;
static PyObject *__pyx_n_s_PARAGRAPH_FLAGS;
static PyObject *__pyx_n_s_PLATFORM_OBSTACLE;
static PyObject *__pyx_n_s_Paragraph;
static PyObject *__pyx_n_s_PickleError;
static PyObject *__pyx_n_s_Platform;
static PyObject *__pyx_n_s_Popup;
static PyObject *__pyx_n_s_QUESTION;
static PyObject *__pyx_n_s_QuickBackdrop;
static PyObject *__pyx_n_s_QuickDisplay;
static PyObject *__pyx_n_s_RECTANGLE_SHAPE;
static PyObject *__pyx_n_s_RTF;
static PyObject *__pyx_n_s_RTFObject;
static PyObject *__pyx_n_s_RTF_FLAGS;
static PyObject *__pyx_n_s_RUNNING;
static PyObject *__pyx_n_s_Rectangle;
static PyObject *__pyx_n_s_Relief;
static PyObject *__pyx_n_s_Reopen;
static PyObject *__pyx_n_s_Resizable;
static PyObject *__pyx_n_s_Right;
static PyObject *__pyx_n_s_RightAligned;
static PyObject *__pyx_n_s_RunBeforeFadeIn;
static PyObject *__pyx_n_s_RunEvenIfNotActive;
static PyObject *__pyx_n_s_Running;
static PyObject *__pyx_n_s_SCORE;
static PyObject *__pyx_n_s_SHAPE_FLAGS;
static PyObject *__pyx_n_s_SHAPE_TYPES;
static PyObject *__pyx_n_s_SHOOTING;
static PyObject *__pyx_n_s_SOLID_FILL;
static PyObject *__pyx_n_s_SOLID_OBSTACLE;
static PyObject *__pyx_n_s_STAND_UP;
static PyObject *__pyx_n_s_STOPPED;
static PyObject *__pyx_n_s_SUBAPPLICATION;
static PyObject *__pyx_n_s_SUBAPPLICATION_FLAGS;
static PyObject *__pyx_n_s_ScrollingIndependant;
static PyObject *__pyx_n_s_Shape;
static PyObject *__pyx_n_s_ShareGlobals;
static PyObject *__pyx_n_s_ShareLives;
static PyObject *__pyx_n_s_SharePlayerControls;
static PyObject *__pyx_n_s_ShareScores;
static PyObject *__pyx_n_s_Shooting;
static PyObject *__pyx_n_s_Sleep;
static PyObject *__pyx_n_s_Solid;
static PyObject *__pyx_n_s_SolidBackground;
static PyObject *__pyx_n_s_Sprites;
static PyObject *__pyx_kp_s_Stand_up;
static PyObject *__pyx_n_s_Stopped;
static PyObject *__pyx_n_s_Stretch;
static PyObject *__pyx_n_s_SubApplication;
static PyObject *__pyx_n_s_SystemMenu;
static PyObject *__pyx_n_s_TEXT;
static PyObject *__pyx_n_s_TEXT_COUNTER;
static PyObject *__pyx_n_s_TRANSPARENT_OBSTACLE;
static PyObject *__pyx_n_s_TabStop;
static PyObject *__pyx_n_s_Text;
static PyObject *__pyx_n_s_ToolCaption;
static PyObject *__pyx_n_s_Top;
static PyObject *__pyx_n_s_Transitions;
static PyObject *__pyx_n_s_Transparent;
static PyObject *__pyx_kp_s_User_defined_1;
static PyObject *__pyx_kp_s_User_defined_2;
static PyObject *__pyx_kp_s_User_defined_3;
static PyObject *__pyx_kp_s_User_defined_4;
static PyObject *__pyx_kp_s_User_defined_s;
static PyObject *__pyx_n_s_VERTICAL_BAR;
static PyObject *__pyx_n_s_VERTICAL_GRADIENT;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_n_s_Values;
static PyObject *__pyx_n_s_Vertical;
static PyObject *__pyx_n_s_VerticalBar;
static PyObject *__pyx_n_s_VerticalCenter;
static PyObject *__pyx_n_s_VerticalSlider;
static PyObject *__pyx_n_s_VisibleAtStart;
static PyObject *__pyx_n_s_WALKING;
static PyObject *__pyx_n_s_Walking;
static PyObject *__pyx_n_s_WindowProc;
static PyObject *__pyx_kp_s__20;
static PyObject *__pyx_kp_s__21;
static PyObject *__pyx_kp_s__22;
static PyObject *__pyx_n_s_all;
static PyObject *__pyx_n_s_alternative;
static PyObject *__pyx_n_s_animationDict;
static PyObject *__pyx_n_s_build;
static PyObject *__pyx_n_s_byteflag;
static PyObject *__pyx_n_s_checkDefault;
static PyObject *__pyx_n_s_checksum;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_collisionMode;
static PyObject *__pyx_n_s_compat;
static PyObject *__pyx_n_s_copy;
static PyObject *__pyx_n_s_count;
static PyObject *__pyx_n_s_dict;
static PyObject *__pyx_n_s_doc;
static PyObject *__pyx_n_s_e;
static PyObject *__pyx_n_s_enumerate;
static PyObject *__pyx_n_s_fromHandle;
static PyObject *__pyx_n_s_get;
static PyObject *__pyx_n_s_getClosestAnimation;
static PyObject *__pyx_n_s_getFlag;
static PyObject *__pyx_n_s_getFlags;
static PyObject *__pyx_n_s_getIndex;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_n_s_handle;
static PyObject *__pyx_n_s_height;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_image;
static PyObject *__pyx_n_s_images;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_index;
static PyObject *__pyx_n_s_initialize;
static PyObject *__pyx_n_s_keys;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_max;
static PyObject *__pyx_n_s_metaclass;
static PyObject *__pyx_n_s_mmfparser;
static PyObject *__pyx_n_s_mmfparser_bitdict;
static PyObject *__pyx_n_s_mmfparser_bytereader;
static PyObject *__pyx_n_s_mmfparser_data_chunkloaders_move;
static PyObject *__pyx_n_s_mmfparser_data_chunkloaders_obje;
static PyObject *__pyx_kp_s_mmfparser_data_chunkloaders_obje_2;
static PyObject *__pyx_n_s_mmfparser_data_chunkloaders_obje_3;
static PyObject *__pyx_n_s_mmfparser_data_chunkloaders_tran;
static PyObject *__pyx_n_s_module;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_n_s_new_2;
static PyObject *__pyx_kp_s_no_animation_could_be_found_for;
static PyObject *__pyx_n_s_object;
static PyObject *__pyx_n_s_objectType;
static PyObject *__pyx_n_s_obstacleType;
static PyObject *__pyx_n_s_pickle;
static PyObject *__pyx_n_s_prepare;
static PyObject *__pyx_n_s_pyx_PickleError;
static PyObject *__pyx_n_s_pyx_checksum;
static PyObject *__pyx_n_s_pyx_result;
static PyObject *__pyx_n_s_pyx_state;
static PyObject *__pyx_n_s_pyx_type;
static PyObject *__pyx_n_s_pyx_unpickle_AlterableStrings;
static PyObject *__pyx_n_s_pyx_unpickle_AlterableValues;
static PyObject *__pyx_n_s_pyx_unpickle_Animation;
static PyObject *__pyx_n_s_pyx_unpickle_AnimationDirectio;
static PyObject *__pyx_n_s_pyx_unpickle_AnimationHeader;
static PyObject *__pyx_n_s_pyx_unpickle_Backdrop;
static PyObject *__pyx_n_s_pyx_unpickle_Counter;
static PyObject *__pyx_n_s_pyx_unpickle_Counters;
static PyObject *__pyx_n_s_pyx_unpickle_ObjectCommon;
static PyObject *__pyx_n_s_pyx_unpickle_Paragraph;
static PyObject *__pyx_n_s_pyx_unpickle_QuickBackdrop;
static PyObject *__pyx_n_s_pyx_unpickle_RTFObject;
static PyObject *__pyx_n_s_pyx_unpickle_Shape;
static PyObject *__pyx_n_s_pyx_unpickle_SubApplication;
static PyObject *__pyx_n_s_pyx_unpickle_Text;
static PyObject *__pyx_n_s_pyx_unpickle__Background;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_qualname;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_read;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_references;
static PyObject *__pyx_n_s_setFlags;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_kp_s_stringsource;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_value;
static PyObject *__pyx_n_s_width;
static PyObject *__pyx_n_s_write;
static PyObject *__pyx_n_s_writeByte;
static PyObject *__pyx_n_s_writeColor;
static PyObject *__pyx_n_s_writeInt;
static PyObject *__pyx_n_s_writeReader;
static PyObject *__pyx_n_s_writeShort;
static PyObject *__pyx_n_s_writeString;
static PyObject *__pyx_n_s_xrange;
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_4__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_6__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_6__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_8__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6getImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_images); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_8getGradientType(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_10getFill(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_12getShape(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_14__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_16__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_getCollisionMode(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_2getObstacleType(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_4getImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self, PyObject *__pyx_v_imageBank); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_6isBackground(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_4__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_4getImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_imageBank); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_8__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_4getImages(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_images); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_6getIndex(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_8getName(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_12__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_getClosestAnimation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_index, PyObject *__pyx_v_animationDict, PyObject *__pyx_v_count); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_6fromName(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_4getFont(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_fonts); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6getImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_images); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8getDisplayType(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_10__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_12__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_6getFont(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_fonts); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5items___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_6__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_8__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_8__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4getDockedPosition(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_4__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_6__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6isBackground(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_2__pyx_unpickle_AlterableValues(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4__pyx_unpickle_AlterableStrings(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_6__pyx_unpickle_Shape(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8__pyx_unpickle__Background(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_10__pyx_unpickle_QuickBackdrop(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12__pyx_unpickle_Backdrop(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14__pyx_unpickle_AnimationDirection(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16__pyx_unpickle_Animation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18__pyx_unpickle_AnimationHeader(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_20__pyx_unpickle_Counters(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_22__pyx_unpickle_Paragraph(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_24__pyx_unpickle_Text(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_26__pyx_unpickle_RTFObject(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_28__pyx_unpickle_SubApplication(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_30__pyx_unpickle_Counter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_32__pyx_unpickle_ObjectCommon(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AlterableValues(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Shape(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects__Background(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Backdrop(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Animation(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Counters(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Paragraph(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Text(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_RTFObject(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_SubApplication(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Counter(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_get = {0, &__pyx_n_s_get, 0, 0, 0};
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_keys = {0, &__pyx_n_s_keys, 0, 0, 0};
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_5;
static PyObject *__pyx_int_6;
static PyObject *__pyx_int_7;
static PyObject *__pyx_int_8;
static PyObject *__pyx_int_9;
static PyObject *__pyx_int_10;
static PyObject *__pyx_int_11;
static PyObject *__pyx_int_12;
static PyObject *__pyx_int_20;
static PyObject *__pyx_int_284;
static PyObject *__pyx_int_2615892;
static PyObject *__pyx_int_4075231;
static PyObject *__pyx_int_17150283;
static PyObject *__pyx_int_18161464;
static PyObject *__pyx_int_28387740;
static PyObject *__pyx_int_32651745;
static PyObject *__pyx_int_42426246;
static PyObject *__pyx_int_48055331;
static PyObject *__pyx_int_57734563;
static PyObject *__pyx_int_64137841;
static PyObject *__pyx_int_74401274;
static PyObject *__pyx_int_75083535;
static PyObject *__pyx_int_76934893;
static PyObject *__pyx_int_80269552;
static PyObject *__pyx_int_89013668;
static PyObject *__pyx_int_94275802;
static PyObject *__pyx_int_106150038;
static PyObject *__pyx_int_111428124;
static PyObject *__pyx_int_114659918;
static PyObject *__pyx_int_115227617;
static PyObject *__pyx_int_120560465;
static PyObject *__pyx_int_122448880;
static PyObject *__pyx_int_129342275;
static PyObject *__pyx_int_154801377;
static PyObject *__pyx_int_156954679;
static PyObject *__pyx_int_158315977;
static PyObject *__pyx_int_165020626;
static PyObject *__pyx_int_165111918;
static PyObject *__pyx_int_166494031;
static PyObject *__pyx_int_167905989;
static PyObject *__pyx_int_168371225;
static PyObject *__pyx_int_180605063;
static PyObject *__pyx_int_185884997;
static PyObject *__pyx_int_191508975;
static PyObject *__pyx_int_191734988;
static PyObject *__pyx_int_192975755;
static PyObject *__pyx_int_204924956;
static PyObject *__pyx_int_219621915;
static PyObject *__pyx_int_223780212;
static PyObject *__pyx_int_230413870;
static PyObject *__pyx_int_241634478;
static PyObject *__pyx_int_250619816;
static PyObject *__pyx_int_255770676;
static PyObject *__pyx_int_256301260;
static PyObject *__pyx_int_267290486;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__5;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_codeobj__19;
static PyObject *__pyx_codeobj__35;
static PyObject *__pyx_codeobj__37;
static PyObject *__pyx_codeobj__39;
static PyObject *__pyx_codeobj__41;
static PyObject *__pyx_codeobj__43;
static PyObject *__pyx_codeobj__45;
static PyObject *__pyx_codeobj__47;
static PyObject *__pyx_codeobj__49;
static PyObject *__pyx_codeobj__51;
static PyObject *__pyx_codeobj__53;
static PyObject *__pyx_codeobj__55;
static PyObject *__pyx_codeobj__57;
static PyObject *__pyx_codeobj__59;
static PyObject *__pyx_codeobj__61;
static PyObject *__pyx_codeobj__63;
static PyObject *__pyx_codeobj__65;
/* Late includes */

/* "mmfparser/data/chunkloaders/objects.pyx":30
 * cdef class AlterableValues(DataLoader):
 *     cdef public list items
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.items = [reader.readInt()]
 * #        print self.items
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 30, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_1read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":31
 *     cdef public list items
 *     cpdef read(self, ByteReader reader):
 *         self.items = [reader.readInt()]             # <<<<<<<<<<<<<<
 * #        print self.items
 * #            for _ in xrange(reader.readShort(True))]
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":30
 * cdef class AlterableValues(DataLoader):
 *     cdef public list items
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.items = [reader.readInt()]
 * #        print self.items
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableValues.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 30, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableValues.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":35
 * #            for _ in xrange(reader.readShort(True))]
 * #                print 'Xrange Alt Value'
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(len(self.items))
 *         for item in self.items:
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 35, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_2write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_v_item = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":36
 * #                print 'Xrange Alt Value'
 *     def write(self, ByteReader reader):
 *         reader.writeShort(len(self.items))             # <<<<<<<<<<<<<<
 *         for item in self.items:
 *             reader.writeInt(item)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_v_self->items;
  __Pyx_INCREF(__pyx_t_3);
  if (unlikely(__pyx_t_3 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 36, __pyx_L1_error)
  }
  __pyx_t_4 = PyList_GET_SIZE(__pyx_t_3); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":37
 *     def write(self, ByteReader reader):
 *         reader.writeShort(len(self.items))
 *         for item in self.items:             # <<<<<<<<<<<<<<
 *             reader.writeInt(item)
 * 
 */
  if (unlikely(__pyx_v_self->items == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 37, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->items; __Pyx_INCREF(__pyx_t_1); __pyx_t_4 = 0;
  for (;;) {
    if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 37, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":38
 *         reader.writeShort(len(self.items))
 *         for item in self.items:
 *             reader.writeInt(item)             # <<<<<<<<<<<<<<
 * 
 * cdef class AlterableStrings(DataLoader):
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_v_item) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_item);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 38, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":37
 *     def write(self, ByteReader reader):
 *         reader.writeShort(len(self.items))
 *         for item in self.items:             # <<<<<<<<<<<<<<
 *             reader.writeInt(item)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":35
 * #            for _ in xrange(reader.readShort(True))]
 * #                print 'Xrange Alt Value'
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(len(self.items))
 *         for item in self.items:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableValues.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":29
 * 
 * cdef class AlterableValues(DataLoader):
 *     cdef public list items             # <<<<<<<<<<<<<<
 *     cpdef read(self, ByteReader reader):
 *         self.items = [reader.readInt()]
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->items);
  __pyx_r = __pyx_v_self->items;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 29, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableValues.items.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_4__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_4__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.items, self.parent, self.settings)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->items);
  __Pyx_GIVEREF(__pyx_v_self->items);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self->items);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_self->__pyx_base.settings);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.items, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = (self.items, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.items, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, None), state
 */
  /*else*/ {
    __pyx_t_2 = (__pyx_v_self->items != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_2 != 0);
    __pyx_t_3 = __pyx_t_5;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_3;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, None), state
 *     else:
 */
  __pyx_t_3 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":13
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_AlterableValues); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_180605063);
    __Pyx_GIVEREF(__pyx_int_180605063);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_180605063);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, None), state
 *     else:
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_AlterableValues__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_AlterableValues); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_180605063);
    __Pyx_GIVEREF(__pyx_int_180605063);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_180605063);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __pyx_t_6 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableValues.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_AlterableValues__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_6__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_6__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_AlterableValues__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AlterableValues__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_AlterableValues, (type(self), 0xac3d087, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_AlterableValues__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableValues.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":43
 *     cdef public list items
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.items = []
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 43, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 43, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":44
 * 
 *     cpdef initialize(self):
 *         self.items = []             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":43
 *     cdef public list items
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.items = []
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableStrings.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableStrings.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":46
 *         self.items = []
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.items = [self.readString(reader)
 *             for _ in xrange(reader.readShort(True))]
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  CYTHON_UNUSED int __pyx_v__;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 46, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":47
 * 
 *     cpdef read(self, ByteReader reader):
 *         self.items = [self.readString(reader)             # <<<<<<<<<<<<<<
 *             for _ in xrange(reader.readShort(True))]
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "mmfparser/data/chunkloaders/objects.pyx":48
 *     cpdef read(self, ByteReader reader):
 *         self.items = [self.readString(reader)
 *             for _ in xrange(reader.readShort(True))]             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
  __pyx_t_6.__pyx_n = 1;
  __pyx_t_6.asUnsigned = 1;
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_6); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 48, __pyx_L1_error)
  __pyx_t_7 = __pyx_t_5;
  for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
    __pyx_v__ = __pyx_t_8;

    /* "mmfparser/data/chunkloaders/objects.pyx":47
 * 
 *     cpdef read(self, ByteReader reader):
 *         self.items = [self.readString(reader)             # <<<<<<<<<<<<<<
 *             for _ in xrange(reader.readShort(True))]
 * 
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.readString(((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_v_self), __pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 47, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":46
 *         self.items = []
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.items = [self.readString(reader)
 *             for _ in xrange(reader.readShort(True))]
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableStrings.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 46, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableStrings.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":50
 *             for _ in xrange(reader.readShort(True))]
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(len(self.items))
 *         for item in self.items:
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 50, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_4write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_v_item = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":51
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeShort(len(self.items))             # <<<<<<<<<<<<<<
 *         for item in self.items:
 *             reader.writeString(item)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_v_self->items;
  __Pyx_INCREF(__pyx_t_3);
  if (unlikely(__pyx_t_3 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 51, __pyx_L1_error)
  }
  __pyx_t_4 = PyList_GET_SIZE(__pyx_t_3); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":52
 *     def write(self, ByteReader reader):
 *         reader.writeShort(len(self.items))
 *         for item in self.items:             # <<<<<<<<<<<<<<
 *             reader.writeString(item)
 * 
 */
  if (unlikely(__pyx_v_self->items == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 52, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->items; __Pyx_INCREF(__pyx_t_1); __pyx_t_4 = 0;
  for (;;) {
    if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely(0 < 0)) __PYX_ERR(0, 52, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 52, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":53
 *         reader.writeShort(len(self.items))
 *         for item in self.items:
 *             reader.writeString(item)             # <<<<<<<<<<<<<<
 * 
 * LINE_SHAPE = 1
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeString); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_v_item) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_item);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 53, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":52
 *     def write(self, ByteReader reader):
 *         reader.writeShort(len(self.items))
 *         for item in self.items:             # <<<<<<<<<<<<<<
 *             reader.writeString(item)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":50
 *             for _ in xrange(reader.readShort(True))]
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(len(self.items))
 *         for item in self.items:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableStrings.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":41
 * 
 * cdef class AlterableStrings(DataLoader):
 *     cdef public list items             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->items);
  __pyx_r = __pyx_v_self->items;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 41, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableStrings.items.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_6__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_6__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.items, self.parent, self.settings)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->items);
  __Pyx_GIVEREF(__pyx_v_self->items);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self->items);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_self->__pyx_base.settings);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.items, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = (self.items, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.items, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, None), state
 */
  /*else*/ {
    __pyx_t_2 = (__pyx_v_self->items != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_2 != 0);
    __pyx_t_3 = __pyx_t_5;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_3;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, None), state
 *     else:
 */
  __pyx_t_3 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":13
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_AlterableStrings); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_180605063);
    __Pyx_GIVEREF(__pyx_int_180605063);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_180605063);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, None), state
 *     else:
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_AlterableStrings__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_AlterableStrings); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_180605063);
    __Pyx_GIVEREF(__pyx_int_180605063);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_180605063);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __pyx_t_6 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableStrings.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_AlterableStrings__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_8__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_8__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_AlterableStrings__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AlterableStrings__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_AlterableStrings, (type(self), 0xac3d087, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_AlterableStrings__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AlterableStrings.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":101
 *         int image
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.lineFlags = SHAPE_FLAGS.copy()
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_5Shape_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 101, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 101, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":102
 * 
 *     cpdef initialize(self):
 *         self.lineFlags = SHAPE_FLAGS.copy()             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SHAPE_FLAGS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lineFlags);
  __Pyx_DECREF(__pyx_v_self->lineFlags);
  __pyx_v_self->lineFlags = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":101
 *         int image
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.lineFlags = SHAPE_FLAGS.copy()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_5Shape_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":104
 *         self.lineFlags = SHAPE_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.borderSize = reader.readShort()
 *         self.borderColor = reader.readColor()
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_5Shape_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 104, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":105
 * 
 *     cpdef read(self, ByteReader reader):
 *         self.borderSize = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.borderColor = reader.readColor()
 *         self.shape = reader.readShort()
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 105, __pyx_L1_error)
  __pyx_v_self->borderSize = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":106
 *     cpdef read(self, ByteReader reader):
 *         self.borderSize = reader.readShort()
 *         self.borderColor = reader.readColor()             # <<<<<<<<<<<<<<
 *         self.shape = reader.readShort()
 *         self.fillType = reader.readShort()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readColor(__pyx_v_reader, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->borderColor);
  __Pyx_DECREF(__pyx_v_self->borderColor);
  __pyx_v_self->borderColor = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":107
 *         self.borderSize = reader.readShort()
 *         self.borderColor = reader.readColor()
 *         self.shape = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.fillType = reader.readShort()
 * 
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 107, __pyx_L1_error)
  __pyx_v_self->shape = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":108
 *         self.borderColor = reader.readColor()
 *         self.shape = reader.readShort()
 *         self.fillType = reader.readShort()             # <<<<<<<<<<<<<<
 * 
 *         if self.shape == LINE_SHAPE:
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 108, __pyx_L1_error)
  __pyx_v_self->fillType = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":110
 *         self.fillType = reader.readShort()
 * 
 *         if self.shape == LINE_SHAPE:             # <<<<<<<<<<<<<<
 *             self.lineFlags.setFlags(reader.readShort(True))
 *         elif self.fillType == SOLID_FILL:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_LINE_SHAPE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":111
 * 
 *         if self.shape == LINE_SHAPE:
 *             self.lineFlags.setFlags(reader.readShort(True))             # <<<<<<<<<<<<<<
 *         elif self.fillType == SOLID_FILL:
 *             self.color1 = reader.readColor()
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->lineFlags, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7.__pyx_n = 1;
    __pyx_t_7.asUnsigned = 1;
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_7); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 111, __pyx_L1_error)
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 111, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":110
 *         self.fillType = reader.readShort()
 * 
 *         if self.shape == LINE_SHAPE:             # <<<<<<<<<<<<<<
 *             self.lineFlags.setFlags(reader.readShort(True))
 *         elif self.fillType == SOLID_FILL:
 */
    goto __pyx_L3;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":112
 *         if self.shape == LINE_SHAPE:
 *             self.lineFlags.setFlags(reader.readShort(True))
 *         elif self.fillType == SOLID_FILL:             # <<<<<<<<<<<<<<
 *             self.color1 = reader.readColor()
 *         elif self.fillType == GRADIENT_FILL:
 */
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->fillType); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SOLID_FILL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":113
 *             self.lineFlags.setFlags(reader.readShort(True))
 *         elif self.fillType == SOLID_FILL:
 *             self.color1 = reader.readColor()             # <<<<<<<<<<<<<<
 *         elif self.fillType == GRADIENT_FILL:
 *             self.color1 = reader.readColor()
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readColor(__pyx_v_reader, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->color1);
    __Pyx_DECREF(__pyx_v_self->color1);
    __pyx_v_self->color1 = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":112
 *         if self.shape == LINE_SHAPE:
 *             self.lineFlags.setFlags(reader.readShort(True))
 *         elif self.fillType == SOLID_FILL:             # <<<<<<<<<<<<<<
 *             self.color1 = reader.readColor()
 *         elif self.fillType == GRADIENT_FILL:
 */
    goto __pyx_L3;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":114
 *         elif self.fillType == SOLID_FILL:
 *             self.color1 = reader.readColor()
 *         elif self.fillType == GRADIENT_FILL:             # <<<<<<<<<<<<<<
 *             self.color1 = reader.readColor()
 *             self.color2 = reader.readColor()
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->fillType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GRADIENT_FILL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":115
 *             self.color1 = reader.readColor()
 *         elif self.fillType == GRADIENT_FILL:
 *             self.color1 = reader.readColor()             # <<<<<<<<<<<<<<
 *             self.color2 = reader.readColor()
 *             self.gradientFlags = reader.readShort()
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readColor(__pyx_v_reader, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_v_self->color1);
    __Pyx_DECREF(__pyx_v_self->color1);
    __pyx_v_self->color1 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":116
 *         elif self.fillType == GRADIENT_FILL:
 *             self.color1 = reader.readColor()
 *             self.color2 = reader.readColor()             # <<<<<<<<<<<<<<
 *             self.gradientFlags = reader.readShort()
 *         elif self.fillType == MOTIF_FILL:
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readColor(__pyx_v_reader, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_v_self->color2);
    __Pyx_DECREF(__pyx_v_self->color2);
    __pyx_v_self->color2 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":117
 *             self.color1 = reader.readColor()
 *             self.color2 = reader.readColor()
 *             self.gradientFlags = reader.readShort()             # <<<<<<<<<<<<<<
 *         elif self.fillType == MOTIF_FILL:
 *             self.image = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 117, __pyx_L1_error)
    __pyx_v_self->gradientFlags = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":114
 *         elif self.fillType == SOLID_FILL:
 *             self.color1 = reader.readColor()
 *         elif self.fillType == GRADIENT_FILL:             # <<<<<<<<<<<<<<
 *             self.color1 = reader.readColor()
 *             self.color2 = reader.readColor()
 */
    goto __pyx_L3;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":118
 *             self.color2 = reader.readColor()
 *             self.gradientFlags = reader.readShort()
 *         elif self.fillType == MOTIF_FILL:             # <<<<<<<<<<<<<<
 *             self.image = reader.readShort()
 * 
 */
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->fillType); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MOTIF_FILL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":119
 *             self.gradientFlags = reader.readShort()
 *         elif self.fillType == MOTIF_FILL:
 *             self.image = reader.readShort()             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 119, __pyx_L1_error)
    __pyx_v_self->image = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":118
 *             self.color2 = reader.readColor()
 *             self.gradientFlags = reader.readShort()
 *         elif self.fillType == MOTIF_FILL:             # <<<<<<<<<<<<<<
 *             self.image = reader.readShort()
 * 
 */
  }
  __pyx_L3:;

  /* "mmfparser/data/chunkloaders/objects.pyx":104
 *         self.lineFlags = SHAPE_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.borderSize = reader.readShort()
 *         self.borderColor = reader.readColor()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 104, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_5Shape_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":121
 *             self.image = reader.readShort()
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.borderSize)
 *         reader.writeColor(self.borderColor)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 121, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_4write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":122
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeShort(self.borderSize)             # <<<<<<<<<<<<<<
 *         reader.writeColor(self.borderColor)
 *         reader.writeShort(self.shape)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->borderSize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":123
 *     def write(self, ByteReader reader):
 *         reader.writeShort(self.borderSize)
 *         reader.writeColor(self.borderColor)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.shape)
 *         reader.writeShort(self.fillType)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeColor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_self->borderColor) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->borderColor);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":124
 *         reader.writeShort(self.borderSize)
 *         reader.writeColor(self.borderColor)
 *         reader.writeShort(self.shape)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.fillType)
 *         if self.shape == LINE_SHAPE:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->shape); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":125
 *         reader.writeColor(self.borderColor)
 *         reader.writeShort(self.shape)
 *         reader.writeShort(self.fillType)             # <<<<<<<<<<<<<<
 *         if self.shape == LINE_SHAPE:
 *             reader.writeShort(self.lineFlags.getFlags())
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->fillType); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":126
 *         reader.writeShort(self.shape)
 *         reader.writeShort(self.fillType)
 *         if self.shape == LINE_SHAPE:             # <<<<<<<<<<<<<<
 *             reader.writeShort(self.lineFlags.getFlags())
 *         elif self.fillType == SOLID_FILL:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_LINE_SHAPE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_5) {

    /* "mmfparser/data/chunkloaders/objects.pyx":127
 *         reader.writeShort(self.fillType)
 *         if self.shape == LINE_SHAPE:
 *             reader.writeShort(self.lineFlags.getFlags())             # <<<<<<<<<<<<<<
 *         elif self.fillType == SOLID_FILL:
 *             reader.writeColor(self.color1)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->lineFlags, __pyx_n_s_getFlags); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 127, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":126
 *         reader.writeShort(self.shape)
 *         reader.writeShort(self.fillType)
 *         if self.shape == LINE_SHAPE:             # <<<<<<<<<<<<<<
 *             reader.writeShort(self.lineFlags.getFlags())
 *         elif self.fillType == SOLID_FILL:
 */
    goto __pyx_L3;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":128
 *         if self.shape == LINE_SHAPE:
 *             reader.writeShort(self.lineFlags.getFlags())
 *         elif self.fillType == SOLID_FILL:             # <<<<<<<<<<<<<<
 *             reader.writeColor(self.color1)
 *         elif self.fillType == GRADIENT_FILL:
 */
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->fillType); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SOLID_FILL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "mmfparser/data/chunkloaders/objects.pyx":129
 *             reader.writeShort(self.lineFlags.getFlags())
 *         elif self.fillType == SOLID_FILL:
 *             reader.writeColor(self.color1)             # <<<<<<<<<<<<<<
 *         elif self.fillType == GRADIENT_FILL:
 *             reader.writeColor(self.color1)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeColor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_self->color1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->color1);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":128
 *         if self.shape == LINE_SHAPE:
 *             reader.writeShort(self.lineFlags.getFlags())
 *         elif self.fillType == SOLID_FILL:             # <<<<<<<<<<<<<<
 *             reader.writeColor(self.color1)
 *         elif self.fillType == GRADIENT_FILL:
 */
    goto __pyx_L3;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":130
 *         elif self.fillType == SOLID_FILL:
 *             reader.writeColor(self.color1)
 *         elif self.fillType == GRADIENT_FILL:             # <<<<<<<<<<<<<<
 *             reader.writeColor(self.color1)
 *             reader.writeColor(self.color2)
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->fillType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_GRADIENT_FILL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_5) {

    /* "mmfparser/data/chunkloaders/objects.pyx":131
 *             reader.writeColor(self.color1)
 *         elif self.fillType == GRADIENT_FILL:
 *             reader.writeColor(self.color1)             # <<<<<<<<<<<<<<
 *             reader.writeColor(self.color2)
 *             reader.writeShort(self.gradientFlags)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeColor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_v_self->color1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->color1);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 131, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":132
 *         elif self.fillType == GRADIENT_FILL:
 *             reader.writeColor(self.color1)
 *             reader.writeColor(self.color2)             # <<<<<<<<<<<<<<
 *             reader.writeShort(self.gradientFlags)
 *         elif self.fillType == MOTIF_FILL:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeColor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_v_self->color2) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->color2);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 132, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":133
 *             reader.writeColor(self.color1)
 *             reader.writeColor(self.color2)
 *             reader.writeShort(self.gradientFlags)             # <<<<<<<<<<<<<<
 *         elif self.fillType == MOTIF_FILL:
 *             reader.writeShort(self.image)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->gradientFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 133, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":130
 *         elif self.fillType == SOLID_FILL:
 *             reader.writeColor(self.color1)
 *         elif self.fillType == GRADIENT_FILL:             # <<<<<<<<<<<<<<
 *             reader.writeColor(self.color1)
 *             reader.writeColor(self.color2)
 */
    goto __pyx_L3;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":134
 *             reader.writeColor(self.color2)
 *             reader.writeShort(self.gradientFlags)
 *         elif self.fillType == MOTIF_FILL:             # <<<<<<<<<<<<<<
 *             reader.writeShort(self.image)
 * 
 */
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->fillType); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_MOTIF_FILL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "mmfparser/data/chunkloaders/objects.pyx":135
 *             reader.writeShort(self.gradientFlags)
 *         elif self.fillType == MOTIF_FILL:
 *             reader.writeShort(self.image)             # <<<<<<<<<<<<<<
 * 
 *     def getImage(self, images):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->image); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":134
 *             reader.writeColor(self.color2)
 *             reader.writeShort(self.gradientFlags)
 *         elif self.fillType == MOTIF_FILL:             # <<<<<<<<<<<<<<
 *             reader.writeShort(self.image)
 * 
 */
  }
  __pyx_L3:;

  /* "mmfparser/data/chunkloaders/objects.pyx":121
 *             self.image = reader.readShort()
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.borderSize)
 *         reader.writeColor(self.borderColor)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":137
 *             reader.writeShort(self.image)
 * 
 *     def getImage(self, images):             # <<<<<<<<<<<<<<
 *         return images.fromHandle(self.image)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_7getImage(PyObject *__pyx_v_self, PyObject *__pyx_v_images); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_7getImage(PyObject *__pyx_v_self, PyObject *__pyx_v_images) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getImage (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6getImage(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_images));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6getImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_images) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getImage", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":138
 * 
 *     def getImage(self, images):
 *         return images.fromHandle(self.image)             # <<<<<<<<<<<<<<
 * 
 *     def getGradientType(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_images, __pyx_n_s_fromHandle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->image); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":137
 *             reader.writeShort(self.image)
 * 
 *     def getImage(self, images):             # <<<<<<<<<<<<<<
 *         return images.fromHandle(self.image)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.getImage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":140
 *         return images.fromHandle(self.image)
 * 
 *     def getGradientType(self):             # <<<<<<<<<<<<<<
 *         return GRADIENT_TYPES[self.gradientFlags]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9getGradientType(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9getGradientType(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getGradientType (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_8getGradientType(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_8getGradientType(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getGradientType", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":141
 * 
 *     def getGradientType(self):
 *         return GRADIENT_TYPES[self.gradientFlags]             # <<<<<<<<<<<<<<
 * 
 *     def getFill(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_GRADIENT_TYPES); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_self->gradientFlags, int, 1, __Pyx_PyInt_From_int, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":140
 *         return images.fromHandle(self.image)
 * 
 *     def getGradientType(self):             # <<<<<<<<<<<<<<
 *         return GRADIENT_TYPES[self.gradientFlags]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.getGradientType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":143
 *         return GRADIENT_TYPES[self.gradientFlags]
 * 
 *     def getFill(self):             # <<<<<<<<<<<<<<
 *         return FILL_TYPES[self.fillType]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11getFill(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11getFill(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getFill (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_10getFill(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_10getFill(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getFill", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":144
 * 
 *     def getFill(self):
 *         return FILL_TYPES[self.fillType]             # <<<<<<<<<<<<<<
 * 
 *     def getShape(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_FILL_TYPES); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_self->fillType, int, 1, __Pyx_PyInt_From_int, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":143
 *         return GRADIENT_TYPES[self.gradientFlags]
 * 
 *     def getFill(self):             # <<<<<<<<<<<<<<
 *         return FILL_TYPES[self.fillType]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.getFill", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":146
 *         return FILL_TYPES[self.fillType]
 * 
 *     def getShape(self):             # <<<<<<<<<<<<<<
 *         return SHAPE_TYPES[self.shape]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_13getShape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_13getShape(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getShape (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_12getShape(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_12getShape(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getShape", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":147
 * 
 *     def getShape(self):
 *         return SHAPE_TYPES[self.shape]             # <<<<<<<<<<<<<<
 * 
 * NONE_OBSTACLE = 0
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_SHAPE_TYPES); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_self->shape, int, 1, __Pyx_PyInt_From_int, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":146
 *         return FILL_TYPES[self.fillType]
 * 
 *     def getShape(self):             # <<<<<<<<<<<<<<
 *         return SHAPE_TYPES[self.shape]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.getShape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":92
 * cdef class Shape(DataLoader):
 *     cdef public:
 *         int borderSize             # <<<<<<<<<<<<<<
 *         object borderColor
 *         int shape
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->borderSize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.borderSize.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 92, __pyx_L1_error)
  __pyx_v_self->borderSize = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.borderSize.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":93
 *     cdef public:
 *         int borderSize
 *         object borderColor             # <<<<<<<<<<<<<<
 *         int shape
 *         int fillType
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->borderColor);
  __pyx_r = __pyx_v_self->borderColor;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->borderColor);
  __Pyx_DECREF(__pyx_v_self->borderColor);
  __pyx_v_self->borderColor = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->borderColor);
  __Pyx_DECREF(__pyx_v_self->borderColor);
  __pyx_v_self->borderColor = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":94
 *         int borderSize
 *         object borderColor
 *         int shape             # <<<<<<<<<<<<<<
 *         int fillType
 *         object lineFlags
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.shape.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 94, __pyx_L1_error)
  __pyx_v_self->shape = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.shape.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":95
 *         object borderColor
 *         int shape
 *         int fillType             # <<<<<<<<<<<<<<
 *         object lineFlags
 *         object color1, color2
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->fillType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.fillType.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 95, __pyx_L1_error)
  __pyx_v_self->fillType = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.fillType.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":96
 *         int shape
 *         int fillType
 *         object lineFlags             # <<<<<<<<<<<<<<
 *         object color1, color2
 *         int gradientFlags
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->lineFlags);
  __pyx_r = __pyx_v_self->lineFlags;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->lineFlags);
  __Pyx_DECREF(__pyx_v_self->lineFlags);
  __pyx_v_self->lineFlags = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->lineFlags);
  __Pyx_DECREF(__pyx_v_self->lineFlags);
  __pyx_v_self->lineFlags = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":97
 *         int fillType
 *         object lineFlags
 *         object color1, color2             # <<<<<<<<<<<<<<
 *         int gradientFlags
 *         int image
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->color1);
  __pyx_r = __pyx_v_self->color1;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->color1);
  __Pyx_DECREF(__pyx_v_self->color1);
  __pyx_v_self->color1 = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->color1);
  __Pyx_DECREF(__pyx_v_self->color1);
  __pyx_v_self->color1 = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->color2);
  __pyx_r = __pyx_v_self->color2;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->color2);
  __Pyx_DECREF(__pyx_v_self->color2);
  __pyx_v_self->color2 = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->color2);
  __Pyx_DECREF(__pyx_v_self->color2);
  __pyx_v_self->color2 = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":98
 *         object lineFlags
 *         object color1, color2
 *         int gradientFlags             # <<<<<<<<<<<<<<
 *         int image
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->gradientFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.gradientFlags.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 98, __pyx_L1_error)
  __pyx_v_self->gradientFlags = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.gradientFlags.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":99
 *         object color1, color2
 *         int gradientFlags
 *         int image             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->image); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.image.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 99, __pyx_L1_error)
  __pyx_v_self->image = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.image.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_15__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_14__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_14__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.borderColor, self.borderSize, self.color1, self.color2, self.fillType, self.gradientFlags, self.image, self.lineFlags, self.parent, self.settings, self.shape)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->borderSize); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->fillType); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->gradientFlags); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->image); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->shape); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(11); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_v_self->borderColor);
  __Pyx_GIVEREF(__pyx_v_self->borderColor);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_self->borderColor);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->color1);
  __Pyx_GIVEREF(__pyx_v_self->color1);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_self->color1);
  __Pyx_INCREF(__pyx_v_self->color2);
  __Pyx_GIVEREF(__pyx_v_self->color2);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_v_self->color2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 5, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 6, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_self->lineFlags);
  __Pyx_GIVEREF(__pyx_v_self->lineFlags);
  PyTuple_SET_ITEM(__pyx_t_6, 7, __pyx_v_self->lineFlags);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_6, 8, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_6, 9, __pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 10, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.borderColor, self.borderSize, self.color1, self.color2, self.fillType, self.gradientFlags, self.image, self.lineFlags, self.parent, self.settings, self.shape)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_6 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_v__dict = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "(tree fragment)":7
 *     state = (self.borderColor, self.borderSize, self.color1, self.color2, self.fillType, self.gradientFlags, self.image, self.lineFlags, self.parent, self.settings, self.shape)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_7 = (__pyx_v__dict != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v__dict);
    __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.borderColor is not None or self.color1 is not None or self.color2 is not None or self.lineFlags is not None or self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.borderColor, self.borderSize, self.color1, self.color2, self.fillType, self.gradientFlags, self.image, self.lineFlags, self.parent, self.settings, self.shape)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.borderColor is not None or self.color1 is not None or self.color2 is not None or self.lineFlags is not None or self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, None), state
 */
  /*else*/ {
    __pyx_t_7 = (__pyx_v_self->borderColor != Py_None);
    __pyx_t_9 = (__pyx_t_7 != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_9 = (__pyx_v_self->color1 != Py_None);
    __pyx_t_7 = (__pyx_t_9 != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_8 = __pyx_t_7;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_7 = (__pyx_v_self->color2 != Py_None);
    __pyx_t_9 = (__pyx_t_7 != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_9 = (__pyx_v_self->lineFlags != Py_None);
    __pyx_t_7 = (__pyx_t_9 != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_8 = __pyx_t_7;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_7 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_9 = (__pyx_t_7 != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_9 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_7 = (__pyx_t_9 != 0);
    __pyx_t_8 = __pyx_t_7;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_8;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.borderColor is not None or self.color1 is not None or self.color2 is not None or self.lineFlags is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, None), state
 *     else:
 */
  __pyx_t_8 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":13
 *         use_setstate = self.borderColor is not None or self.color1 is not None or self.color2 is not None or self.lineFlags is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_Shape); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_219621915);
    __Pyx_GIVEREF(__pyx_int_219621915);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_219621915);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_6, 2, Py_None);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.borderColor is not None or self.color1 is not None or self.color2 is not None or self.lineFlags is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, None), state
 *     else:
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Shape__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_Shape); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_219621915);
    __Pyx_GIVEREF(__pyx_int_219621915);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_219621915);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
    __pyx_t_4 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Shape__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_17__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_16__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_5Shape_16__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Shape__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Shape__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Shape, (type(self), 0xd172a1b, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Shape__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Shape.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":172
 * 
 * cdef class _Background(DataLoader):
 *     def getCollisionMode(self):             # <<<<<<<<<<<<<<
 *         return COLLISION_MODES[self.collisionMode]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_1getCollisionMode(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_1getCollisionMode(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getCollisionMode (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_getCollisionMode(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_getCollisionMode(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getCollisionMode", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":173
 * cdef class _Background(DataLoader):
 *     def getCollisionMode(self):
 *         return COLLISION_MODES[self.collisionMode]             # <<<<<<<<<<<<<<
 * 
 *     def getObstacleType(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_COLLISION_MODES); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_collisionMode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":172
 * 
 * cdef class _Background(DataLoader):
 *     def getCollisionMode(self):             # <<<<<<<<<<<<<<
 *         return COLLISION_MODES[self.collisionMode]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects._Background.getCollisionMode", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":175
 *         return COLLISION_MODES[self.collisionMode]
 * 
 *     def getObstacleType(self):             # <<<<<<<<<<<<<<
 *         return OBSTACLE_TYPES[self.obstacleType]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_3getObstacleType(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_3getObstacleType(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getObstacleType (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_2getObstacleType(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_2getObstacleType(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getObstacleType", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":176
 * 
 *     def getObstacleType(self):
 *         return OBSTACLE_TYPES[self.obstacleType]             # <<<<<<<<<<<<<<
 * 
 *     def getImage(self, imageBank):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_OBSTACLE_TYPES); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_obstacleType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":175
 *         return COLLISION_MODES[self.collisionMode]
 * 
 *     def getObstacleType(self):             # <<<<<<<<<<<<<<
 *         return OBSTACLE_TYPES[self.obstacleType]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects._Background.getObstacleType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":178
 *         return OBSTACLE_TYPES[self.obstacleType]
 * 
 *     def getImage(self, imageBank):             # <<<<<<<<<<<<<<
 *         return imageBank.fromHandle(self.image)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_5getImage(PyObject *__pyx_v_self, PyObject *__pyx_v_imageBank); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_5getImage(PyObject *__pyx_v_self, PyObject *__pyx_v_imageBank) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getImage (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_4getImage(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *)__pyx_v_self), ((PyObject *)__pyx_v_imageBank));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_4getImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self, PyObject *__pyx_v_imageBank) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getImage", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":179
 * 
 *     def getImage(self, imageBank):
 *         return imageBank.fromHandle(self.image)             # <<<<<<<<<<<<<<
 * 
 *     def isBackground(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_imageBank, __pyx_n_s_fromHandle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_image); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":178
 *         return OBSTACLE_TYPES[self.obstacleType]
 * 
 *     def getImage(self, imageBank):             # <<<<<<<<<<<<<<
 *         return imageBank.fromHandle(self.image)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects._Background.getImage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":181
 *         return imageBank.fromHandle(self.image)
 * 
 *     def isBackground(self):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_7isBackground(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_7isBackground(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isBackground (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_6isBackground(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_6isBackground(CYTHON_UNUSED struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isBackground", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":182
 * 
 *     def isBackground(self):
 *         return True             # <<<<<<<<<<<<<<
 * 
 * cdef class QuickBackdrop(_Background):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":181
 *         return imageBank.fromHandle(self.image)
 * 
 *     def isBackground(self):             # <<<<<<<<<<<<<<
 *         return True
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_8__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.parent, self.settings)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_self->__pyx_base.settings);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = (self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, None), state
 */
  /*else*/ {
    __pyx_t_2 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_2 = (__pyx_t_5 != 0);
    __pyx_t_3 = __pyx_t_2;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_3;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, None), state
 *     else:
 */
  __pyx_t_3 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":13
 *         use_setstate = self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle__Background); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_191508975);
    __Pyx_GIVEREF(__pyx_int_191508975);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_191508975);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, None), state
 *     else:
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle__Background__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle__Background); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_191508975);
    __Pyx_GIVEREF(__pyx_int_191508975);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_191508975);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __pyx_t_6 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects._Background.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle__Background__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_10__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_11_Background_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle__Background__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle__Background__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle__Background, (type(self), 0xb6a31ef, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle__Background__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects._Background.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":192
 *         object shape
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt(True)
 *         self.obstacleType = reader.readShort()
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  CYTHON_UNUSED PyObject *__pyx_v_size = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 192, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_1read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 192, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":193
 * 
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt(True)             # <<<<<<<<<<<<<<
 *         self.obstacleType = reader.readShort()
 *         self.collisionMode = reader.readShort()
 */
  __pyx_t_5.__pyx_n = 1;
  __pyx_t_5.asUnsigned = 1;
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_size = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":194
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt(True)
 *         self.obstacleType = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.collisionMode = reader.readShort()
 *         self.width = reader.readInt()
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 194, __pyx_L1_error)
  __pyx_v_self->obstacleType = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":195
 *         size = reader.readInt(True)
 *         self.obstacleType = reader.readShort()
 *         self.collisionMode = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 195, __pyx_L1_error)
  __pyx_v_self->collisionMode = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":196
 *         self.obstacleType = reader.readShort()
 *         self.collisionMode = reader.readShort()
 *         self.width = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.height = reader.readInt()
 *         self.shape = self.new(Shape, reader, width = self.width,
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->width = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":197
 *         self.collisionMode = reader.readShort()
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.shape = self.new(Shape, reader, width = self.width,
 *             height = self.height)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->height = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":198
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 *         self.shape = self.new(Shape, reader, width = self.width,             # <<<<<<<<<<<<<<
 *             height = self.height)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape));
  __Pyx_INCREF(((PyObject *)__pyx_v_reader));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_reader));
  __pyx_t_3 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_width, __pyx_t_4) < 0) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":199
 *         self.height = reader.readInt()
 *         self.shape = self.new(Shape, reader, width = self.width,
 *             height = self.height)             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_height, __pyx_t_4) < 0) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":198
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 *         self.shape = self.new(Shape, reader, width = self.width,             # <<<<<<<<<<<<<<
 *             height = self.height)
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_GOTREF(__pyx_v_self->shape);
  __Pyx_DECREF(__pyx_v_self->shape);
  __pyx_v_self->shape = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":192
 *         object shape
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt(True)
 *         self.obstacleType = reader.readShort()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_size);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 192, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":201
 *             height = self.height)
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0) # size
 *         reader.writeShort(self.obstacleType)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 201, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_2write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":202
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0) # size             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.obstacleType)
 *         reader.writeShort(self.collisionMode)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_int_0);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":203
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0) # size
 *         reader.writeShort(self.obstacleType)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.collisionMode)
 *         reader.writeInt(self.width)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->obstacleType); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":204
 *         reader.writeInt(0) # size
 *         reader.writeShort(self.obstacleType)
 *         reader.writeShort(self.collisionMode)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->collisionMode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":205
 *         reader.writeShort(self.obstacleType)
 *         reader.writeShort(self.collisionMode)
 *         reader.writeInt(self.width)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.height)
 *         self.shape.write(reader)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":206
 *         reader.writeShort(self.collisionMode)
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)             # <<<<<<<<<<<<<<
 *         self.shape.write(reader)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":207
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 *         self.shape.write(reader)             # <<<<<<<<<<<<<<
 * 
 * cdef class Backdrop(_Background):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->shape, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_reader));
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":201
 *             height = self.height)
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0) # size
 *         reader.writeShort(self.obstacleType)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":186
 * cdef class QuickBackdrop(_Background):
 *     cdef public:
 *         int obstacleType             # <<<<<<<<<<<<<<
 *         int collisionMode
 *         int width
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->obstacleType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.obstacleType.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 186, __pyx_L1_error)
  __pyx_v_self->obstacleType = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.obstacleType.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":187
 *     cdef public:
 *         int obstacleType
 *         int collisionMode             # <<<<<<<<<<<<<<
 *         int width
 *         int height
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->collisionMode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.collisionMode.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 187, __pyx_L1_error)
  __pyx_v_self->collisionMode = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.collisionMode.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":188
 *         int obstacleType
 *         int collisionMode
 *         int width             # <<<<<<<<<<<<<<
 *         int height
 *         object shape
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 188, __pyx_L1_error)
  __pyx_v_self->width = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":189
 *         int collisionMode
 *         int width
 *         int height             # <<<<<<<<<<<<<<
 *         object shape
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 189, __pyx_L1_error)
  __pyx_v_self->height = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":190
 *         int width
 *         int height
 *         object shape             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->shape);
  __pyx_r = __pyx_v_self->shape;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->shape);
  __Pyx_DECREF(__pyx_v_self->shape);
  __pyx_v_self->shape = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->shape);
  __Pyx_DECREF(__pyx_v_self->shape);
  __pyx_v_self->shape = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_4__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_4__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.collisionMode, self.height, self.obstacleType, self.parent, self.settings, self.shape, self.width)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->collisionMode); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->obstacleType); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(7); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_5, 3, ((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_v_self->__pyx_base.__pyx_base.settings);
  __Pyx_INCREF(__pyx_v_self->shape);
  __Pyx_GIVEREF(__pyx_v_self->shape);
  PyTuple_SET_ITEM(__pyx_t_5, 5, __pyx_v_self->shape);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 6, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.collisionMode, self.height, self.obstacleType, self.parent, self.settings, self.shape, self.width)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_5 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_v__dict = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "(tree fragment)":7
 *     state = (self.collisionMode, self.height, self.obstacleType, self.parent, self.settings, self.shape, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_6 = (__pyx_v__dict != Py_None);
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None or self.shape is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.collisionMode, self.height, self.obstacleType, self.parent, self.settings, self.shape, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None or self.shape is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, None), state
 */
  /*else*/ {
    __pyx_t_6 = (((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.parent) != Py_None);
    __pyx_t_8 = (__pyx_t_6 != 0);
    if (!__pyx_t_8) {
    } else {
      __pyx_t_7 = __pyx_t_8;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_8 = (__pyx_v_self->__pyx_base.__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_6 = (__pyx_t_8 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_7 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->shape != Py_None);
    __pyx_t_8 = (__pyx_t_6 != 0);
    __pyx_t_7 = __pyx_t_8;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_7;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None or self.shape is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, None), state
 *     else:
 */
  __pyx_t_7 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_7) {

    /* "(tree fragment)":13
 *         use_setstate = self.parent is not None or self.settings is not None or self.shape is not None
 *     if use_setstate:
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_QuickBackdrop); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_28387740);
    __Pyx_GIVEREF(__pyx_int_28387740);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_int_28387740);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_5, 2, Py_None);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None or self.shape is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, None), state
 *     else:
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_QuickBackdrop__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_QuickBackdrop); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_28387740);
    __Pyx_GIVEREF(__pyx_int_28387740);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_int_28387740);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
    __pyx_t_3 = 0;
    __pyx_t_5 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_QuickBackdrop__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_QuickBackdrop__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_QuickBackdrop__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_QuickBackdrop, (type(self), 0x1b1299c, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_QuickBackdrop__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.QuickBackdrop.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":217
 *         int image
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt()
 *         self.obstacleType = reader.readShort()
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  CYTHON_UNUSED PyObject *__pyx_v_size = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 217, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_1read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 217, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":218
 * 
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.obstacleType = reader.readShort()
 *         self.collisionMode = reader.readShort()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_size = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":219
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt()
 *         self.obstacleType = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.collisionMode = reader.readShort()
 *         self.width = reader.readInt()
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 219, __pyx_L1_error)
  __pyx_v_self->obstacleType = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":220
 *         size = reader.readInt()
 *         self.obstacleType = reader.readShort()
 *         self.collisionMode = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 220, __pyx_L1_error)
  __pyx_v_self->collisionMode = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":221
 *         self.obstacleType = reader.readShort()
 *         self.collisionMode = reader.readShort()
 *         self.width = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.height = reader.readInt()
 *         self.image = reader.readShort()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->width = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":222
 *         self.collisionMode = reader.readShort()
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.image = reader.readShort()
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->height = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":223
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 *         self.image = reader.readShort()             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 223, __pyx_L1_error)
  __pyx_v_self->image = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":217
 *         int image
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt()
 *         self.obstacleType = reader.readShort()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_size);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 217, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":225
 *         self.image = reader.readShort()
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0) # size
 *         reader.writeShort(self.obstacleType)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 225, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_2write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":226
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0) # size             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.obstacleType)
 *         reader.writeShort(self.collisionMode)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_int_0);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":227
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0) # size
 *         reader.writeShort(self.obstacleType)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.collisionMode)
 *         reader.writeInt(self.width)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->obstacleType); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":228
 *         reader.writeInt(0) # size
 *         reader.writeShort(self.obstacleType)
 *         reader.writeShort(self.collisionMode)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->collisionMode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":229
 *         reader.writeShort(self.obstacleType)
 *         reader.writeShort(self.collisionMode)
 *         reader.writeInt(self.width)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.height)
 *         reader.writeShort(self.image)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":230
 *         reader.writeShort(self.collisionMode)
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.image)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":231
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 *         reader.writeShort(self.image)             # <<<<<<<<<<<<<<
 * 
 *     def getImage(self, imageBank):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->image); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":225
 *         self.image = reader.readShort()
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0) # size
 *         reader.writeShort(self.obstacleType)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":233
 *         reader.writeShort(self.image)
 * 
 *     def getImage(self, imageBank):             # <<<<<<<<<<<<<<
 *         return imageBank.fromHandle(self.image)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5getImage(PyObject *__pyx_v_self, PyObject *__pyx_v_imageBank); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5getImage(PyObject *__pyx_v_self, PyObject *__pyx_v_imageBank) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getImage (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_4getImage(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self), ((PyObject *)__pyx_v_imageBank));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_4getImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_imageBank) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getImage", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":234
 * 
 *     def getImage(self, imageBank):
 *         return imageBank.fromHandle(self.image)             # <<<<<<<<<<<<<<
 * 
 * HAS_SINGLE_SPEED = [
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_imageBank, __pyx_n_s_fromHandle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->image); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":233
 *         reader.writeShort(self.image)
 * 
 *     def getImage(self, imageBank):             # <<<<<<<<<<<<<<
 *         return imageBank.fromHandle(self.image)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.getImage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":211
 * cdef class Backdrop(_Background):
 *     cdef public:
 *         int obstacleType             # <<<<<<<<<<<<<<
 *         int collisionMode
 *         int width
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->obstacleType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.obstacleType.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 211, __pyx_L1_error)
  __pyx_v_self->obstacleType = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.obstacleType.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":212
 *     cdef public:
 *         int obstacleType
 *         int collisionMode             # <<<<<<<<<<<<<<
 *         int width
 *         int height
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->collisionMode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.collisionMode.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 212, __pyx_L1_error)
  __pyx_v_self->collisionMode = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.collisionMode.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":213
 *         int obstacleType
 *         int collisionMode
 *         int width             # <<<<<<<<<<<<<<
 *         int height
 *         int image
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 213, __pyx_L1_error)
  __pyx_v_self->width = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":214
 *         int collisionMode
 *         int width
 *         int height             # <<<<<<<<<<<<<<
 *         int image
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 214, __pyx_L1_error)
  __pyx_v_self->height = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":215
 *         int width
 *         int height
 *         int image             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->image); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.image.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 215, __pyx_L1_error)
  __pyx_v_self->image = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.image.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.collisionMode, self.height, self.image, self.obstacleType, self.parent, self.settings, self.width)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->collisionMode); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->image); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->obstacleType); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(7); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_4);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_6, 4, ((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_6, 5, __pyx_v_self->__pyx_base.__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 6, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.collisionMode, self.height, self.image, self.obstacleType, self.parent, self.settings, self.width)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_6 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_v__dict = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "(tree fragment)":7
 *     state = (self.collisionMode, self.height, self.image, self.obstacleType, self.parent, self.settings, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_7 = (__pyx_v__dict != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v__dict);
    __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.collisionMode, self.height, self.image, self.obstacleType, self.parent, self.settings, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, None), state
 */
  /*else*/ {
    __pyx_t_7 = (((PyObject *)__pyx_v_self->__pyx_base.__pyx_base.parent) != Py_None);
    __pyx_t_9 = (__pyx_t_7 != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_9 = (__pyx_v_self->__pyx_base.__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_7 = (__pyx_t_9 != 0);
    __pyx_t_8 = __pyx_t_7;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_8;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, None), state
 *     else:
 */
  __pyx_t_8 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":13
 *         use_setstate = self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_Backdrop); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_158315977);
    __Pyx_GIVEREF(__pyx_int_158315977);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_158315977);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_6, 2, Py_None);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, None), state
 *     else:
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Backdrop__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_Backdrop); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_158315977);
    __Pyx_GIVEREF(__pyx_int_158315977);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_158315977);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
    __pyx_t_4 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Backdrop__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_8__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_8__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Backdrop__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Backdrop__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Backdrop, (type(self), 0x96fb5c9, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Backdrop__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Backdrop.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":249
 *         int backTo
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.frames = []
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 249, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 249, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":250
 * 
 *     cpdef initialize(self):
 *         self.frames = []             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->frames);
  __Pyx_DECREF(__pyx_v_self->frames);
  __pyx_v_self->frames = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":249
 *         int backTo
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.frames = []
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":252
 *         self.frames = []
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.minSpeed = reader.readByte(True)
 *         self.maxSpeed = reader.readByte(True)
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  CYTHON_UNUSED int __pyx_v__;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  short __pyx_t_5;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readByte __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 252, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 252, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":253
 * 
 *     cpdef read(self, ByteReader reader):
 *         self.minSpeed = reader.readByte(True)             # <<<<<<<<<<<<<<
 *         self.maxSpeed = reader.readByte(True)
 *         if self.settings['index'] in HAS_SINGLE_SPEED:
 */
  __pyx_t_6.__pyx_n = 1;
  __pyx_t_6.asUnsigned = 1;
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readByte(__pyx_v_reader, 0, &__pyx_t_6); if (unlikely(__pyx_t_5 == ((short)-10) && PyErr_Occurred())) __PYX_ERR(0, 253, __pyx_L1_error)
  __pyx_v_self->minSpeed = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":254
 *     cpdef read(self, ByteReader reader):
 *         self.minSpeed = reader.readByte(True)
 *         self.maxSpeed = reader.readByte(True)             # <<<<<<<<<<<<<<
 *         if self.settings['index'] in HAS_SINGLE_SPEED:
 *             self.minSpeed = self.maxSpeed
 */
  __pyx_t_6.__pyx_n = 1;
  __pyx_t_6.asUnsigned = 1;
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readByte(__pyx_v_reader, 0, &__pyx_t_6); if (unlikely(__pyx_t_5 == ((short)-10) && PyErr_Occurred())) __PYX_ERR(0, 254, __pyx_L1_error)
  __pyx_v_self->maxSpeed = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":255
 *         self.minSpeed = reader.readByte(True)
 *         self.maxSpeed = reader.readByte(True)
 *         if self.settings['index'] in HAS_SINGLE_SPEED:             # <<<<<<<<<<<<<<
 *             self.minSpeed = self.maxSpeed
 *             self.hasSingle = True
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 255, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->__pyx_base.settings, __pyx_n_s_index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HAS_SINGLE_SPEED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_t_2, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "mmfparser/data/chunkloaders/objects.pyx":256
 *         self.maxSpeed = reader.readByte(True)
 *         if self.settings['index'] in HAS_SINGLE_SPEED:
 *             self.minSpeed = self.maxSpeed             # <<<<<<<<<<<<<<
 *             self.hasSingle = True
 *         self.repeat = reader.readShort()
 */
    __pyx_t_9 = __pyx_v_self->maxSpeed;
    __pyx_v_self->minSpeed = __pyx_t_9;

    /* "mmfparser/data/chunkloaders/objects.pyx":257
 *         if self.settings['index'] in HAS_SINGLE_SPEED:
 *             self.minSpeed = self.maxSpeed
 *             self.hasSingle = True             # <<<<<<<<<<<<<<
 *         self.repeat = reader.readShort()
 *         self.backTo = reader.readShort()
 */
    __pyx_v_self->hasSingle = 1;

    /* "mmfparser/data/chunkloaders/objects.pyx":255
 *         self.minSpeed = reader.readByte(True)
 *         self.maxSpeed = reader.readByte(True)
 *         if self.settings['index'] in HAS_SINGLE_SPEED:             # <<<<<<<<<<<<<<
 *             self.minSpeed = self.maxSpeed
 *             self.hasSingle = True
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":258
 *             self.minSpeed = self.maxSpeed
 *             self.hasSingle = True
 *         self.repeat = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.backTo = reader.readShort()
 *         self.frames = [reader.readShort()
 */
  __pyx_t_9 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_9 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 258, __pyx_L1_error)
  __pyx_v_self->repeat = __pyx_t_9;

  /* "mmfparser/data/chunkloaders/objects.pyx":259
 *             self.hasSingle = True
 *         self.repeat = reader.readShort()
 *         self.backTo = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.frames = [reader.readShort()
 *             for _ in xrange(reader.readShort())]
 */
  __pyx_t_9 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_9 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 259, __pyx_L1_error)
  __pyx_v_self->backTo = __pyx_t_9;

  /* "mmfparser/data/chunkloaders/objects.pyx":260
 *         self.repeat = reader.readShort()
 *         self.backTo = reader.readShort()
 *         self.frames = [reader.readShort()             # <<<<<<<<<<<<<<
 *             for _ in xrange(reader.readShort())]
 * 
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "mmfparser/data/chunkloaders/objects.pyx":261
 *         self.backTo = reader.readShort()
 *         self.frames = [reader.readShort()
 *             for _ in xrange(reader.readShort())]             # <<<<<<<<<<<<<<
 * 
 *     def getImages(self, images):
 */
  __pyx_t_9 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_9 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 261, __pyx_L1_error)
  __pyx_t_10 = __pyx_t_9;
  for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
    __pyx_v__ = __pyx_t_11;

    /* "mmfparser/data/chunkloaders/objects.pyx":260
 *         self.repeat = reader.readShort()
 *         self.backTo = reader.readShort()
 *         self.frames = [reader.readShort()             # <<<<<<<<<<<<<<
 *             for _ in xrange(reader.readShort())]
 * 
 */
    __pyx_t_12 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_12 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 260, __pyx_L1_error)
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_t_12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_1))) __PYX_ERR(0, 260, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->frames);
  __Pyx_DECREF(__pyx_v_self->frames);
  __pyx_v_self->frames = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":252
 *         self.frames = []
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.minSpeed = reader.readByte(True)
 *         self.maxSpeed = reader.readByte(True)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 252, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":263
 *             for _ in xrange(reader.readShort())]
 * 
 *     def getImages(self, images):             # <<<<<<<<<<<<<<
 *         return [images.fromHandle(frame) for frame in self.frames]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_5getImages(PyObject *__pyx_v_self, PyObject *__pyx_v_images); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_5getImages(PyObject *__pyx_v_self, PyObject *__pyx_v_images) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getImages (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_4getImages(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((PyObject *)__pyx_v_images));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_4getImages(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_images) {
  PyObject *__pyx_v_frame = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getImages", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":264
 * 
 *     def getImages(self, images):
 *         return [images.fromHandle(frame) for frame in self.frames]             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(__pyx_v_self->frames == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 264, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_v_self->frames; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
  for (;;) {
    if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_4); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(0, 264, __pyx_L1_error)
    #else
    __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_frame, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_images, __pyx_n_s_fromHandle); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_v_frame) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_frame);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 264, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":263
 *             for _ in xrange(reader.readShort())]
 * 
 *     def getImages(self, images):             # <<<<<<<<<<<<<<
 *         return [images.fromHandle(frame) for frame in self.frames]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.getImages", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_frame);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":266
 *         return [images.fromHandle(frame) for frame in self.frames]
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeByte(self.minSpeed)
 *         reader.writeByte(self.maxSpeed)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_7write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_7write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 266, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_v_item = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":267
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeByte(self.minSpeed)             # <<<<<<<<<<<<<<
 *         reader.writeByte(self.maxSpeed)
 *         reader.writeShort(self.repeat)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeByte); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->minSpeed); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":268
 *     def write(self, ByteReader reader):
 *         reader.writeByte(self.minSpeed)
 *         reader.writeByte(self.maxSpeed)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.repeat)
 *         reader.writeShort(self.backTo)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeByte); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->maxSpeed); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":269
 *         reader.writeByte(self.minSpeed)
 *         reader.writeByte(self.maxSpeed)
 *         reader.writeShort(self.repeat)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.backTo)
 *         reader.writeShort(len(self.frames))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->repeat); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":270
 *         reader.writeByte(self.maxSpeed)
 *         reader.writeShort(self.repeat)
 *         reader.writeShort(self.backTo)             # <<<<<<<<<<<<<<
 *         reader.writeShort(len(self.frames))
 *         for item in self.frames:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->backTo); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":271
 *         reader.writeShort(self.repeat)
 *         reader.writeShort(self.backTo)
 *         reader.writeShort(len(self.frames))             # <<<<<<<<<<<<<<
 *         for item in self.frames:
 *             reader.writeShort(item)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_v_self->frames;
  __Pyx_INCREF(__pyx_t_3);
  if (unlikely(__pyx_t_3 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 271, __pyx_L1_error)
  }
  __pyx_t_5 = PyList_GET_SIZE(__pyx_t_3); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 271, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":272
 *         reader.writeShort(self.backTo)
 *         reader.writeShort(len(self.frames))
 *         for item in self.frames:             # <<<<<<<<<<<<<<
 *             reader.writeShort(item)
 * 
 */
  if (unlikely(__pyx_v_self->frames == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 272, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->frames; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 272, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":273
 *         reader.writeShort(len(self.frames))
 *         for item in self.frames:
 *             reader.writeShort(item)             # <<<<<<<<<<<<<<
 * 
 * cdef getClosestDirection(int direction, dict directionDict):
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_item) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_item);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":272
 *         reader.writeShort(self.backTo)
 *         reader.writeShort(len(self.frames))
 *         for item in self.frames:             # <<<<<<<<<<<<<<
 *             reader.writeShort(item)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":266
 *         return [images.fromHandle(frame) for frame in self.frames]
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeByte(self.minSpeed)
 *         reader.writeByte(self.maxSpeed)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":242
 * cdef class AnimationDirection(DataLoader):
 *     cdef public:
 *         list frames             # <<<<<<<<<<<<<<
 *         int minSpeed
 *         int maxSpeed
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->frames);
  __pyx_r = __pyx_v_self->frames;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 242, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->frames);
  __Pyx_DECREF(__pyx_v_self->frames);
  __pyx_v_self->frames = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.frames.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->frames);
  __Pyx_DECREF(__pyx_v_self->frames);
  __pyx_v_self->frames = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":243
 *     cdef public:
 *         list frames
 *         int minSpeed             # <<<<<<<<<<<<<<
 *         int maxSpeed
 *         bint hasSingle
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->minSpeed); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.minSpeed.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L1_error)
  __pyx_v_self->minSpeed = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.minSpeed.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":244
 *         list frames
 *         int minSpeed
 *         int maxSpeed             # <<<<<<<<<<<<<<
 *         bint hasSingle
 *         int repeat
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->maxSpeed); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.maxSpeed.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 244, __pyx_L1_error)
  __pyx_v_self->maxSpeed = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.maxSpeed.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":245
 *         int minSpeed
 *         int maxSpeed
 *         bint hasSingle             # <<<<<<<<<<<<<<
 *         int repeat
 *         int backTo
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->hasSingle); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.hasSingle.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 245, __pyx_L1_error)
  __pyx_v_self->hasSingle = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.hasSingle.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":246
 *         int maxSpeed
 *         bint hasSingle
 *         int repeat             # <<<<<<<<<<<<<<
 *         int backTo
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->repeat); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.repeat.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 246, __pyx_L1_error)
  __pyx_v_self->repeat = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.repeat.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":247
 *         bint hasSingle
 *         int repeat
 *         int backTo             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->backTo); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.backTo.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 247, __pyx_L1_error)
  __pyx_v_self->backTo = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.backTo.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.backTo, self.frames, self.hasSingle, self.maxSpeed, self.minSpeed, self.parent, self.repeat, self.settings)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->backTo); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_self->hasSingle); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->maxSpeed); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->minSpeed); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->repeat); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(8); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->frames);
  __Pyx_GIVEREF(__pyx_v_self->frames);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_self->frames);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_t_4);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_6, 5, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 6, __pyx_t_5);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_6, 7, __pyx_v_self->__pyx_base.settings);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.backTo, self.frames, self.hasSingle, self.maxSpeed, self.minSpeed, self.parent, self.repeat, self.settings)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_6 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_v__dict = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "(tree fragment)":7
 *     state = (self.backTo, self.frames, self.hasSingle, self.maxSpeed, self.minSpeed, self.parent, self.repeat, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_7 = (__pyx_v__dict != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v__dict);
    __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.backTo, self.frames, self.hasSingle, self.maxSpeed, self.minSpeed, self.parent, self.repeat, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, None), state
 */
  /*else*/ {
    __pyx_t_7 = (__pyx_v_self->frames != ((PyObject*)Py_None));
    __pyx_t_9 = (__pyx_t_7 != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_9 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_7 = (__pyx_t_9 != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_8 = __pyx_t_7;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_7 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_9 = (__pyx_t_7 != 0);
    __pyx_t_8 = __pyx_t_9;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_8;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, None), state
 *     else:
 */
  __pyx_t_8 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":13
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_AnimationDirectio); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_76934893);
    __Pyx_GIVEREF(__pyx_int_76934893);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_76934893);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_6, 2, Py_None);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, None), state
 *     else:
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_AnimationDirection__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_AnimationDirectio); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_76934893);
    __Pyx_GIVEREF(__pyx_int_76934893);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_76934893);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
    __pyx_t_4 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_AnimationDirection__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_10__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_AnimationDirection__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AnimationDirection__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_AnimationDirection, (type(self), 0x495eeed, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_AnimationDirection__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationDirection.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":275
 *             reader.writeShort(item)
 * 
 * cdef getClosestDirection(int direction, dict directionDict):             # <<<<<<<<<<<<<<
 *     try:
 *         return directionDict[direction]
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_getClosestDirection(int __pyx_v_direction, PyObject *__pyx_v_directionDict) {
  PyObject *__pyx_v_forward = NULL;
  PyObject *__pyx_v_backward = NULL;
  long __pyx_v_position;
  long __pyx_v_distance;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getClosestDirection", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":276
 * 
 * cdef getClosestDirection(int direction, dict directionDict):
 *     try:             # <<<<<<<<<<<<<<
 *         return directionDict[direction]
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "mmfparser/data/chunkloaders/objects.pyx":277
 * cdef getClosestDirection(int direction, dict directionDict):
 *     try:
 *         return directionDict[direction]             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         pass
 */
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(__pyx_v_directionDict == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 277, __pyx_L3_error)
      }
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_direction); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 277, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_directionDict, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 277, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      goto __pyx_L7_try_return;

      /* "mmfparser/data/chunkloaders/objects.pyx":276
 * 
 * cdef getClosestDirection(int direction, dict directionDict):
 *     try:             # <<<<<<<<<<<<<<
 *         return directionDict[direction]
 *     except KeyError:
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":278
 *     try:
 *         return directionDict[direction]
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         pass
 * 
 */
    __pyx_t_6 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_6) {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "mmfparser/data/chunkloaders/objects.pyx":276
 * 
 * cdef getClosestDirection(int direction, dict directionDict):
 *     try:             # <<<<<<<<<<<<<<
 *         return directionDict[direction]
 *     except KeyError:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":282
 * 
 *     # (directionObject, distance)
 *     forward = None             # <<<<<<<<<<<<<<
 *     backward = None
 * 
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_forward = ((PyObject*)Py_None);

  /* "mmfparser/data/chunkloaders/objects.pyx":283
 *     # (directionObject, distance)
 *     forward = None
 *     backward = None             # <<<<<<<<<<<<<<
 * 
 *     # get closest in back
 */
  __Pyx_INCREF(Py_None);
  __pyx_v_backward = ((PyObject*)Py_None);

  /* "mmfparser/data/chunkloaders/objects.pyx":286
 * 
 *     # get closest in back
 *     position = direction             # <<<<<<<<<<<<<<
 *     distance = 0
 *     while 1:
 */
  __pyx_v_position = __pyx_v_direction;

  /* "mmfparser/data/chunkloaders/objects.pyx":287
 *     # get closest in back
 *     position = direction
 *     distance = 0             # <<<<<<<<<<<<<<
 *     while 1:
 *         position -= 1
 */
  __pyx_v_distance = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":288
 *     position = direction
 *     distance = 0
 *     while 1:             # <<<<<<<<<<<<<<
 *         position -= 1
 *         distance += 1
 */
  while (1) {

    /* "mmfparser/data/chunkloaders/objects.pyx":289
 *     distance = 0
 *     while 1:
 *         position -= 1             # <<<<<<<<<<<<<<
 *         distance += 1
 *         if position < 0:
 */
    __pyx_v_position = (__pyx_v_position - 1);

    /* "mmfparser/data/chunkloaders/objects.pyx":290
 *     while 1:
 *         position -= 1
 *         distance += 1             # <<<<<<<<<<<<<<
 *         if position < 0:
 *             position = 31
 */
    __pyx_v_distance = (__pyx_v_distance + 1);

    /* "mmfparser/data/chunkloaders/objects.pyx":291
 *         position -= 1
 *         distance += 1
 *         if position < 0:             # <<<<<<<<<<<<<<
 *             position = 31
 *         if position in directionDict:
 */
    __pyx_t_7 = ((__pyx_v_position < 0) != 0);
    if (__pyx_t_7) {

      /* "mmfparser/data/chunkloaders/objects.pyx":292
 *         distance += 1
 *         if position < 0:
 *             position = 31             # <<<<<<<<<<<<<<
 *         if position in directionDict:
 *             backward = (directionDict[position], distance)
 */
      __pyx_v_position = 31;

      /* "mmfparser/data/chunkloaders/objects.pyx":291
 *         position -= 1
 *         distance += 1
 *         if position < 0:             # <<<<<<<<<<<<<<
 *             position = 31
 *         if position in directionDict:
 */
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":293
 *         if position < 0:
 *             position = 31
 *         if position in directionDict:             # <<<<<<<<<<<<<<
 *             backward = (directionDict[position], distance)
 *             break
 */
    __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_position); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 293, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__pyx_v_directionDict == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 293, __pyx_L1_error)
    }
    __pyx_t_7 = (__Pyx_PyDict_ContainsTF(__pyx_t_5, __pyx_v_directionDict, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 293, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_8 = (__pyx_t_7 != 0);
    if (__pyx_t_8) {

      /* "mmfparser/data/chunkloaders/objects.pyx":294
 *             position = 31
 *         if position in directionDict:
 *             backward = (directionDict[position], distance)             # <<<<<<<<<<<<<<
 *             break
 * 
 */
      if (unlikely(__pyx_v_directionDict == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 294, __pyx_L1_error)
      }
      __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_position); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 294, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyDict_GetItem(__pyx_v_directionDict, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 294, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_distance); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 294, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 294, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_5);
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __Pyx_DECREF_SET(__pyx_v_backward, ((PyObject*)__pyx_t_9));
      __pyx_t_9 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":295
 *         if position in directionDict:
 *             backward = (directionDict[position], distance)
 *             break             # <<<<<<<<<<<<<<
 * 
 *     # get closest ahead
 */
      goto __pyx_L10_break;

      /* "mmfparser/data/chunkloaders/objects.pyx":293
 *         if position < 0:
 *             position = 31
 *         if position in directionDict:             # <<<<<<<<<<<<<<
 *             backward = (directionDict[position], distance)
 *             break
 */
    }
  }
  __pyx_L10_break:;

  /* "mmfparser/data/chunkloaders/objects.pyx":298
 * 
 *     # get closest ahead
 *     position = direction             # <<<<<<<<<<<<<<
 *     distance = 0
 *     while 1:
 */
  __pyx_v_position = __pyx_v_direction;

  /* "mmfparser/data/chunkloaders/objects.pyx":299
 *     # get closest ahead
 *     position = direction
 *     distance = 0             # <<<<<<<<<<<<<<
 *     while 1:
 *         position = (position + 1) % 32
 */
  __pyx_v_distance = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":300
 *     position = direction
 *     distance = 0
 *     while 1:             # <<<<<<<<<<<<<<
 *         position = (position + 1) % 32
 *         distance += 1
 */
  while (1) {

    /* "mmfparser/data/chunkloaders/objects.pyx":301
 *     distance = 0
 *     while 1:
 *         position = (position + 1) % 32             # <<<<<<<<<<<<<<
 *         distance += 1
 *         if position in directionDict:
 */
    __pyx_v_position = ((__pyx_v_position + 1) % 32);

    /* "mmfparser/data/chunkloaders/objects.pyx":302
 *     while 1:
 *         position = (position + 1) % 32
 *         distance += 1             # <<<<<<<<<<<<<<
 *         if position in directionDict:
 *             forward = (directionDict[position], distance)
 */
    __pyx_v_distance = (__pyx_v_distance + 1);

    /* "mmfparser/data/chunkloaders/objects.pyx":303
 *         position = (position + 1) % 32
 *         distance += 1
 *         if position in directionDict:             # <<<<<<<<<<<<<<
 *             forward = (directionDict[position], distance)
 *             break
 */
    __pyx_t_9 = __Pyx_PyInt_From_long(__pyx_v_position); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 303, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    if (unlikely(__pyx_v_directionDict == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 303, __pyx_L1_error)
    }
    __pyx_t_8 = (__Pyx_PyDict_ContainsTF(__pyx_t_9, __pyx_v_directionDict, Py_EQ)); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 303, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_7 = (__pyx_t_8 != 0);
    if (__pyx_t_7) {

      /* "mmfparser/data/chunkloaders/objects.pyx":304
 *         distance += 1
 *         if position in directionDict:
 *             forward = (directionDict[position], distance)             # <<<<<<<<<<<<<<
 *             break
 * 
 */
      if (unlikely(__pyx_v_directionDict == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 304, __pyx_L1_error)
      }
      __pyx_t_9 = __Pyx_PyInt_From_long(__pyx_v_position); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_directionDict, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyInt_From_long(__pyx_v_distance); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 304, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_9);
      __pyx_t_5 = 0;
      __pyx_t_9 = 0;
      __Pyx_DECREF_SET(__pyx_v_forward, ((PyObject*)__pyx_t_4));
      __pyx_t_4 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":305
 *         if position in directionDict:
 *             forward = (directionDict[position], distance)
 *             break             # <<<<<<<<<<<<<<
 * 
 *     # backward has priority
 */
      goto __pyx_L14_break;

      /* "mmfparser/data/chunkloaders/objects.pyx":303
 *         position = (position + 1) % 32
 *         distance += 1
 *         if position in directionDict:             # <<<<<<<<<<<<<<
 *             forward = (directionDict[position], distance)
 *             break
 */
    }
  }
  __pyx_L14_break:;

  /* "mmfparser/data/chunkloaders/objects.pyx":308
 * 
 *     # backward has priority
 *     if backward[1] >= forward[1]:             # <<<<<<<<<<<<<<
 *         return forward[0]
 *     else:
 */
  if (unlikely(__pyx_v_backward == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 308, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_GetItemInt_Tuple(__pyx_v_backward, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (unlikely(__pyx_v_forward == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 308, __pyx_L1_error)
  }
  __pyx_t_9 = __Pyx_GetItemInt_Tuple(__pyx_v_forward, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_4, __pyx_t_9, Py_GE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 308, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_7) {

    /* "mmfparser/data/chunkloaders/objects.pyx":309
 *     # backward has priority
 *     if backward[1] >= forward[1]:
 *         return forward[0]             # <<<<<<<<<<<<<<
 *     else:
 *         return backward[0]
 */
    __Pyx_XDECREF(__pyx_r);
    if (unlikely(__pyx_v_forward == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 309, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v_forward, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 309, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "mmfparser/data/chunkloaders/objects.pyx":308
 * 
 *     # backward has priority
 *     if backward[1] >= forward[1]:             # <<<<<<<<<<<<<<
 *         return forward[0]
 *     else:
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":311
 *         return forward[0]
 *     else:
 *         return backward[0]             # <<<<<<<<<<<<<<
 * 
 * ANIMATION_NAMES = [
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    if (unlikely(__pyx_v_backward == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 311, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v_backward, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 311, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":275
 *             reader.writeShort(item)
 * 
 * cdef getClosestDirection(int direction, dict directionDict):             # <<<<<<<<<<<<<<
 *     try:
 *         return directionDict[direction]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.getClosestDirection", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_forward);
  __Pyx_XDECREF(__pyx_v_backward);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":338
 *         cdef dict loadedDirections
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.directions = []
 *         self.loadedDirections = {}
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Animation_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 338, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 338, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":339
 * 
 *     cpdef initialize(self):
 *         self.directions = []             # <<<<<<<<<<<<<<
 *         self.loadedDirections = {}
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->directions);
  __Pyx_DECREF(__pyx_v_self->directions);
  __pyx_v_self->directions = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":340
 *     cpdef initialize(self):
 *         self.directions = []
 *         self.loadedDirections = {}             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->loadedDirections);
  __Pyx_DECREF(__pyx_v_self->loadedDirections);
  __pyx_v_self->loadedDirections = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":338
 *         cdef dict loadedDirections
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.directions = []
 *         self.loadedDirections = {}
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Animation_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":342
 *         self.loadedDirections = {}
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.index = self.settings['index']
 *         currentPosition = reader.tell()
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Animation_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  int __pyx_v_currentPosition;
  PyObject *__pyx_v_offsets = NULL;
  PyObject *__pyx_v_directionDict = NULL;
  PyObject *__pyx_v_index = NULL;
  PyObject *__pyx_v_offset = NULL;
  CYTHON_UNUSED long __pyx_v__;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  long __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 342, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 342, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":343
 * 
 *     cpdef read(self, ByteReader reader):
 *         self.index = self.settings['index']             # <<<<<<<<<<<<<<
 *         currentPosition = reader.tell()
 * 
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 343, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->__pyx_base.settings, __pyx_n_s_index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->index = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":344
 *     cpdef read(self, ByteReader reader):
 *         self.index = self.settings['index']
 *         currentPosition = reader.tell()             # <<<<<<<<<<<<<<
 * 
 *         offsets = [reader.readShort() for _ in xrange(32)]
 */
  __pyx_v_currentPosition = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->tell(__pyx_v_reader, 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":346
 *         currentPosition = reader.tell()
 * 
 *         offsets = [reader.readShort() for _ in xrange(32)]             # <<<<<<<<<<<<<<
 * 
 *         directionDict = self.loadedDirections = {}
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  for (__pyx_t_6 = 0; __pyx_t_6 < 32; __pyx_t_6+=1) {
    __pyx_v__ = __pyx_t_6;
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 346, __pyx_L1_error)
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_offsets = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":348
 *         offsets = [reader.readShort() for _ in xrange(32)]
 * 
 *         directionDict = self.loadedDirections = {}             # <<<<<<<<<<<<<<
 *         for index, offset in enumerate(offsets):
 *             if offset != 0:
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_directionDict = __pyx_t_1;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->loadedDirections);
  __Pyx_DECREF(__pyx_v_self->loadedDirections);
  __pyx_v_self->loadedDirections = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":349
 * 
 *         directionDict = self.loadedDirections = {}
 *         for index, offset in enumerate(offsets):             # <<<<<<<<<<<<<<
 *             if offset != 0:
 *                 reader.seek(currentPosition + offset)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_1 = __pyx_int_0;
  __pyx_t_2 = __pyx_v_offsets; __Pyx_INCREF(__pyx_t_2); __pyx_t_7 = 0;
  for (;;) {
    if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 349, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_offset, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_index, __pyx_t_1);
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":350
 *         directionDict = self.loadedDirections = {}
 *         for index, offset in enumerate(offsets):
 *             if offset != 0:             # <<<<<<<<<<<<<<
 *                 reader.seek(currentPosition + offset)
 *                 directionDict[index] = self.new(AnimationDirection, reader)
 */
    __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_v_offset, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 350, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 350, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__pyx_t_8) {

      /* "mmfparser/data/chunkloaders/objects.pyx":351
 *         for index, offset in enumerate(offsets):
 *             if offset != 0:
 *                 reader.seek(currentPosition + offset)             # <<<<<<<<<<<<<<
 *                 directionDict[index] = self.new(AnimationDirection, reader)
 * 
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_currentPosition); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 351, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_offset); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 351, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, __pyx_t_5, 0, NULL));

      /* "mmfparser/data/chunkloaders/objects.pyx":352
 *             if offset != 0:
 *                 reader.seek(currentPosition + offset)
 *                 directionDict[index] = self.new(AnimationDirection, reader)             # <<<<<<<<<<<<<<
 * 
 *         for index in xrange(32):
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 352, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[3] = {__pyx_t_9, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection), ((PyObject *)__pyx_v_reader)};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[3] = {__pyx_t_9, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection), ((PyObject *)__pyx_v_reader)};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else
      #endif
      {
        __pyx_t_10 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 352, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        if (__pyx_t_9) {
          __Pyx_GIVEREF(__pyx_t_9); PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9); __pyx_t_9 = NULL;
        }
        __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection));
        __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection));
        PyTuple_SET_ITEM(__pyx_t_10, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection));
        __Pyx_INCREF(((PyObject *)__pyx_v_reader));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
        PyTuple_SET_ITEM(__pyx_t_10, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_10, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_directionDict, __pyx_v_index, __pyx_t_4) < 0)) __PYX_ERR(0, 352, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":350
 *         directionDict = self.loadedDirections = {}
 *         for index, offset in enumerate(offsets):
 *             if offset != 0:             # <<<<<<<<<<<<<<
 *                 reader.seek(currentPosition + offset)
 *                 directionDict[index] = self.new(AnimationDirection, reader)
 */
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":349
 * 
 *         directionDict = self.loadedDirections = {}
 *         for index, offset in enumerate(offsets):             # <<<<<<<<<<<<<<
 *             if offset != 0:
 *                 reader.seek(currentPosition + offset)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":354
 *                 directionDict[index] = self.new(AnimationDirection, reader)
 * 
 *         for index in xrange(32):             # <<<<<<<<<<<<<<
 *             self.directions.append(getClosestDirection(index,
 *                 directionDict))
 */
  for (__pyx_t_6 = 0; __pyx_t_6 < 32; __pyx_t_6+=1) {
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_index, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":355
 * 
 *         for index in xrange(32):
 *             self.directions.append(getClosestDirection(index,             # <<<<<<<<<<<<<<
 *                 directionDict))
 * 
 */
    if (unlikely(__pyx_v_self->directions == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 355, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_index); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 355, __pyx_L1_error)

    /* "mmfparser/data/chunkloaders/objects.pyx":356
 *         for index in xrange(32):
 *             self.directions.append(getClosestDirection(index,
 *                 directionDict))             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
    __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_getClosestDirection(__pyx_t_5, __pyx_v_directionDict); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 355, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);

    /* "mmfparser/data/chunkloaders/objects.pyx":355
 * 
 *         for index in xrange(32):
 *             self.directions.append(getClosestDirection(index,             # <<<<<<<<<<<<<<
 *                 directionDict))
 * 
 */
    __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_self->directions, __pyx_t_1); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 355, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":342
 *         self.loadedDirections = {}
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.index = self.settings['index']
 *         currentPosition = reader.tell()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_offsets);
  __Pyx_XDECREF(__pyx_v_directionDict);
  __Pyx_XDECREF(__pyx_v_index);
  __Pyx_XDECREF(__pyx_v_offset);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 342, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Animation_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":358
 *                 directionDict))
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         directionData = ByteReader()
 *         for i in xrange(32):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 358, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_4write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_directionData = NULL;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":359
 * 
 *     def write(self, ByteReader reader):
 *         directionData = ByteReader()             # <<<<<<<<<<<<<<
 *         for i in xrange(32):
 *             if i not in self.loadedDirections:
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_9mmfparser_10bytereader_ByteReader)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_directionData = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":360
 *     def write(self, ByteReader reader):
 *         directionData = ByteReader()
 *         for i in xrange(32):             # <<<<<<<<<<<<<<
 *             if i not in self.loadedDirections:
 *                 reader.writeShort(0)
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 32; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "mmfparser/data/chunkloaders/objects.pyx":361
 *         directionData = ByteReader()
 *         for i in xrange(32):
 *             if i not in self.loadedDirections:             # <<<<<<<<<<<<<<
 *                 reader.writeShort(0)
 *                 continue
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 361, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__pyx_v_self->loadedDirections == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 361, __pyx_L1_error)
    }
    __pyx_t_3 = (__Pyx_PyDict_ContainsTF(__pyx_t_1, __pyx_v_self->loadedDirections, Py_NE)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 361, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_4 = (__pyx_t_3 != 0);
    if (__pyx_t_4) {

      /* "mmfparser/data/chunkloaders/objects.pyx":362
 *         for i in xrange(32):
 *             if i not in self.loadedDirections:
 *                 reader.writeShort(0)             # <<<<<<<<<<<<<<
 *                 continue
 *             reader.writeShort(directionData.tell() + 2 * 32)
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 362, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_int_0);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 362, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":363
 *             if i not in self.loadedDirections:
 *                 reader.writeShort(0)
 *                 continue             # <<<<<<<<<<<<<<
 *             reader.writeShort(directionData.tell() + 2 * 32)
 *             self.loadedDirections[i].write(directionData)
 */
      goto __pyx_L3_continue;

      /* "mmfparser/data/chunkloaders/objects.pyx":361
 *         directionData = ByteReader()
 *         for i in xrange(32):
 *             if i not in self.loadedDirections:             # <<<<<<<<<<<<<<
 *                 reader.writeShort(0)
 *                 continue
 */
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":364
 *                 reader.writeShort(0)
 *                 continue
 *             reader.writeShort(directionData.tell() + 2 * 32)             # <<<<<<<<<<<<<<
 *             self.loadedDirections[i].write(directionData)
 *         reader.writeReader(directionData)
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 364, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyInt_From_long((((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_directionData->__pyx_vtab)->tell(__pyx_v_directionData, 0) + 64)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 364, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 364, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":365
 *                 continue
 *             reader.writeShort(directionData.tell() + 2 * 32)
 *             self.loadedDirections[i].write(directionData)             # <<<<<<<<<<<<<<
 *         reader.writeReader(directionData)
 * 
 */
    if (unlikely(__pyx_v_self->loadedDirections == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 365, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 365, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyDict_GetItem(__pyx_v_self->loadedDirections, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 365, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 365, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, ((PyObject *)__pyx_v_directionData)) : __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)__pyx_v_directionData));
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 365, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_L3_continue:;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":366
 *             reader.writeShort(directionData.tell() + 2 * 32)
 *             self.loadedDirections[i].write(directionData)
 *         reader.writeReader(directionData)             # <<<<<<<<<<<<<<
 * 
 *     def getIndex(self):
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeReader); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, ((PyObject *)__pyx_v_directionData)) : __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)__pyx_v_directionData));
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":358
 *                 directionDict))
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         directionData = ByteReader()
 *         for i in xrange(32):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_directionData);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":368
 *         reader.writeReader(directionData)
 * 
 *     def getIndex(self):             # <<<<<<<<<<<<<<
 *         return self.index
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_7getIndex(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_7getIndex(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getIndex (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_6getIndex(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_6getIndex(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getIndex", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":369
 * 
 *     def getIndex(self):
 *         return self.index             # <<<<<<<<<<<<<<
 * 
 *     def getName(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":368
 *         reader.writeReader(directionData)
 * 
 *     def getIndex(self):             # <<<<<<<<<<<<<<
 *         return self.index
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.getIndex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":371
 *         return self.index
 * 
 *     def getName(self):             # <<<<<<<<<<<<<<
 *         index = self.getIndex()
 *         try:
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_9getName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_9getName(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getName (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_8getName(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_8getName(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self) {
  PyObject *__pyx_v_index = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getName", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":372
 * 
 *     def getName(self):
 *         index = self.getIndex()             # <<<<<<<<<<<<<<
 *         try:
 *             return ANIMATION_NAMES[index]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getIndex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_index = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":373
 *     def getName(self):
 *         index = self.getIndex()
 *         try:             # <<<<<<<<<<<<<<
 *             return ANIMATION_NAMES[index]
 *         except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    /*try:*/ {

      /* "mmfparser/data/chunkloaders/objects.pyx":374
 *         index = self.getIndex()
 *         try:
 *             return ANIMATION_NAMES[index]             # <<<<<<<<<<<<<<
 *         except:
 *             return 'User defined %s' % (index - 12 + 1)
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ANIMATION_NAMES); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 374, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 374, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      goto __pyx_L7_try_return;

      /* "mmfparser/data/chunkloaders/objects.pyx":373
 *     def getName(self):
 *         index = self.getIndex()
 *         try:             # <<<<<<<<<<<<<<
 *             return ANIMATION_NAMES[index]
 *         except:
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":375
 *         try:
 *             return ANIMATION_NAMES[index]
 *         except:             # <<<<<<<<<<<<<<
 *             return 'User defined %s' % (index - 12 + 1)
 * 
 */
    /*except:*/ {
      __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.getName", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) __PYX_ERR(0, 375, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_3);

      /* "mmfparser/data/chunkloaders/objects.pyx":376
 *             return ANIMATION_NAMES[index]
 *         except:
 *             return 'User defined %s' % (index - 12 + 1)             # <<<<<<<<<<<<<<
 * 
 * STOPPED = 0
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_v_index, __pyx_int_12, 12, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 376, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 376, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyString_FormatSafe(__pyx_kp_s_User_defined_s, __pyx_t_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 376, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_r = __pyx_t_7;
      __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L6_except_return;
    }
    __pyx_L5_except_error:;

    /* "mmfparser/data/chunkloaders/objects.pyx":373
 *     def getName(self):
 *         index = self.getIndex()
 *         try:             # <<<<<<<<<<<<<<
 *             return ANIMATION_NAMES[index]
 *         except:
 */
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
    goto __pyx_L0;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_4, __pyx_t_5, __pyx_t_6);
    goto __pyx_L0;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":371
 *         return self.index
 * 
 *     def getName(self):             # <<<<<<<<<<<<<<
 *         index = self.getIndex()
 *         try:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.getName", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_index);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":334
 * cdef class Animation(DataLoader):
 *     cdef public:
 *         cdef int index             # <<<<<<<<<<<<<<
 *         cdef list directions
 *         cdef dict loadedDirections
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.index.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 334, __pyx_L1_error)
  __pyx_v_self->index = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.index.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":335
 *     cdef public:
 *         cdef int index
 *         cdef list directions             # <<<<<<<<<<<<<<
 *         cdef dict loadedDirections
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->directions);
  __pyx_r = __pyx_v_self->directions;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 335, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->directions);
  __Pyx_DECREF(__pyx_v_self->directions);
  __pyx_v_self->directions = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.directions.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->directions);
  __Pyx_DECREF(__pyx_v_self->directions);
  __pyx_v_self->directions = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":336
 *         cdef int index
 *         cdef list directions
 *         cdef dict loadedDirections             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->loadedDirections);
  __pyx_r = __pyx_v_self->loadedDirections;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 336, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->loadedDirections);
  __Pyx_DECREF(__pyx_v_self->loadedDirections);
  __pyx_v_self->loadedDirections = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.loadedDirections.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->loadedDirections);
  __Pyx_DECREF(__pyx_v_self->loadedDirections);
  __pyx_v_self->loadedDirections = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_10__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.directions, self.index, self.loadedDirections, self.parent, self.settings)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->index); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_self->directions);
  __Pyx_GIVEREF(__pyx_v_self->directions);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self->directions);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->loadedDirections);
  __Pyx_GIVEREF(__pyx_v_self->loadedDirections);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_self->loadedDirections);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_2, 3, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_v_self->__pyx_base.settings);
  __pyx_t_1 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.directions, self.index, self.loadedDirections, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_2 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v__dict = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "(tree fragment)":7
 *     state = (self.directions, self.index, self.loadedDirections, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_3 = (__pyx_v__dict != Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v__dict);
    __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.directions is not None or self.loadedDirections is not None or self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.directions, self.index, self.loadedDirections, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.directions is not None or self.loadedDirections is not None or self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, None), state
 */
  /*else*/ {
    __pyx_t_3 = (__pyx_v_self->directions != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->loadedDirections != ((PyObject*)Py_None));
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_4 = __pyx_t_3;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_3 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_3 = (__pyx_t_5 != 0);
    __pyx_t_4 = __pyx_t_3;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_4;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.directions is not None or self.loadedDirections is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, None), state
 *     else:
 */
  __pyx_t_4 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_4) {

    /* "(tree fragment)":13
 *         use_setstate = self.directions is not None or self.loadedDirections is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pyx_unpickle_Animation); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_32651745);
    __Pyx_GIVEREF(__pyx_int_32651745);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_int_32651745);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_2, 2, Py_None);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_2);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_1 = 0;
    __pyx_t_2 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.directions is not None or self.loadedDirections is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, None), state
 *     else:
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Animation__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_Animation); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_32651745);
    __Pyx_GIVEREF(__pyx_int_32651745);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_int_32651745);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_state);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
    __pyx_t_6 = 0;
    __pyx_t_2 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Animation__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_12__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Animation_12__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Animation__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Animation__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Animation, (type(self), 0x1f239e1, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Animation__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Animation.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":405
 * }
 * 
 * def getClosestAnimation(index, animationDict, count):             # <<<<<<<<<<<<<<
 *     try:
 *         return animationDict[index]
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_1getClosestAnimation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_1getClosestAnimation = {"getClosestAnimation", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_1getClosestAnimation, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_1getClosestAnimation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_index = 0;
  PyObject *__pyx_v_animationDict = 0;
  PyObject *__pyx_v_count = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getClosestAnimation (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_index,&__pyx_n_s_animationDict,&__pyx_n_s_count,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_index)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_animationDict)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getClosestAnimation", 1, 3, 3, 1); __PYX_ERR(0, 405, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_count)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getClosestAnimation", 1, 3, 3, 2); __PYX_ERR(0, 405, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "getClosestAnimation") < 0)) __PYX_ERR(0, 405, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_index = values[0];
    __pyx_v_animationDict = values[1];
    __pyx_v_count = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getClosestAnimation", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 405, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.getClosestAnimation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_getClosestAnimation(__pyx_self, __pyx_v_index, __pyx_v_animationDict, __pyx_v_count);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_getClosestAnimation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_index, PyObject *__pyx_v_animationDict, PyObject *__pyx_v_count) {
  PyObject *__pyx_v_alternative = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getClosestAnimation", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":406
 * 
 * def getClosestAnimation(index, animationDict, count):
 *     try:             # <<<<<<<<<<<<<<
 *         return animationDict[index]
 *     except KeyError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "mmfparser/data/chunkloaders/objects.pyx":407
 * def getClosestAnimation(index, animationDict, count):
 *     try:
 *         return animationDict[index]             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         pass
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_animationDict, __pyx_v_index); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 407, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      goto __pyx_L7_try_return;

      /* "mmfparser/data/chunkloaders/objects.pyx":406
 * 
 * def getClosestAnimation(index, animationDict, count):
 *     try:             # <<<<<<<<<<<<<<
 *         return animationDict[index]
 *     except KeyError:
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":408
 *     try:
 *         return animationDict[index]
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         pass
 *     try:
 */
    __pyx_t_5 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_5) {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "mmfparser/data/chunkloaders/objects.pyx":406
 * 
 * def getClosestAnimation(index, animationDict, count):
 *     try:             # <<<<<<<<<<<<<<
 *         return animationDict[index]
 *     except KeyError:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":410
 *     except KeyError:
 *         pass
 *     try:             # <<<<<<<<<<<<<<
 *         for alternative in ANIMATION_ALTERNATIVES[index]:
 *             if alternative in animationDict:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_2, &__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_1);
    /*try:*/ {

      /* "mmfparser/data/chunkloaders/objects.pyx":411
 *         pass
 *     try:
 *         for alternative in ANIMATION_ALTERNATIVES[index]:             # <<<<<<<<<<<<<<
 *             if alternative in animationDict:
 *                 return animationDict[alternative]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_ANIMATION_ALTERNATIVES); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L9_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_4, __pyx_v_index); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 411, __pyx_L9_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
        __pyx_t_4 = __pyx_t_6; __Pyx_INCREF(__pyx_t_4); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 411, __pyx_L9_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 411, __pyx_L9_error)
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_4))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 411, __pyx_L9_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 411, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 411, __pyx_L9_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 411, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          }
        } else {
          __pyx_t_6 = __pyx_t_8(__pyx_t_4);
          if (unlikely(!__pyx_t_6)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 411, __pyx_L9_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_6);
        }
        __Pyx_XDECREF_SET(__pyx_v_alternative, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "mmfparser/data/chunkloaders/objects.pyx":412
 *     try:
 *         for alternative in ANIMATION_ALTERNATIVES[index]:
 *             if alternative in animationDict:             # <<<<<<<<<<<<<<
 *                 return animationDict[alternative]
 *     except KeyError:
 */
        __pyx_t_9 = (__Pyx_PySequence_ContainsTF(__pyx_v_alternative, __pyx_v_animationDict, Py_EQ)); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 412, __pyx_L9_error)
        __pyx_t_10 = (__pyx_t_9 != 0);
        if (__pyx_t_10) {

          /* "mmfparser/data/chunkloaders/objects.pyx":413
 *         for alternative in ANIMATION_ALTERNATIVES[index]:
 *             if alternative in animationDict:
 *                 return animationDict[alternative]             # <<<<<<<<<<<<<<
 *     except KeyError:
 *         pass
 */
          __Pyx_XDECREF(__pyx_r);
          __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_v_animationDict, __pyx_v_alternative); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 413, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_r = __pyx_t_6;
          __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          goto __pyx_L13_try_return;

          /* "mmfparser/data/chunkloaders/objects.pyx":412
 *     try:
 *         for alternative in ANIMATION_ALTERNATIVES[index]:
 *             if alternative in animationDict:             # <<<<<<<<<<<<<<
 *                 return animationDict[alternative]
 *     except KeyError:
 */
        }

        /* "mmfparser/data/chunkloaders/objects.pyx":411
 *         pass
 *     try:
 *         for alternative in ANIMATION_ALTERNATIVES[index]:             # <<<<<<<<<<<<<<
 *             if alternative in animationDict:
 *                 return animationDict[alternative]
 */
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":410
 *     except KeyError:
 *         pass
 *     try:             # <<<<<<<<<<<<<<
 *         for alternative in ANIMATION_ALTERNATIVES[index]:
 *             if alternative in animationDict:
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L14_try_end;
    __pyx_L9_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":414
 *             if alternative in animationDict:
 *                 return animationDict[alternative]
 *     except KeyError:             # <<<<<<<<<<<<<<
 *         pass
 *     for i in xrange(count):
 */
    __pyx_t_5 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_KeyError);
    if (__pyx_t_5) {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L10_exception_handled;
    }
    goto __pyx_L11_except_error;
    __pyx_L11_except_error:;

    /* "mmfparser/data/chunkloaders/objects.pyx":410
 *     except KeyError:
 *         pass
 *     try:             # <<<<<<<<<<<<<<
 *         for alternative in ANIMATION_ALTERNATIVES[index]:
 *             if alternative in animationDict:
 */
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_2, __pyx_t_1);
    goto __pyx_L1_error;
    __pyx_L13_try_return:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_2, __pyx_t_1);
    goto __pyx_L0;
    __pyx_L10_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_2, __pyx_t_1);
    __pyx_L14_try_end:;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":416
 *     except KeyError:
 *         pass
 *     for i in xrange(count):             # <<<<<<<<<<<<<<
 *         if i in animationDict:
 *             return animationDict[i]
 */
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_xrange, __pyx_v_count); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
    __pyx_t_6 = __pyx_t_4; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 416, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_6))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_6)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 416, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 416, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 416, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_8(__pyx_t_6);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 416, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":417
 *         pass
 *     for i in xrange(count):
 *         if i in animationDict:             # <<<<<<<<<<<<<<
 *             return animationDict[i]
 *     raise IndexError('no animation could be found for %r' % (
 */
    __pyx_t_10 = (__Pyx_PySequence_ContainsTF(__pyx_v_i, __pyx_v_animationDict, Py_EQ)); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 417, __pyx_L1_error)
    __pyx_t_9 = (__pyx_t_10 != 0);
    if (__pyx_t_9) {

      /* "mmfparser/data/chunkloaders/objects.pyx":418
 *     for i in xrange(count):
 *         if i in animationDict:
 *             return animationDict[i]             # <<<<<<<<<<<<<<
 *     raise IndexError('no animation could be found for %r' % (
 *         ANIMATION_NAMES[index]))
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_animationDict, __pyx_v_i); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 418, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L0;

      /* "mmfparser/data/chunkloaders/objects.pyx":417
 *         pass
 *     for i in xrange(count):
 *         if i in animationDict:             # <<<<<<<<<<<<<<
 *             return animationDict[i]
 *     raise IndexError('no animation could be found for %r' % (
 */
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":416
 *     except KeyError:
 *         pass
 *     for i in xrange(count):             # <<<<<<<<<<<<<<
 *         if i in animationDict:
 *             return animationDict[i]
 */
  }
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":420
 *             return animationDict[i]
 *     raise IndexError('no animation could be found for %r' % (
 *         ANIMATION_NAMES[index]))             # <<<<<<<<<<<<<<
 * 
 * cdef class AnimationHeader(DataLoader):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_ANIMATION_NAMES); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_v_index); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":419
 *         if i in animationDict:
 *             return animationDict[i]
 *     raise IndexError('no animation could be found for %r' % (             # <<<<<<<<<<<<<<
 *         ANIMATION_NAMES[index]))
 * 
 */
  __pyx_t_6 = __Pyx_PyString_FormatSafe(__pyx_kp_s_no_animation_could_be_found_for, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_IndexError, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_Raise(__pyx_t_4, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __PYX_ERR(0, 419, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":405
 * }
 * 
 * def getClosestAnimation(index, animationDict, count):             # <<<<<<<<<<<<<<
 *     try:
 *         return animationDict[index]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.getClosestAnimation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_alternative);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":427
 *         list items
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.loadedAnimations = {}
 *         self.items = []
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 427, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 427, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":428
 * 
 *     cpdef initialize(self):
 *         self.loadedAnimations = {}             # <<<<<<<<<<<<<<
 *         self.items = []
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 428, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->loadedAnimations);
  __Pyx_DECREF(__pyx_v_self->loadedAnimations);
  __pyx_v_self->loadedAnimations = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":429
 *     cpdef initialize(self):
 *         self.loadedAnimations = {}
 *         self.items = []             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 429, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":427
 *         list items
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.loadedAnimations = {}
 *         self.items = []
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":431
 *         self.items = []
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         currentPosition = reader.tell()
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  int __pyx_v_currentPosition;
  CYTHON_UNUSED int __pyx_v_size;
  int __pyx_v_count;
  PyObject *__pyx_v_offsets = NULL;
  PyObject *__pyx_v_animationDict = NULL;
  PyObject *__pyx_v_index = NULL;
  PyObject *__pyx_v_offset = NULL;
  CYTHON_UNUSED int __pyx_v__;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *(*__pyx_t_13)(PyObject *);
  int __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 431, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 431, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":432
 * 
 *     cpdef read(self, ByteReader reader):
 *         currentPosition = reader.tell()             # <<<<<<<<<<<<<<
 * 
 *         size = reader.readShort()
 */
  __pyx_v_currentPosition = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->tell(__pyx_v_reader, 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":434
 *         currentPosition = reader.tell()
 * 
 *         size = reader.readShort()             # <<<<<<<<<<<<<<
 * 
 *         count = reader.readShort()
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 434, __pyx_L1_error)
  __pyx_v_size = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":436
 *         size = reader.readShort()
 * 
 *         count = reader.readShort()             # <<<<<<<<<<<<<<
 * 
 *         offsets = [reader.readShort() for _ in xrange(count)]
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 436, __pyx_L1_error)
  __pyx_v_count = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":438
 *         count = reader.readShort()
 * 
 *         offsets = [reader.readShort() for _ in xrange(count)]             # <<<<<<<<<<<<<<
 * 
 *         self.loadedAnimations = animationDict = {}
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __pyx_v_count;
  __pyx_t_6 = __pyx_t_5;
  for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
    __pyx_v__ = __pyx_t_7;
    __pyx_t_8 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_8 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 438, __pyx_L1_error)
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 438, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 438, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_offsets = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":440
 *         offsets = [reader.readShort() for _ in xrange(count)]
 * 
 *         self.loadedAnimations = animationDict = {}             # <<<<<<<<<<<<<<
 *         for index, offset in enumerate(offsets):
 *             if offset != 0:
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->loadedAnimations);
  __Pyx_DECREF(__pyx_v_self->loadedAnimations);
  __pyx_v_self->loadedAnimations = __pyx_t_1;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_animationDict = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":441
 * 
 *         self.loadedAnimations = animationDict = {}
 *         for index, offset in enumerate(offsets):             # <<<<<<<<<<<<<<
 *             if offset != 0:
 *                 reader.seek(currentPosition + offset)
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_1 = __pyx_int_0;
  __pyx_t_2 = __pyx_v_offsets; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
  for (;;) {
    if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_3); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 441, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_offset, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_index, __pyx_t_1);
    __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1);
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":442
 *         self.loadedAnimations = animationDict = {}
 *         for index, offset in enumerate(offsets):
 *             if offset != 0:             # <<<<<<<<<<<<<<
 *                 reader.seek(currentPosition + offset)
 *                 animationDict[index] = self.new(Animation, reader,
 */
    __pyx_t_3 = __Pyx_PyInt_NeObjC(__pyx_v_offset, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 442, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 442, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__pyx_t_10) {

      /* "mmfparser/data/chunkloaders/objects.pyx":443
 *         for index, offset in enumerate(offsets):
 *             if offset != 0:
 *                 reader.seek(currentPosition + offset)             # <<<<<<<<<<<<<<
 *                 animationDict[index] = self.new(Animation, reader,
 *                     index = index)
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_currentPosition); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 443, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_offset); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 443, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_4); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 443, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, __pyx_t_5, 0, NULL));

      /* "mmfparser/data/chunkloaders/objects.pyx":444
 *             if offset != 0:
 *                 reader.seek(currentPosition + offset)
 *                 animationDict[index] = self.new(Animation, reader,             # <<<<<<<<<<<<<<
 *                     index = index)
 * 
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 444, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 444, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Animation));
      __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Animation));
      PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Animation));
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)__pyx_v_reader));

      /* "mmfparser/data/chunkloaders/objects.pyx":445
 *                 reader.seek(currentPosition + offset)
 *                 animationDict[index] = self.new(Animation, reader,
 *                     index = index)             # <<<<<<<<<<<<<<
 * 
 *         for index in xrange(count):
 */
      __pyx_t_11 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 445, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      if (PyDict_SetItem(__pyx_t_11, __pyx_n_s_index, __pyx_v_index) < 0) __PYX_ERR(0, 445, __pyx_L1_error)

      /* "mmfparser/data/chunkloaders/objects.pyx":444
 *             if offset != 0:
 *                 reader.seek(currentPosition + offset)
 *                 animationDict[index] = self.new(Animation, reader,             # <<<<<<<<<<<<<<
 *                     index = index)
 * 
 */
      __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, __pyx_t_11); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 444, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_animationDict, __pyx_v_index, __pyx_t_12) < 0)) __PYX_ERR(0, 444, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":442
 *         self.loadedAnimations = animationDict = {}
 *         for index, offset in enumerate(offsets):
 *             if offset != 0:             # <<<<<<<<<<<<<<
 *                 reader.seek(currentPosition + offset)
 *                 animationDict[index] = self.new(Animation, reader,
 */
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":441
 * 
 *         self.loadedAnimations = animationDict = {}
 *         for index, offset in enumerate(offsets):             # <<<<<<<<<<<<<<
 *             if offset != 0:
 *                 reader.seek(currentPosition + offset)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":447
 *                     index = index)
 * 
 *         for index in xrange(count):             # <<<<<<<<<<<<<<
 *             self.items.append(getClosestAnimation(index, animationDict, count))
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_count); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_xrange, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 447, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1); __pyx_t_9 = 0;
    __pyx_t_13 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 447, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_13 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 447, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_13)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 447, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 447, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 447, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 447, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_13(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 447, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_index, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":448
 * 
 *         for index in xrange(count):
 *             self.items.append(getClosestAnimation(index, animationDict, count))             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
    if (unlikely(__pyx_v_self->items == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 448, __pyx_L1_error)
    }
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_getClosestAnimation); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_count); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_12)) {
      PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_v_index, __pyx_v_animationDict, __pyx_t_11};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_12, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 448, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_12)) {
      PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_v_index, __pyx_v_animationDict, __pyx_t_11};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_12, __pyx_temp+1-__pyx_t_5, 3+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 448, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(3+__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 448, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_INCREF(__pyx_v_index);
      __Pyx_GIVEREF(__pyx_v_index);
      PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_5, __pyx_v_index);
      __Pyx_INCREF(__pyx_v_animationDict);
      __Pyx_GIVEREF(__pyx_v_animationDict);
      PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_5, __pyx_v_animationDict);
      __Pyx_GIVEREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_4, 2+__pyx_t_5, __pyx_t_11);
      __pyx_t_11 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 448, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_14 = __Pyx_PyList_Append(__pyx_v_self->items, __pyx_t_2); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 448, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":447
 *                     index = index)
 * 
 *         for index in xrange(count):             # <<<<<<<<<<<<<<
 *             self.items.append(getClosestAnimation(index, animationDict, count))
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":431
 *         self.items = []
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         currentPosition = reader.tell()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_offsets);
  __Pyx_XDECREF(__pyx_v_animationDict);
  __Pyx_XDECREF(__pyx_v_index);
  __Pyx_XDECREF(__pyx_v_offset);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 431, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 431, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":450
 *             self.items.append(getClosestAnimation(index, animationDict, count))
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         count = max(16, max(self.loadedAnimations.keys()) + 1)
 *         offsets = []
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 450, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_4write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_v_count = NULL;
  PyObject *__pyx_v_offsets = NULL;
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_animationData = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_offset = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  long __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":451
 * 
 *     def write(self, ByteReader reader):
 *         count = max(16, max(self.loadedAnimations.keys()) + 1)             # <<<<<<<<<<<<<<
 *         offsets = []
 *         animationData = ByteReader()
 */
  if (unlikely(__pyx_v_self->loadedAnimations == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "keys");
    __PYX_ERR(0, 451, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_Keys(__pyx_v_self->loadedAnimations); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_max, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_3 = 16;
  __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_GT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_6) {
    __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __pyx_t_5;
    __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __pyx_t_2;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_count = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":452
 *     def write(self, ByteReader reader):
 *         count = max(16, max(self.loadedAnimations.keys()) + 1)
 *         offsets = []             # <<<<<<<<<<<<<<
 *         animationData = ByteReader()
 *         for i in xrange(count):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_offsets = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":453
 *         count = max(16, max(self.loadedAnimations.keys()) + 1)
 *         offsets = []
 *         animationData = ByteReader()             # <<<<<<<<<<<<<<
 *         for i in xrange(count):
 *             if i not in self.loadedAnimations:
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_9mmfparser_10bytereader_ByteReader)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 453, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_animationData = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":454
 *         offsets = []
 *         animationData = ByteReader()
 *         for i in xrange(count):             # <<<<<<<<<<<<<<
 *             if i not in self.loadedAnimations:
 *                 offsets.append(0)
 */
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_xrange, __pyx_v_count); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 454, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 454, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 454, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_8(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 454, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":455
 *         animationData = ByteReader()
 *         for i in xrange(count):
 *             if i not in self.loadedAnimations:             # <<<<<<<<<<<<<<
 *                 offsets.append(0)
 *                 continue
 */
    if (unlikely(__pyx_v_self->loadedAnimations == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 455, __pyx_L1_error)
    }
    __pyx_t_6 = (__Pyx_PyDict_ContainsTF(__pyx_v_i, __pyx_v_self->loadedAnimations, Py_NE)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 455, __pyx_L1_error)
    __pyx_t_9 = (__pyx_t_6 != 0);
    if (__pyx_t_9) {

      /* "mmfparser/data/chunkloaders/objects.pyx":456
 *         for i in xrange(count):
 *             if i not in self.loadedAnimations:
 *                 offsets.append(0)             # <<<<<<<<<<<<<<
 *                 continue
 *             offsets.append(animationData.tell() + 4 + 2 * count)
 */
      __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_offsets, __pyx_int_0); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 456, __pyx_L1_error)

      /* "mmfparser/data/chunkloaders/objects.pyx":457
 *             if i not in self.loadedAnimations:
 *                 offsets.append(0)
 *                 continue             # <<<<<<<<<<<<<<
 *             offsets.append(animationData.tell() + 4 + 2 * count)
 *             self.loadedAnimations[i].write(animationData)
 */
      goto __pyx_L3_continue;

      /* "mmfparser/data/chunkloaders/objects.pyx":455
 *         animationData = ByteReader()
 *         for i in xrange(count):
 *             if i not in self.loadedAnimations:             # <<<<<<<<<<<<<<
 *                 offsets.append(0)
 *                 continue
 */
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":458
 *                 offsets.append(0)
 *                 continue
 *             offsets.append(animationData.tell() + 4 + 2 * count)             # <<<<<<<<<<<<<<
 *             self.loadedAnimations[i].write(animationData)
 *         reader.writeShort(len(animationData) + 4 + 2 * count) # size
 */
    __pyx_t_1 = __Pyx_PyInt_From_long((((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_animationData->__pyx_vtab)->tell(__pyx_v_animationData, 0) + 4)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 458, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Multiply(__pyx_int_2, __pyx_v_count); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 458, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyNumber_Add(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 458, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_10 = __Pyx_PyList_Append(__pyx_v_offsets, __pyx_t_4); if (unlikely(__pyx_t_10 == ((int)-1))) __PYX_ERR(0, 458, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":459
 *                 continue
 *             offsets.append(animationData.tell() + 4 + 2 * count)
 *             self.loadedAnimations[i].write(animationData)             # <<<<<<<<<<<<<<
 *         reader.writeShort(len(animationData) + 4 + 2 * count) # size
 *         reader.writeShort(count)
 */
    if (unlikely(__pyx_v_self->loadedAnimations == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 459, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_self->loadedAnimations, __pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 459, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 459, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, ((PyObject *)__pyx_v_animationData)) : __Pyx_PyObject_CallOneArg(__pyx_t_1, ((PyObject *)__pyx_v_animationData));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 459, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":454
 *         offsets = []
 *         animationData = ByteReader()
 *         for i in xrange(count):             # <<<<<<<<<<<<<<
 *             if i not in self.loadedAnimations:
 *                 offsets.append(0)
 */
    __pyx_L3_continue:;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":460
 *             offsets.append(animationData.tell() + 4 + 2 * count)
 *             self.loadedAnimations[i].write(animationData)
 *         reader.writeShort(len(animationData) + 4 + 2 * count) # size             # <<<<<<<<<<<<<<
 *         reader.writeShort(count)
 *         for offset in offsets:
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = PyObject_Length(((PyObject *)__pyx_v_animationData)); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 460, __pyx_L1_error)
  __pyx_t_1 = PyInt_FromSsize_t((__pyx_t_7 + 4)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyNumber_Multiply(__pyx_int_2, __pyx_v_count); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_11 = PyNumber_Add(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_11);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 460, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":461
 *             self.loadedAnimations[i].write(animationData)
 *         reader.writeShort(len(animationData) + 4 + 2 * count) # size
 *         reader.writeShort(count)             # <<<<<<<<<<<<<<
 *         for offset in offsets:
 *             reader.writeShort(offset)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_11 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_11)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_11);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_11, __pyx_v_count) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_count);
  __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":462
 *         reader.writeShort(len(animationData) + 4 + 2 * count) # size
 *         reader.writeShort(count)
 *         for offset in offsets:             # <<<<<<<<<<<<<<
 *             reader.writeShort(offset)
 *         reader.writeReader(animationData)
 */
  __pyx_t_2 = __pyx_v_offsets; __Pyx_INCREF(__pyx_t_2); __pyx_t_7 = 0;
  for (;;) {
    if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 462, __pyx_L1_error)
    #else
    __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 462, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":463
 *         reader.writeShort(count)
 *         for offset in offsets:
 *             reader.writeShort(offset)             # <<<<<<<<<<<<<<
 *         reader.writeReader(animationData)
 * 
 */
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_11))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_11);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_11, function);
      }
    }
    __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_5, __pyx_v_offset) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_v_offset);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":462
 *         reader.writeShort(len(animationData) + 4 + 2 * count) # size
 *         reader.writeShort(count)
 *         for offset in offsets:             # <<<<<<<<<<<<<<
 *             reader.writeShort(offset)
 *         reader.writeReader(animationData)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":464
 *         for offset in offsets:
 *             reader.writeShort(offset)
 *         reader.writeReader(animationData)             # <<<<<<<<<<<<<<
 * 
 *     def fromName(self, name):
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeReader); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_11 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_11)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_11);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_11, ((PyObject *)__pyx_v_animationData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_animationData));
  __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 464, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":450
 *             self.items.append(getClosestAnimation(index, animationDict, count))
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         count = max(16, max(self.loadedAnimations.keys()) + 1)
 *         offsets = []
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_count);
  __Pyx_XDECREF(__pyx_v_offsets);
  __Pyx_XDECREF((PyObject *)__pyx_v_animationData);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_offset);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":466
 *         reader.writeReader(animationData)
 * 
 *     def fromName(self, name):             # <<<<<<<<<<<<<<
 *         index = ANIMATION_NAMES.index(name)
 *         return self.items[index]
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_7fromName(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_7fromName(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("fromName (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_6fromName(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_6fromName(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_v_index = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fromName", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":467
 * 
 *     def fromName(self, name):
 *         index = ANIMATION_NAMES.index(name)             # <<<<<<<<<<<<<<
 *         return self.items[index]
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_ANIMATION_NAMES); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_v_name) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_name);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_index = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":468
 *     def fromName(self, name):
 *         index = ANIMATION_NAMES.index(name)
 *         return self.items[index]             # <<<<<<<<<<<<<<
 * 
 * HIDDEN = 0
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_self->items == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 468, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_self->items, __pyx_v_index); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":466
 *         reader.writeReader(animationData)
 * 
 *     def fromName(self, name):             # <<<<<<<<<<<<<<
 *         index = ANIMATION_NAMES.index(name)
 *         return self.items[index]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.fromName", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_index);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":424
 * cdef class AnimationHeader(DataLoader):
 *     cdef public:
 *         dict loadedAnimations             # <<<<<<<<<<<<<<
 *         list items
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->loadedAnimations);
  __pyx_r = __pyx_v_self->loadedAnimations;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 424, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->loadedAnimations);
  __Pyx_DECREF(__pyx_v_self->loadedAnimations);
  __pyx_v_self->loadedAnimations = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.loadedAnimations.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->loadedAnimations);
  __Pyx_DECREF(__pyx_v_self->loadedAnimations);
  __pyx_v_self->loadedAnimations = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":425
 *     cdef public:
 *         dict loadedAnimations
 *         list items             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->items);
  __pyx_r = __pyx_v_self->items;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 425, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.items.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_8__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.items, self.loadedAnimations, self.parent, self.settings)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->items);
  __Pyx_GIVEREF(__pyx_v_self->items);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self->items);
  __Pyx_INCREF(__pyx_v_self->loadedAnimations);
  __Pyx_GIVEREF(__pyx_v_self->loadedAnimations);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_self->loadedAnimations);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_self->__pyx_base.settings);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.items, self.loadedAnimations, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = (self.items, self.loadedAnimations, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.items is not None or self.loadedAnimations is not None or self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.items, self.loadedAnimations, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.items is not None or self.loadedAnimations is not None or self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, None), state
 */
  /*else*/ {
    __pyx_t_2 = (__pyx_v_self->items != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->loadedAnimations != ((PyObject*)Py_None));
    __pyx_t_2 = (__pyx_t_5 != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_2 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_5 = (__pyx_t_2 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_3 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_2 = (__pyx_t_5 != 0);
    __pyx_t_3 = __pyx_t_2;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_3;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.items is not None or self.loadedAnimations is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, None), state
 *     else:
 */
  __pyx_t_3 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":13
 *         use_setstate = self.items is not None or self.loadedAnimations is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_AnimationHeader); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_74401274);
    __Pyx_GIVEREF(__pyx_int_74401274);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_74401274);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.items is not None or self.loadedAnimations is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, None), state
 *     else:
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_AnimationHeader__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_AnimationHeader); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_74401274);
    __Pyx_GIVEREF(__pyx_int_74401274);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_74401274);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __pyx_t_6 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_AnimationHeader__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_10__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_AnimationHeader__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AnimationHeader__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_AnimationHeader, (type(self), 0x46f45fa, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_AnimationHeader__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.AnimationHeader.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":539
 *         bint addNulls
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt(True)
 *         self.width = reader.readInt(True)
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_8Counters_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  CYTHON_UNUSED PyObject *__pyx_v_size = NULL;
  CYTHON_UNUSED int __pyx_v__;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt __pyx_t_5;
  int __pyx_t_6;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 539, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_1read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 539, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":540
 * 
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt(True)             # <<<<<<<<<<<<<<
 *         self.width = reader.readInt(True)
 *         self.height = reader.readInt(True)
 */
  __pyx_t_5.__pyx_n = 1;
  __pyx_t_5.asUnsigned = 1;
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 540, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_size = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":541
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt(True)
 *         self.width = reader.readInt(True)             # <<<<<<<<<<<<<<
 *         self.height = reader.readInt(True)
 *         self.player = reader.readShort(True)
 */
  __pyx_t_5.__pyx_n = 1;
  __pyx_t_5.asUnsigned = 1;
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->width = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":542
 *         size = reader.readInt(True)
 *         self.width = reader.readInt(True)
 *         self.height = reader.readInt(True)             # <<<<<<<<<<<<<<
 *         self.player = reader.readShort(True)
 *         self.displayType = reader.readShort()
 */
  __pyx_t_5.__pyx_n = 1;
  __pyx_t_5.asUnsigned = 1;
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 542, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->height = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":543
 *         self.width = reader.readInt(True)
 *         self.height = reader.readInt(True)
 *         self.player = reader.readShort(True)             # <<<<<<<<<<<<<<
 *         self.displayType = reader.readShort()
 *         self.flags = reader.readShort()
 */
  __pyx_t_7.__pyx_n = 1;
  __pyx_t_7.asUnsigned = 1;
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_7); if (unlikely(__pyx_t_6 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 543, __pyx_L1_error)
  __pyx_v_self->player = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":544
 *         self.height = reader.readInt(True)
 *         self.player = reader.readShort(True)
 *         self.displayType = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.flags = reader.readShort()
 * 
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 544, __pyx_L1_error)
  __pyx_v_self->displayType = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":545
 *         self.player = reader.readShort(True)
 *         self.displayType = reader.readShort()
 *         self.flags = reader.readShort()             # <<<<<<<<<<<<<<
 * 
 *         self.integerDigits = self.flags & INT_DIGITS_MASK
 */
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_6 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 545, __pyx_L1_error)
  __pyx_v_self->flags = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":547
 *         self.flags = reader.readShort()
 * 
 *         self.integerDigits = self.flags & INT_DIGITS_MASK             # <<<<<<<<<<<<<<
 *         self.formatFloat = self.flags & FORMAT_FLOAT != 0
 *         self.floatDigits = ((self.flags & FLOAT_DIGITS_MASK
 */
  __pyx_v_self->integerDigits = (__pyx_v_self->flags & __pyx_v_9mmfparser_4data_12chunkloaders_7objects_INT_DIGITS_MASK);

  /* "mmfparser/data/chunkloaders/objects.pyx":548
 * 
 *         self.integerDigits = self.flags & INT_DIGITS_MASK
 *         self.formatFloat = self.flags & FORMAT_FLOAT != 0             # <<<<<<<<<<<<<<
 *         self.floatDigits = ((self.flags & FLOAT_DIGITS_MASK
 *             ) >> FLOAT_DIGITS_SHIFT) + 1
 */
  __pyx_v_self->formatFloat = ((__pyx_v_self->flags & __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FORMAT_FLOAT) != 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":549
 *         self.integerDigits = self.flags & INT_DIGITS_MASK
 *         self.formatFloat = self.flags & FORMAT_FLOAT != 0
 *         self.floatDigits = ((self.flags & FLOAT_DIGITS_MASK             # <<<<<<<<<<<<<<
 *             ) >> FLOAT_DIGITS_SHIFT) + 1
 *         self.useDecimals = self.flags & USE_DECIMALS != 0
 */
  __pyx_v_self->floatDigits = (((__pyx_v_self->flags & __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DIGITS_MASK) >> __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DIGITS_SHIFT) + 1);

  /* "mmfparser/data/chunkloaders/objects.pyx":551
 *         self.floatDigits = ((self.flags & FLOAT_DIGITS_MASK
 *             ) >> FLOAT_DIGITS_SHIFT) + 1
 *         self.useDecimals = self.flags & USE_DECIMALS != 0             # <<<<<<<<<<<<<<
 *         self.decimals = ((self.flags & FLOAT_DECIMALS_MASK
 *             ) >> FLOAT_DECIMALS_SHIFT)
 */
  __pyx_v_self->useDecimals = ((__pyx_v_self->flags & __pyx_v_9mmfparser_4data_12chunkloaders_7objects_USE_DECIMALS) != 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":552
 *             ) >> FLOAT_DIGITS_SHIFT) + 1
 *         self.useDecimals = self.flags & USE_DECIMALS != 0
 *         self.decimals = ((self.flags & FLOAT_DECIMALS_MASK             # <<<<<<<<<<<<<<
 *             ) >> FLOAT_DECIMALS_SHIFT)
 *         self.addNulls = self.flags & FLOAT_PAD != 0
 */
  __pyx_v_self->decimals = ((__pyx_v_self->flags & __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DECIMALS_MASK) >> __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DECIMALS_SHIFT);

  /* "mmfparser/data/chunkloaders/objects.pyx":554
 *         self.decimals = ((self.flags & FLOAT_DECIMALS_MASK
 *             ) >> FLOAT_DECIMALS_SHIFT)
 *         self.addNulls = self.flags & FLOAT_PAD != 0             # <<<<<<<<<<<<<<
 * 
 *         self.inverse = byteflag.getFlag(self.flags, 8)
 */
  __pyx_v_self->addNulls = ((__pyx_v_self->flags & __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_PAD) != 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":556
 *         self.addNulls = self.flags & FLOAT_PAD != 0
 * 
 *         self.inverse = byteflag.getFlag(self.flags, 8)             # <<<<<<<<<<<<<<
 *         self.font = reader.readShort(True)
 *         if self.displayType == HIDDEN:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_byteflag); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_getFlag); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->flags); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_2, __pyx_int_8};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_2, __pyx_int_8};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_6, __pyx_t_2);
    __Pyx_INCREF(__pyx_int_8);
    __Pyx_GIVEREF(__pyx_int_8);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_6, __pyx_int_8);
    __pyx_t_2 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 556, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->inverse = __pyx_t_9;

  /* "mmfparser/data/chunkloaders/objects.pyx":557
 * 
 *         self.inverse = byteflag.getFlag(self.flags, 8)
 *         self.font = reader.readShort(True)             # <<<<<<<<<<<<<<
 *         if self.displayType == HIDDEN:
 *             pass
 */
  __pyx_t_7.__pyx_n = 1;
  __pyx_t_7.asUnsigned = 1;
  __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_7); if (unlikely(__pyx_t_6 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 557, __pyx_L1_error)
  __pyx_v_self->font = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":558
 *         self.inverse = byteflag.getFlag(self.flags, 8)
 *         self.font = reader.readShort(True)
 *         if self.displayType == HIDDEN:             # <<<<<<<<<<<<<<
 *             pass
 *         elif self.displayType in (NUMBERS, ANIMATION):
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->displayType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_HIDDEN); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 558, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 558, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (__pyx_t_9) {
    goto __pyx_L3;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":560
 *         if self.displayType == HIDDEN:
 *             pass
 *         elif self.displayType in (NUMBERS, ANIMATION):             # <<<<<<<<<<<<<<
 *             self.frames = [reader.readShort()
 *                 for _ in xrange(reader.readShort(True))]
 */
  __pyx_t_6 = __pyx_v_self->displayType;
  __pyx_t_8 = __Pyx_PyInt_From_int(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_NUMBERS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_8, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!__pyx_t_10) {
  } else {
    __pyx_t_9 = __pyx_t_10;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_ANIMATION); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_9 = __pyx_t_10;
  __pyx_L4_bool_binop_done:;
  __pyx_t_10 = (__pyx_t_9 != 0);
  if (__pyx_t_10) {

    /* "mmfparser/data/chunkloaders/objects.pyx":561
 *             pass
 *         elif self.displayType in (NUMBERS, ANIMATION):
 *             self.frames = [reader.readShort()             # <<<<<<<<<<<<<<
 *                 for _ in xrange(reader.readShort(True))]
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):
 */
    __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 561, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);

    /* "mmfparser/data/chunkloaders/objects.pyx":562
 *         elif self.displayType in (NUMBERS, ANIMATION):
 *             self.frames = [reader.readShort()
 *                 for _ in xrange(reader.readShort(True))]             # <<<<<<<<<<<<<<
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):
 *             self.shape = self.new(Shape, reader)
 */
    __pyx_t_7.__pyx_n = 1;
    __pyx_t_7.asUnsigned = 1;
    __pyx_t_6 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_7); if (unlikely(__pyx_t_6 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 562, __pyx_L1_error)
    __pyx_t_11 = __pyx_t_6;
    for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
      __pyx_v__ = __pyx_t_12;

      /* "mmfparser/data/chunkloaders/objects.pyx":561
 *             pass
 *         elif self.displayType in (NUMBERS, ANIMATION):
 *             self.frames = [reader.readShort()             # <<<<<<<<<<<<<<
 *                 for _ in xrange(reader.readShort(True))]
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):
 */
      __pyx_t_13 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_13 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 561, __pyx_L1_error)
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 561, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_8, (PyObject*)__pyx_t_3))) __PYX_ERR(0, 561, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_GIVEREF(__pyx_t_8);
    __Pyx_GOTREF(__pyx_v_self->frames);
    __Pyx_DECREF(__pyx_v_self->frames);
    __pyx_v_self->frames = ((PyObject*)__pyx_t_8);
    __pyx_t_8 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":560
 *         if self.displayType == HIDDEN:
 *             pass
 *         elif self.displayType in (NUMBERS, ANIMATION):             # <<<<<<<<<<<<<<
 *             self.frames = [reader.readShort()
 *                 for _ in xrange(reader.readShort(True))]
 */
    goto __pyx_L3;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":563
 *             self.frames = [reader.readShort()
 *                 for _ in xrange(reader.readShort(True))]
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):             # <<<<<<<<<<<<<<
 *             self.shape = self.new(Shape, reader)
 * 
 */
  __pyx_t_6 = __pyx_v_self->displayType;
  __pyx_t_8 = __Pyx_PyInt_From_int(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_VERTICAL_BAR); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_8, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!__pyx_t_9) {
  } else {
    __pyx_t_10 = __pyx_t_9;
    goto __pyx_L8_bool_binop_done;
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_HORIZONTAL_BAR); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (!__pyx_t_9) {
  } else {
    __pyx_t_10 = __pyx_t_9;
    goto __pyx_L8_bool_binop_done;
  }
  __pyx_t_8 = __Pyx_PyInt_From_int(__pyx_t_6); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_TEXT_COUNTER); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_8, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_10 = __pyx_t_9;
  __pyx_L8_bool_binop_done:;
  __pyx_t_9 = (__pyx_t_10 != 0);
  if (__pyx_t_9) {

    /* "mmfparser/data/chunkloaders/objects.pyx":564
 *                 for _ in xrange(reader.readShort(True))]
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):
 *             self.shape = self.new(Shape, reader)             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 564, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_6 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[3] = {__pyx_t_8, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape), ((PyObject *)__pyx_v_reader)};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 564, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
      PyObject *__pyx_temp[3] = {__pyx_t_8, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape), ((PyObject *)__pyx_v_reader)};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 564, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    {
      __pyx_t_2 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 564, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (__pyx_t_8) {
        __Pyx_GIVEREF(__pyx_t_8); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_8); __pyx_t_8 = NULL;
      }
      __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape));
      __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape));
      PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_6, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape));
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_6, ((PyObject *)__pyx_v_reader));
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 564, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->shape);
    __Pyx_DECREF(__pyx_v_self->shape);
    __pyx_v_self->shape = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":563
 *             self.frames = [reader.readShort()
 *                 for _ in xrange(reader.readShort(True))]
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):             # <<<<<<<<<<<<<<
 *             self.shape = self.new(Shape, reader)
 * 
 */
  }
  __pyx_L3:;

  /* "mmfparser/data/chunkloaders/objects.pyx":539
 *         bint addNulls
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt(True)
 *         self.width = reader.readInt(True)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_size);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 539, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_8Counters_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":566
 *             self.shape = self.new(Shape, reader)
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0) # size
 *         reader.writeInt(self.width, True)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 566, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_2write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_v_frame = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":567
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0) # size             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.width, True)
 *         reader.writeInt(self.height, True)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_int_0);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 567, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":568
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0) # size
 *         reader.writeInt(self.width, True)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.height, True)
 *         reader.writeShort(self.displayType)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, Py_True};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 568, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, Py_True};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 568, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 568, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_3);
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, Py_True);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 568, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":569
 *         reader.writeInt(0) # size
 *         reader.writeInt(self.width, True)
 *         reader.writeInt(self.height, True)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.displayType)
 *         reader.writeShort(self.flags)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 569, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_6, Py_True};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 569, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_6, Py_True};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 569, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_4 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 569, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_5, __pyx_t_6);
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_5, Py_True);
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 569, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":570
 *         reader.writeInt(self.width, True)
 *         reader.writeInt(self.height, True)
 *         reader.writeShort(self.displayType)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.flags)
 *         reader.writeShort(self.font, True)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->displayType); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":571
 *         reader.writeInt(self.height, True)
 *         reader.writeShort(self.displayType)
 *         reader.writeShort(self.flags)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.font, True)
 *         if self.displayType in (NUMBERS, ANIMATION):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->flags); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":572
 *         reader.writeShort(self.displayType)
 *         reader.writeShort(self.flags)
 *         reader.writeShort(self.font, True)             # <<<<<<<<<<<<<<
 *         if self.displayType in (NUMBERS, ANIMATION):
 *             reader.writeInt(len(self.frames), True)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->font); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_4, Py_True};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 572, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_4, Py_True};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 572, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  } else
  #endif
  {
    __pyx_t_3 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 572, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__pyx_t_6) {
      __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6); __pyx_t_6 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_5, __pyx_t_4);
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_5, Py_True);
    __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 572, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":573
 *         reader.writeShort(self.flags)
 *         reader.writeShort(self.font, True)
 *         if self.displayType in (NUMBERS, ANIMATION):             # <<<<<<<<<<<<<<
 *             reader.writeInt(len(self.frames), True)
 *             for frame in self.frames:
 */
  __pyx_t_5 = __pyx_v_self->displayType;
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_NUMBERS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!__pyx_t_8) {
  } else {
    __pyx_t_7 = __pyx_t_8;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_ANIMATION); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 573, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = __pyx_t_8;
  __pyx_L4_bool_binop_done:;
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "mmfparser/data/chunkloaders/objects.pyx":574
 *         reader.writeShort(self.font, True)
 *         if self.displayType in (NUMBERS, ANIMATION):
 *             reader.writeInt(len(self.frames), True)             # <<<<<<<<<<<<<<
 *             for frame in self.frames:
 *                 reader.writeShort(frame)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 574, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_v_self->frames;
    __Pyx_INCREF(__pyx_t_3);
    if (unlikely(__pyx_t_3 == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
      __PYX_ERR(0, 574, __pyx_L1_error)
    }
    __pyx_t_9 = PyList_GET_SIZE(__pyx_t_3); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 574, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 574, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, Py_True};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 574, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, Py_True};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 574, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 574, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_3);
      __Pyx_INCREF(Py_True);
      __Pyx_GIVEREF(Py_True);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, Py_True);
      __pyx_t_3 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 574, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":575
 *         if self.displayType in (NUMBERS, ANIMATION):
 *             reader.writeInt(len(self.frames), True)
 *             for frame in self.frames:             # <<<<<<<<<<<<<<
 *                 reader.writeShort(frame)
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):
 */
    if (unlikely(__pyx_v_self->frames == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 575, __pyx_L1_error)
    }
    __pyx_t_1 = __pyx_v_self->frames; __Pyx_INCREF(__pyx_t_1); __pyx_t_9 = 0;
    for (;;) {
      if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 575, __pyx_L1_error)
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 575, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      #endif
      __Pyx_XDECREF_SET(__pyx_v_frame, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":576
 *             reader.writeInt(len(self.frames), True)
 *             for frame in self.frames:
 *                 reader.writeShort(frame)             # <<<<<<<<<<<<<<
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):
 *             self.shape.write(reader)
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 576, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_v_frame) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_v_frame);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 576, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":575
 *         if self.displayType in (NUMBERS, ANIMATION):
 *             reader.writeInt(len(self.frames), True)
 *             for frame in self.frames:             # <<<<<<<<<<<<<<
 *                 reader.writeShort(frame)
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":573
 *         reader.writeShort(self.flags)
 *         reader.writeShort(self.font, True)
 *         if self.displayType in (NUMBERS, ANIMATION):             # <<<<<<<<<<<<<<
 *             reader.writeInt(len(self.frames), True)
 *             for frame in self.frames:
 */
    goto __pyx_L3;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":577
 *             for frame in self.frames:
 *                 reader.writeShort(frame)
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):             # <<<<<<<<<<<<<<
 *             self.shape.write(reader)
 * 
 */
  __pyx_t_5 = __pyx_v_self->displayType;
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_VERTICAL_BAR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (!__pyx_t_7) {
  } else {
    __pyx_t_8 = __pyx_t_7;
    goto __pyx_L8_bool_binop_done;
  }
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HORIZONTAL_BAR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!__pyx_t_7) {
  } else {
    __pyx_t_8 = __pyx_t_7;
    goto __pyx_L8_bool_binop_done;
  }
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_TEXT_COUNTER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 577, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_8 = __pyx_t_7;
  __pyx_L8_bool_binop_done:;
  __pyx_t_7 = (__pyx_t_8 != 0);
  if (__pyx_t_7) {

    /* "mmfparser/data/chunkloaders/objects.pyx":578
 *                 reader.writeShort(frame)
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):
 *             self.shape.write(reader)             # <<<<<<<<<<<<<<
 * 
 *     def getFont(self, fonts):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->shape, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_6 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_reader));
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":577
 *             for frame in self.frames:
 *                 reader.writeShort(frame)
 *         elif self.displayType in (VERTICAL_BAR, HORIZONTAL_BAR, TEXT_COUNTER):             # <<<<<<<<<<<<<<
 *             self.shape.write(reader)
 * 
 */
  }
  __pyx_L3:;

  /* "mmfparser/data/chunkloaders/objects.pyx":566
 *             self.shape = self.new(Shape, reader)
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0) # size
 *         reader.writeInt(self.width, True)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_frame);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":580
 *             self.shape.write(reader)
 * 
 *     def getFont(self, fonts):             # <<<<<<<<<<<<<<
 *         try:
 *             return fonts.fromHandle(self.font)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5getFont(PyObject *__pyx_v_self, PyObject *__pyx_v_fonts); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5getFont(PyObject *__pyx_v_self, PyObject *__pyx_v_fonts) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getFont (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_4getFont(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_fonts));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_4getFont(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_fonts) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getFont", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":581
 * 
 *     def getFont(self, fonts):
 *         try:             # <<<<<<<<<<<<<<
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "mmfparser/data/chunkloaders/objects.pyx":582
 *     def getFont(self, fonts):
 *         try:
 *             return fonts.fromHandle(self.font)             # <<<<<<<<<<<<<<
 *         except (ValueError, AttributeError):
 *             return INVALID_FONT
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_fonts, __pyx_n_s_fromHandle); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 582, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_self->font); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 582, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 582, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      goto __pyx_L7_try_return;

      /* "mmfparser/data/chunkloaders/objects.pyx":581
 * 
 *     def getFont(self, fonts):
 *         try:             # <<<<<<<<<<<<<<
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":583
 *         try:
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):             # <<<<<<<<<<<<<<
 *             return INVALID_FONT
 * 
 */
    __pyx_t_8 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError) || __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_8) {
      __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.getFont", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6) < 0) __PYX_ERR(0, 583, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);

      /* "mmfparser/data/chunkloaders/objects.pyx":584
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):
 *             return INVALID_FONT             # <<<<<<<<<<<<<<
 * 
 *     def getImage(self, name, images):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_INVALID_FONT); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 584, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_r = __pyx_t_7;
      __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L6_except_return;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "mmfparser/data/chunkloaders/objects.pyx":581
 * 
 *     def getFont(self, fonts):
 *         try:             # <<<<<<<<<<<<<<
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":580
 *             self.shape.write(reader)
 * 
 *     def getFont(self, fonts):             # <<<<<<<<<<<<<<
 *         try:
 *             return fonts.fromHandle(self.font)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.getFont", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":586
 *             return INVALID_FONT
 * 
 *     def getImage(self, name, images):             # <<<<<<<<<<<<<<
 *         return images.fromHandle(self.frames[COUNTER_FRAMES.index(name)])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_7getImage(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_7getImage(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_images = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getImage (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,&__pyx_n_s_images,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_images)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("getImage", 1, 2, 2, 1); __PYX_ERR(0, 586, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "getImage") < 0)) __PYX_ERR(0, 586, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_name = values[0];
    __pyx_v_images = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("getImage", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 586, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.getImage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6getImage(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), __pyx_v_name, __pyx_v_images);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6getImage(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_name, PyObject *__pyx_v_images) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getImage", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":587
 * 
 *     def getImage(self, name, images):
 *         return images.fromHandle(self.frames[COUNTER_FRAMES.index(name)])             # <<<<<<<<<<<<<<
 * 
 *     def getDisplayType(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_images, __pyx_n_s_fromHandle); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(__pyx_v_self->frames == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 587, __pyx_L1_error)
  }
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_COUNTER_FRAMES); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_index); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_v_name) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_name);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_self->frames, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":586
 *             return INVALID_FONT
 * 
 *     def getImage(self, name, images):             # <<<<<<<<<<<<<<
 *         return images.fromHandle(self.frames[COUNTER_FRAMES.index(name)])
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.getImage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":589
 *         return images.fromHandle(self.frames[COUNTER_FRAMES.index(name)])
 * 
 *     def getDisplayType(self):             # <<<<<<<<<<<<<<
 *         return DISPLAY_NAMES[self.displayType]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_9getDisplayType(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_9getDisplayType(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getDisplayType (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8getDisplayType(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8getDisplayType(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getDisplayType", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":590
 * 
 *     def getDisplayType(self):
 *         return DISPLAY_NAMES[self.displayType]             # <<<<<<<<<<<<<<
 * 
 * PARAGRAPH_FLAGS = BitDict(
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_DISPLAY_NAMES); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_self->displayType, int, 1, __Pyx_PyInt_From_int, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":589
 *         return images.fromHandle(self.frames[COUNTER_FRAMES.index(name)])
 * 
 *     def getDisplayType(self):             # <<<<<<<<<<<<<<
 *         return DISPLAY_NAMES[self.displayType]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.getDisplayType", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":522
 * cdef class Counters(DataLoader):
 *     cdef public:
 *         int width             # <<<<<<<<<<<<<<
 *         int height
 *         int player
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 522, __pyx_L1_error)
  __pyx_v_self->width = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":523
 *     cdef public:
 *         int width
 *         int height             # <<<<<<<<<<<<<<
 *         int player
 *         int displayType
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 523, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 523, __pyx_L1_error)
  __pyx_v_self->height = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":524
 *         int width
 *         int height
 *         int player             # <<<<<<<<<<<<<<
 *         int displayType
 *         int flags
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->player); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 524, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.player.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 524, __pyx_L1_error)
  __pyx_v_self->player = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.player.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":525
 *         int height
 *         int player
 *         int displayType             # <<<<<<<<<<<<<<
 *         int flags
 *         bint inverse
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->displayType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.displayType.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 525, __pyx_L1_error)
  __pyx_v_self->displayType = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.displayType.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":526
 *         int player
 *         int displayType
 *         int flags             # <<<<<<<<<<<<<<
 *         bint inverse
 *         int font
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->flags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 526, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.flags.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 526, __pyx_L1_error)
  __pyx_v_self->flags = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.flags.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":527
 *         int displayType
 *         int flags
 *         bint inverse             # <<<<<<<<<<<<<<
 *         int font
 *         list frames
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->inverse); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.inverse.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 527, __pyx_L1_error)
  __pyx_v_self->inverse = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.inverse.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":528
 *         int flags
 *         bint inverse
 *         int font             # <<<<<<<<<<<<<<
 *         list frames
 *         object shape
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->font); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 528, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.font.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 528, __pyx_L1_error)
  __pyx_v_self->font = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.font.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":529
 *         bint inverse
 *         int font
 *         list frames             # <<<<<<<<<<<<<<
 *         object shape
 *         int integerDigits
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->frames);
  __pyx_r = __pyx_v_self->frames;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 529, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->frames);
  __Pyx_DECREF(__pyx_v_self->frames);
  __pyx_v_self->frames = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.frames.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->frames);
  __Pyx_DECREF(__pyx_v_self->frames);
  __pyx_v_self->frames = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":530
 *         int font
 *         list frames
 *         object shape             # <<<<<<<<<<<<<<
 *         int integerDigits
 *         bint formatFloat
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->shape);
  __pyx_r = __pyx_v_self->shape;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->shape);
  __Pyx_DECREF(__pyx_v_self->shape);
  __pyx_v_self->shape = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->shape);
  __Pyx_DECREF(__pyx_v_self->shape);
  __pyx_v_self->shape = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":531
 *         list frames
 *         object shape
 *         int integerDigits             # <<<<<<<<<<<<<<
 *         bint formatFloat
 *         int formatFloats
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->integerDigits); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.integerDigits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 531, __pyx_L1_error)
  __pyx_v_self->integerDigits = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.integerDigits.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":532
 *         object shape
 *         int integerDigits
 *         bint formatFloat             # <<<<<<<<<<<<<<
 *         int formatFloats
 *         int floatDigits
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->formatFloat); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.formatFloat.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 532, __pyx_L1_error)
  __pyx_v_self->formatFloat = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.formatFloat.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":533
 *         int integerDigits
 *         bint formatFloat
 *         int formatFloats             # <<<<<<<<<<<<<<
 *         int floatDigits
 *         bint useDecimals
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->formatFloats); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.formatFloats.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 533, __pyx_L1_error)
  __pyx_v_self->formatFloats = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.formatFloats.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":534
 *         bint formatFloat
 *         int formatFloats
 *         int floatDigits             # <<<<<<<<<<<<<<
 *         bint useDecimals
 *         int decimals
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->floatDigits); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.floatDigits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 534, __pyx_L1_error)
  __pyx_v_self->floatDigits = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.floatDigits.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":535
 *         int formatFloats
 *         int floatDigits
 *         bint useDecimals             # <<<<<<<<<<<<<<
 *         int decimals
 *         bint addNulls
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->useDecimals); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 535, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.useDecimals.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 535, __pyx_L1_error)
  __pyx_v_self->useDecimals = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.useDecimals.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":536
 *         int floatDigits
 *         bint useDecimals
 *         int decimals             # <<<<<<<<<<<<<<
 *         bint addNulls
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->decimals); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.decimals.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 536, __pyx_L1_error)
  __pyx_v_self->decimals = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.decimals.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":537
 *         bint useDecimals
 *         int decimals
 *         bint addNulls             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->addNulls); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 537, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.addNulls.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 537, __pyx_L1_error)
  __pyx_v_self->addNulls = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.addNulls.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_10__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_10__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.addNulls, self.decimals, self.displayType, self.flags, self.floatDigits, self.font, self.formatFloat, self.formatFloats, self.frames, self.height, self.integerDigits, self.inverse, self.parent, self.player, self.settings, self.shape, self.useDecimals, self.width)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->addNulls); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->decimals); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->displayType); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->flags); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->floatDigits); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_self->font); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyBool_FromLong(__pyx_v_self->formatFloat); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyInt_From_int(__pyx_v_self->formatFloats); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_9 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyInt_From_int(__pyx_v_self->integerDigits); if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_11 = __Pyx_PyBool_FromLong(__pyx_v_self->inverse); if (unlikely(!__pyx_t_11)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_self->player); if (unlikely(!__pyx_t_12)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_13 = __Pyx_PyBool_FromLong(__pyx_v_self->useDecimals); if (unlikely(!__pyx_t_13)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_15 = PyTuple_New(18); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_15, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_15, 3, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_15, 4, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_15, 5, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_15, 6, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_15, 7, __pyx_t_8);
  __Pyx_INCREF(__pyx_v_self->frames);
  __Pyx_GIVEREF(__pyx_v_self->frames);
  PyTuple_SET_ITEM(__pyx_t_15, 8, __pyx_v_self->frames);
  __Pyx_GIVEREF(__pyx_t_9);
  PyTuple_SET_ITEM(__pyx_t_15, 9, __pyx_t_9);
  __Pyx_GIVEREF(__pyx_t_10);
  PyTuple_SET_ITEM(__pyx_t_15, 10, __pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_11);
  PyTuple_SET_ITEM(__pyx_t_15, 11, __pyx_t_11);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_15, 12, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(__pyx_t_12);
  PyTuple_SET_ITEM(__pyx_t_15, 13, __pyx_t_12);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_15, 14, __pyx_v_self->__pyx_base.settings);
  __Pyx_INCREF(__pyx_v_self->shape);
  __Pyx_GIVEREF(__pyx_v_self->shape);
  PyTuple_SET_ITEM(__pyx_t_15, 15, __pyx_v_self->shape);
  __Pyx_GIVEREF(__pyx_t_13);
  PyTuple_SET_ITEM(__pyx_t_15, 16, __pyx_t_13);
  __Pyx_GIVEREF(__pyx_t_14);
  PyTuple_SET_ITEM(__pyx_t_15, 17, __pyx_t_14);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_7 = 0;
  __pyx_t_8 = 0;
  __pyx_t_9 = 0;
  __pyx_t_10 = 0;
  __pyx_t_11 = 0;
  __pyx_t_12 = 0;
  __pyx_t_13 = 0;
  __pyx_t_14 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_15);
  __pyx_t_15 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.addNulls, self.decimals, self.displayType, self.flags, self.floatDigits, self.font, self.formatFloat, self.formatFloats, self.frames, self.height, self.integerDigits, self.inverse, self.parent, self.player, self.settings, self.shape, self.useDecimals, self.width)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_15 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __pyx_v__dict = __pyx_t_15;
  __pyx_t_15 = 0;

  /* "(tree fragment)":7
 *     state = (self.addNulls, self.decimals, self.displayType, self.flags, self.floatDigits, self.font, self.formatFloat, self.formatFloats, self.frames, self.height, self.integerDigits, self.inverse, self.parent, self.player, self.settings, self.shape, self.useDecimals, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_16 = (__pyx_v__dict != Py_None);
  __pyx_t_17 = (__pyx_t_16 != 0);
  if (__pyx_t_17) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_15 = PyTuple_New(1); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_v__dict);
    __pyx_t_14 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_15); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_14));
    __pyx_t_14 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None or self.shape is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.addNulls, self.decimals, self.displayType, self.flags, self.floatDigits, self.font, self.formatFloat, self.formatFloats, self.frames, self.height, self.integerDigits, self.inverse, self.parent, self.player, self.settings, self.shape, self.useDecimals, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None or self.shape is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, None), state
 */
  /*else*/ {
    __pyx_t_16 = (__pyx_v_self->frames != ((PyObject*)Py_None));
    __pyx_t_18 = (__pyx_t_16 != 0);
    if (!__pyx_t_18) {
    } else {
      __pyx_t_17 = __pyx_t_18;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_18 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_16 = (__pyx_t_18 != 0);
    if (!__pyx_t_16) {
    } else {
      __pyx_t_17 = __pyx_t_16;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_16 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_18 = (__pyx_t_16 != 0);
    if (!__pyx_t_18) {
    } else {
      __pyx_t_17 = __pyx_t_18;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_18 = (__pyx_v_self->shape != Py_None);
    __pyx_t_16 = (__pyx_t_18 != 0);
    __pyx_t_17 = __pyx_t_16;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_17;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None or self.shape is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, None), state
 *     else:
 */
  __pyx_t_17 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_17) {

    /* "(tree fragment)":13
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None or self.shape is not None
 *     if use_setstate:
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_pyx_unpickle_Counters); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __pyx_t_15 = PyTuple_New(3); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_15, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_57734563);
    __Pyx_GIVEREF(__pyx_int_57734563);
    PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_int_57734563);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_15, 2, Py_None);
    __pyx_t_13 = PyTuple_New(3); if (unlikely(!__pyx_t_13)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_GIVEREF(__pyx_t_14);
    PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_15);
    PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_t_15);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_13, 2, __pyx_v_state);
    __pyx_t_14 = 0;
    __pyx_t_15 = 0;
    __pyx_r = __pyx_t_13;
    __pyx_t_13 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.frames is not None or self.parent is not None or self.settings is not None or self.shape is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, None), state
 *     else:
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Counters__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_pyx_unpickle_Counters); if (unlikely(!__pyx_t_13)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_15 = PyTuple_New(3); if (unlikely(!__pyx_t_15)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_15, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_57734563);
    __Pyx_GIVEREF(__pyx_int_57734563);
    PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_int_57734563);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_15, 2, __pyx_v_state);
    __pyx_t_14 = PyTuple_New(2); if (unlikely(!__pyx_t_14)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_13);
    PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_13);
    __Pyx_GIVEREF(__pyx_t_15);
    PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_15);
    __pyx_t_13 = 0;
    __pyx_t_15 = 0;
    __pyx_r = __pyx_t_14;
    __pyx_t_14 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Counters__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_12__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8Counters_12__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Counters__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Counters__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Counters, (type(self), 0x370f5a3, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Counters__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counters.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":609
 *         bytes value
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.flags = PARAGRAPH_FLAGS.copy()
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 609, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 609, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":610
 * 
 *     cpdef initialize(self):
 *         self.flags = PARAGRAPH_FLAGS.copy()             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_PARAGRAPH_FLAGS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->flags);
  __Pyx_DECREF(__pyx_v_self->flags);
  __pyx_v_self->flags = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":609
 *         bytes value
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.flags = PARAGRAPH_FLAGS.copy()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 609, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":612
 *         self.flags = PARAGRAPH_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.font = reader.readShort(True)
 *         self.flags.setFlags(reader.readShort(True))
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 612, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 612, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":613
 * 
 *     cpdef read(self, ByteReader reader):
 *         self.font = reader.readShort(True)             # <<<<<<<<<<<<<<
 *         self.flags.setFlags(reader.readShort(True))
 *         self.color = reader.readColor()
 */
  __pyx_t_6.__pyx_n = 1;
  __pyx_t_6.asUnsigned = 1;
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_6); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 613, __pyx_L1_error)
  __pyx_v_self->font = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":614
 *     cpdef read(self, ByteReader reader):
 *         self.font = reader.readShort(True)
 *         self.flags.setFlags(reader.readShort(True))             # <<<<<<<<<<<<<<
 *         self.color = reader.readColor()
 *         self.value = self.readString(reader)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->flags, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6.__pyx_n = 1;
  __pyx_t_6.asUnsigned = 1;
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_6); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 614, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":615
 *         self.font = reader.readShort(True)
 *         self.flags.setFlags(reader.readShort(True))
 *         self.color = reader.readColor()             # <<<<<<<<<<<<<<
 *         self.value = self.readString(reader)
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readColor(__pyx_v_reader, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->color);
  __Pyx_DECREF(__pyx_v_self->color);
  __pyx_v_self->color = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":616
 *         self.flags.setFlags(reader.readShort(True))
 *         self.color = reader.readColor()
 *         self.value = self.readString(reader)             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.readString(((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_v_self), __pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyBytes_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 616, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->value);
  __Pyx_DECREF(__pyx_v_self->value);
  __pyx_v_self->value = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":612
 *         self.flags = PARAGRAPH_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         self.font = reader.readShort(True)
 *         self.flags.setFlags(reader.readShort(True))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 612, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":618
 *         self.value = self.readString(reader)
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.font, True)
 *         reader.writeShort(self.flags.getFlags(), True)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 618, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":619
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeShort(self.font, True)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.flags.getFlags(), True)
 *         reader.writeColor(self.color)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->font); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, Py_True};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 619, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, Py_True};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 619, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 619, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_t_3);
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, Py_True);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 619, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":620
 *     def write(self, ByteReader reader):
 *         reader.writeShort(self.font, True)
 *         reader.writeShort(self.flags.getFlags(), True)             # <<<<<<<<<<<<<<
 *         reader.writeColor(self.color)
 *         reader.writeString(self.value)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->flags, __pyx_n_s_getFlags); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_6 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 620, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_6, Py_True};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 620, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_6, Py_True};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 620, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  } else
  #endif
  {
    __pyx_t_4 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 620, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_5, __pyx_t_6);
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_5, Py_True);
    __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 620, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":621
 *         reader.writeShort(self.font, True)
 *         reader.writeShort(self.flags.getFlags(), True)
 *         reader.writeColor(self.color)             # <<<<<<<<<<<<<<
 *         reader.writeString(self.value)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeColor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v_self->color) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->color);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":622
 *         reader.writeShort(self.flags.getFlags(), True)
 *         reader.writeColor(self.color)
 *         reader.writeString(self.value)             # <<<<<<<<<<<<<<
 * 
 *     def getFont(self, fonts):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeString); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_v_self->value) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->value);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":618
 *         self.value = self.readString(reader)
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.font, True)
 *         reader.writeShort(self.flags.getFlags(), True)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":624
 *         reader.writeString(self.value)
 * 
 *     def getFont(self, fonts):             # <<<<<<<<<<<<<<
 *         try:
 *             return fonts.fromHandle(self.font)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_7getFont(PyObject *__pyx_v_self, PyObject *__pyx_v_fonts); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_7getFont(PyObject *__pyx_v_self, PyObject *__pyx_v_fonts) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getFont (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_6getFont(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self), ((PyObject *)__pyx_v_fonts));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_6getFont(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_fonts) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getFont", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":625
 * 
 *     def getFont(self, fonts):
 *         try:             # <<<<<<<<<<<<<<
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "mmfparser/data/chunkloaders/objects.pyx":626
 *     def getFont(self, fonts):
 *         try:
 *             return fonts.fromHandle(self.font)             # <<<<<<<<<<<<<<
 *         except (ValueError, AttributeError):
 *             return INVALID_FONT
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_fonts, __pyx_n_s_fromHandle); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 626, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_self->font); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 626, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 626, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      goto __pyx_L7_try_return;

      /* "mmfparser/data/chunkloaders/objects.pyx":625
 * 
 *     def getFont(self, fonts):
 *         try:             # <<<<<<<<<<<<<<
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":627
 *         try:
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):             # <<<<<<<<<<<<<<
 *             return INVALID_FONT
 * 
 */
    __pyx_t_8 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError) || __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_8) {
      __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.getFont", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_6) < 0) __PYX_ERR(0, 627, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);

      /* "mmfparser/data/chunkloaders/objects.pyx":628
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):
 *             return INVALID_FONT             # <<<<<<<<<<<<<<
 * 
 * cdef class Text(DataLoader):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_INVALID_FONT); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 628, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_r = __pyx_t_7;
      __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L6_except_return;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "mmfparser/data/chunkloaders/objects.pyx":625
 * 
 *     def getFont(self, fonts):
 *         try:             # <<<<<<<<<<<<<<
 *             return fonts.fromHandle(self.font)
 *         except (ValueError, AttributeError):
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":624
 *         reader.writeString(self.value)
 * 
 *     def getFont(self, fonts):             # <<<<<<<<<<<<<<
 *         try:
 *             return fonts.fromHandle(self.font)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.getFont", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":604
 * cdef class Paragraph(DataLoader):
 *     cdef public:
 *         int font             # <<<<<<<<<<<<<<
 *         object flags
 *         object color
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->font); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.font.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 604, __pyx_L1_error)
  __pyx_v_self->font = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.font.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":605
 *     cdef public:
 *         int font
 *         object flags             # <<<<<<<<<<<<<<
 *         object color
 *         bytes value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->flags);
  __pyx_r = __pyx_v_self->flags;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->flags);
  __Pyx_DECREF(__pyx_v_self->flags);
  __pyx_v_self->flags = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->flags);
  __Pyx_DECREF(__pyx_v_self->flags);
  __pyx_v_self->flags = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":606
 *         int font
 *         object flags
 *         object color             # <<<<<<<<<<<<<<
 *         bytes value
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->color);
  __pyx_r = __pyx_v_self->color;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->color);
  __Pyx_DECREF(__pyx_v_self->color);
  __pyx_v_self->color = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->color);
  __Pyx_DECREF(__pyx_v_self->color);
  __pyx_v_self->color = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":607
 *         object flags
 *         object color
 *         bytes value             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->value);
  __pyx_r = __pyx_v_self->value;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyBytes_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 607, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->value);
  __Pyx_DECREF(__pyx_v_self->value);
  __pyx_v_self->value = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.value.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->value);
  __Pyx_DECREF(__pyx_v_self->value);
  __pyx_v_self->value = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_8__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.color, self.flags, self.font, self.parent, self.settings, self.value)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->font); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(6); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_self->color);
  __Pyx_GIVEREF(__pyx_v_self->color);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_self->color);
  __Pyx_INCREF(__pyx_v_self->flags);
  __Pyx_GIVEREF(__pyx_v_self->flags);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_self->flags);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_2, 3, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_v_self->__pyx_base.settings);
  __Pyx_INCREF(__pyx_v_self->value);
  __Pyx_GIVEREF(__pyx_v_self->value);
  PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_v_self->value);
  __pyx_t_1 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.color, self.flags, self.font, self.parent, self.settings, self.value)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_2 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v__dict = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "(tree fragment)":7
 *     state = (self.color, self.flags, self.font, self.parent, self.settings, self.value)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_3 = (__pyx_v__dict != Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v__dict);
    __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.color is not None or self.flags is not None or self.parent is not None or self.settings is not None or self.value is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.color, self.flags, self.font, self.parent, self.settings, self.value)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.color is not None or self.flags is not None or self.parent is not None or self.settings is not None or self.value is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, None), state
 */
  /*else*/ {
    __pyx_t_3 = (__pyx_v_self->color != Py_None);
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->flags != Py_None);
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_4 = __pyx_t_3;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_3 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_5 = (__pyx_t_3 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_4 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_3 = (__pyx_t_5 != 0);
    if (!__pyx_t_3) {
    } else {
      __pyx_t_4 = __pyx_t_3;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_3 = (__pyx_v_self->value != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_3 != 0);
    __pyx_t_4 = __pyx_t_5;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_4;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.color is not None or self.flags is not None or self.parent is not None or self.settings is not None or self.value is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, None), state
 *     else:
 */
  __pyx_t_4 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_4) {

    /* "(tree fragment)":13
 *         use_setstate = self.color is not None or self.flags is not None or self.parent is not None or self.settings is not None or self.value is not None
 *     if use_setstate:
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pyx_unpickle_Paragraph); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_106150038);
    __Pyx_GIVEREF(__pyx_int_106150038);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_int_106150038);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_2, 2, Py_None);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_2);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_1 = 0;
    __pyx_t_2 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.color is not None or self.flags is not None or self.parent is not None or self.settings is not None or self.value is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, None), state
 *     else:
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Paragraph__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_pyx_unpickle_Paragraph); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_106150038);
    __Pyx_GIVEREF(__pyx_int_106150038);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_int_106150038);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_state);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
    __pyx_t_6 = 0;
    __pyx_t_2 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Paragraph__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_10__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Paragraph__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Paragraph__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Paragraph, (type(self), 0x653b896, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Paragraph__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Paragraph.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":635
 *         int height
 *         list items
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.items = []
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_4Text_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 635, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":636
 *         list items
 *     cpdef initialize(self):
 *         self.items = []             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":635
 *         int height
 *         list items
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.items = []
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_4Text_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":638
 *         self.items = []
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         currentPosition = reader.tell()
 *         size = reader.readInt()
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_4Text_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  int __pyx_v_currentPosition;
  CYTHON_UNUSED PyObject *__pyx_v_size = NULL;
  PyObject *__pyx_v_itemOffsets = NULL;
  PyObject *__pyx_v_offset = NULL;
  CYTHON_UNUSED PyObject *__pyx_v__ = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 638, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 638, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":639
 * 
 *     cpdef read(self, ByteReader reader):
 *         currentPosition = reader.tell()             # <<<<<<<<<<<<<<
 *         size = reader.readInt()
 *         self.width = reader.readInt()
 */
  __pyx_v_currentPosition = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->tell(__pyx_v_reader, 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":640
 *     cpdef read(self, ByteReader reader):
 *         currentPosition = reader.tell()
 *         size = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_size = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":641
 *         currentPosition = reader.tell()
 *         size = reader.readInt()
 *         self.width = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.height = reader.readInt()
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->width = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":642
 *         size = reader.readInt()
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()             # <<<<<<<<<<<<<<
 * 
 *         itemOffsets = [reader.readInt()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->height = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":644
 *         self.height = reader.readInt()
 * 
 *         itemOffsets = [reader.readInt()             # <<<<<<<<<<<<<<
 *             for _ in xrange(reader.readInt())]
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "mmfparser/data/chunkloaders/objects.pyx":645
 * 
 *         itemOffsets = [reader.readInt()
 *             for _ in xrange(reader.readInt())]             # <<<<<<<<<<<<<<
 * 
 *         for offset in itemOffsets:
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_xrange, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
    __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
    __pyx_t_7 = NULL;
  } else {
    __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 645, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 645, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  for (;;) {
    if (likely(!__pyx_t_7)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 645, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 645, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_3); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 645, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 645, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_7(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 645, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v__, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":644
 *         self.height = reader.readInt()
 * 
 *         itemOffsets = [reader.readInt()             # <<<<<<<<<<<<<<
 *             for _ in xrange(reader.readInt())]
 * 
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 644, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_3))) __PYX_ERR(0, 644, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":645
 * 
 *         itemOffsets = [reader.readInt()
 *             for _ in xrange(reader.readInt())]             # <<<<<<<<<<<<<<
 * 
 *         for offset in itemOffsets:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_itemOffsets = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":647
 *             for _ in xrange(reader.readInt())]
 * 
 *         for offset in itemOffsets:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + offset)
 *             self.items.append(self.new(Paragraph, reader))
 */
  __pyx_t_1 = __pyx_v_itemOffsets; __Pyx_INCREF(__pyx_t_1); __pyx_t_6 = 0;
  for (;;) {
    if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 647, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 647, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_offset, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":648
 * 
 *         for offset in itemOffsets:
 *             reader.seek(currentPosition + offset)             # <<<<<<<<<<<<<<
 *             self.items.append(self.new(Paragraph, reader))
 * 
 */
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_currentPosition); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_v_offset); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 648, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, __pyx_t_5, 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":649
 *         for offset in itemOffsets:
 *             reader.seek(currentPosition + offset)
 *             self.items.append(self.new(Paragraph, reader))             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
    if (unlikely(__pyx_v_self->items == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 649, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 649, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Paragraph), ((PyObject *)__pyx_v_reader)};
      __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Paragraph), ((PyObject *)__pyx_v_reader)};
      __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Paragraph));
      __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Paragraph));
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Paragraph));
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_8, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 649, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_self->items, __pyx_t_3); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 649, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":647
 *             for _ in xrange(reader.readInt())]
 * 
 *         for offset in itemOffsets:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + offset)
 *             self.items.append(self.new(Paragraph, reader))
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":638
 *         self.items = []
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         currentPosition = reader.tell()
 *         size = reader.readInt()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_size);
  __Pyx_XDECREF(__pyx_v_itemOffsets);
  __Pyx_XDECREF(__pyx_v_offset);
  __Pyx_XDECREF(__pyx_v__);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 638, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_4Text_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 638, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":651
 *             self.items.append(self.new(Paragraph, reader))
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         count = len(self.items)
 *         offsets = []
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 651, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_4write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  Py_ssize_t __pyx_v_count;
  PyObject *__pyx_v_offsets = NULL;
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_paragraphData = NULL;
  PyObject *__pyx_v_item = NULL;
  PyObject *__pyx_v_offset = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":652
 * 
 *     def write(self, ByteReader reader):
 *         count = len(self.items)             # <<<<<<<<<<<<<<
 *         offsets = []
 *         paragraphData = ByteReader()
 */
  __pyx_t_1 = __pyx_v_self->items;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 652, __pyx_L1_error)
  }
  __pyx_t_2 = PyList_GET_SIZE(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_count = __pyx_t_2;

  /* "mmfparser/data/chunkloaders/objects.pyx":653
 *     def write(self, ByteReader reader):
 *         count = len(self.items)
 *         offsets = []             # <<<<<<<<<<<<<<
 *         paragraphData = ByteReader()
 *         for item in self.items:
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_offsets = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":654
 *         count = len(self.items)
 *         offsets = []
 *         paragraphData = ByteReader()             # <<<<<<<<<<<<<<
 *         for item in self.items:
 *             offsets.append(paragraphData.tell() + 16 + 4 * count)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_9mmfparser_10bytereader_ByteReader)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_paragraphData = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":655
 *         offsets = []
 *         paragraphData = ByteReader()
 *         for item in self.items:             # <<<<<<<<<<<<<<
 *             offsets.append(paragraphData.tell() + 16 + 4 * count)
 *             item.write(paragraphData)
 */
  if (unlikely(__pyx_v_self->items == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 655, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->items; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 655, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 655, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":656
 *         paragraphData = ByteReader()
 *         for item in self.items:
 *             offsets.append(paragraphData.tell() + 16 + 4 * count)             # <<<<<<<<<<<<<<
 *             item.write(paragraphData)
 * 
 */
    __pyx_t_3 = PyInt_FromSsize_t(((((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_paragraphData->__pyx_vtab)->tell(__pyx_v_paragraphData, 0) + 16) + (4 * __pyx_v_count))); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_offsets, __pyx_t_3); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":657
 *         for item in self.items:
 *             offsets.append(paragraphData.tell() + 16 + 4 * count)
 *             item.write(paragraphData)             # <<<<<<<<<<<<<<
 * 
 *         reader.writeInt(len(paragraphData) + 16 + 4 * count)
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_item, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, ((PyObject *)__pyx_v_paragraphData)) : __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)__pyx_v_paragraphData));
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":655
 *         offsets = []
 *         paragraphData = ByteReader()
 *         for item in self.items:             # <<<<<<<<<<<<<<
 *             offsets.append(paragraphData.tell() + 16 + 4 * count)
 *             item.write(paragraphData)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":659
 *             item.write(paragraphData)
 * 
 *         reader.writeInt(len(paragraphData) + 16 + 4 * count)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = PyObject_Length(((PyObject *)__pyx_v_paragraphData)); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 659, __pyx_L1_error)
  __pyx_t_5 = PyInt_FromSsize_t(((__pyx_t_2 + 16) + (4 * __pyx_v_count))); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":660
 * 
 *         reader.writeInt(len(paragraphData) + 16 + 4 * count)
 *         reader.writeInt(self.width)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.height)
 *         reader.writeInt(count)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":661
 *         reader.writeInt(len(paragraphData) + 16 + 4 * count)
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)             # <<<<<<<<<<<<<<
 *         reader.writeInt(count)
 *         for offset in offsets:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":662
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 *         reader.writeInt(count)             # <<<<<<<<<<<<<<
 *         for offset in offsets:
 *             reader.writeInt(offset)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyInt_FromSsize_t(__pyx_v_count); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":663
 *         reader.writeInt(self.height)
 *         reader.writeInt(count)
 *         for offset in offsets:             # <<<<<<<<<<<<<<
 *             reader.writeInt(offset)
 *         reader.writeReader(paragraphData)
 */
  __pyx_t_1 = __pyx_v_offsets; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 663, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 663, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_offset, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":664
 *         reader.writeInt(count)
 *         for offset in offsets:
 *             reader.writeInt(offset)             # <<<<<<<<<<<<<<
 *         reader.writeReader(paragraphData)
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 664, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_v_offset) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_offset);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 664, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":663
 *         reader.writeInt(self.height)
 *         reader.writeInt(count)
 *         for offset in offsets:             # <<<<<<<<<<<<<<
 *             reader.writeInt(offset)
 *         reader.writeReader(paragraphData)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":665
 *         for offset in offsets:
 *             reader.writeInt(offset)
 *         reader.writeReader(paragraphData)             # <<<<<<<<<<<<<<
 * 
 * RTF_FLAGS = BitDict(
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeReader); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, ((PyObject *)__pyx_v_paragraphData)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_paragraphData));
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":651
 *             self.items.append(self.new(Paragraph, reader))
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         count = len(self.items)
 *         offsets = []
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_offsets);
  __Pyx_XDECREF((PyObject *)__pyx_v_paragraphData);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XDECREF(__pyx_v_offset);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":632
 * cdef class Text(DataLoader):
 *     cdef public:
 *         int width             # <<<<<<<<<<<<<<
 *         int height
 *         list items
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5width_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5width___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5width_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 632, __pyx_L1_error)
  __pyx_v_self->width = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":633
 *     cdef public:
 *         int width
 *         int height             # <<<<<<<<<<<<<<
 *         list items
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_6height___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_6height_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 633, __pyx_L1_error)
  __pyx_v_self->height = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":634
 *         int width
 *         int height
 *         list items             # <<<<<<<<<<<<<<
 *     cpdef initialize(self):
 *         self.items = []
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5items___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5items___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->items);
  __pyx_r = __pyx_v_self->items;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 634, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.items.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->items);
  __Pyx_DECREF(__pyx_v_self->items);
  __pyx_v_self->items = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_6__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_6__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.height, self.items, self.parent, self.settings, self.width)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(5); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->items);
  __Pyx_GIVEREF(__pyx_v_self->items);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_self->items);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_3, 2, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.height, self.items, self.parent, self.settings, self.width)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_3 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v__dict = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":7
 *     state = (self.height, self.items, self.parent, self.settings, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_4 = (__pyx_v__dict != Py_None);
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v__dict);
    __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.height, self.items, self.parent, self.settings, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, None), state
 */
  /*else*/ {
    __pyx_t_4 = (__pyx_v_self->items != ((PyObject*)Py_None));
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_6 = (__pyx_t_4 != 0);
    __pyx_t_5 = __pyx_t_6;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_5;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, None), state
 *     else:
 */
  __pyx_t_5 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_5) {

    /* "(tree fragment)":13
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_pyx_unpickle_Text); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_80269552);
    __Pyx_GIVEREF(__pyx_int_80269552);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_80269552);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_3, 2, Py_None);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.items is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, None), state
 *     else:
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Text__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pyx_unpickle_Text); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_80269552);
    __Pyx_GIVEREF(__pyx_int_80269552);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_80269552);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_state);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __pyx_t_1 = 0;
    __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Text__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_8__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4Text_8__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Text__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Text__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Text, (type(self), 0x4c8d0f0, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Text__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Text.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":682
 *         bytes value
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.options = RTF_FLAGS.copy()
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 682, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 682, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":683
 * 
 *     cpdef initialize(self):
 *         self.options = RTF_FLAGS.copy()             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_RTF_FLAGS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 683, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 683, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 683, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->options);
  __Pyx_DECREF(__pyx_v_self->options);
  __pyx_v_self->options = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":682
 *         bytes value
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.options = RTF_FLAGS.copy()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 682, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":685
 *         self.options = RTF_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt()
 *         self.version = reader.readInt()
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  CYTHON_UNUSED PyObject *__pyx_v_size = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_read __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 685, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 685, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":686
 * 
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.version = reader.readInt()
 *         self.options.setFlags(reader.readInt())
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 686, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_size = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":687
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt()
 *         self.version = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.options.setFlags(reader.readInt())
 *         self.backColor = reader.readColor()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 687, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 687, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->version = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":688
 *         size = reader.readInt()
 *         self.version = reader.readInt()
 *         self.options.setFlags(reader.readInt())             # <<<<<<<<<<<<<<
 *         self.backColor = reader.readColor()
 *         self.width = reader.readInt()
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->options, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":689
 *         self.version = reader.readInt()
 *         self.options.setFlags(reader.readInt())
 *         self.backColor = reader.readColor()             # <<<<<<<<<<<<<<
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readColor(__pyx_v_reader, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->backColor);
  __Pyx_DECREF(__pyx_v_self->backColor);
  __pyx_v_self->backColor = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":690
 *         self.options.setFlags(reader.readInt())
 *         self.backColor = reader.readColor()
 *         self.width = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.height = reader.readInt()
 *         reader.skipBytes(4)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->width = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":691
 *         self.backColor = reader.readColor()
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()             # <<<<<<<<<<<<<<
 *         reader.skipBytes(4)
 *         self.value = reader.read(reader.readInt())
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 691, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 691, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->height = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":692
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 *         reader.skipBytes(4)             # <<<<<<<<<<<<<<
 *         self.value = reader.read(reader.readInt())
 * 
 */
  (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, 4, 0));

  /* "mmfparser/data/chunkloaders/objects.pyx":693
 *         self.height = reader.readInt()
 *         reader.skipBytes(4)
 *         self.value = reader.read(reader.readInt())             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6.__pyx_n = 1;
  __pyx_t_6.size = __pyx_t_5;
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->read(__pyx_v_reader, 0, &__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyBytes_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->value);
  __Pyx_DECREF(__pyx_v_self->value);
  __pyx_v_self->value = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":685
 *         self.options = RTF_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt()
 *         self.version = reader.readInt()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_size);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 685, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":695
 *         self.value = reader.read(reader.readInt())
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0)
 *         reader.writeInt(self.version)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 695, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_4write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":696
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.version)
 *         reader.writeInt(self.options)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 696, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_int_0);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 696, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":697
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0)
 *         reader.writeInt(self.version)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.options)
 *         reader.writeColor(self.backColor)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->version); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 697, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":698
 *         reader.writeInt(0)
 *         reader.writeInt(self.version)
 *         reader.writeInt(self.options)             # <<<<<<<<<<<<<<
 *         reader.writeColor(self.backColor)
 *         reader.writeInt(self.width)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_self->options) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->options);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":699
 *         reader.writeInt(self.version)
 *         reader.writeInt(self.options)
 *         reader.writeColor(self.backColor)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeColor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 699, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_self->backColor) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->backColor);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 699, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":700
 *         reader.writeInt(self.options)
 *         reader.writeColor(self.backColor)
 *         reader.writeInt(self.width)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.height)
 *         reader.writeInt(0)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":701
 *         reader.writeColor(self.backColor)
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)             # <<<<<<<<<<<<<<
 *         reader.writeInt(0)
 *         reader.writeInt(len(self.value))
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":702
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 *         reader.writeInt(0)             # <<<<<<<<<<<<<<
 *         reader.writeInt(len(self.value))
 *         reader.write(<bytes>self.value)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_int_0);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":703
 *         reader.writeInt(self.height)
 *         reader.writeInt(0)
 *         reader.writeInt(len(self.value))             # <<<<<<<<<<<<<<
 *         reader.write(<bytes>self.value)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_v_self->value;
  __Pyx_INCREF(__pyx_t_3);
  if (unlikely(__pyx_t_3 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 703, __pyx_L1_error)
  }
  __pyx_t_5 = PyBytes_GET_SIZE(__pyx_t_3); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":704
 *         reader.writeInt(0)
 *         reader.writeInt(len(self.value))
 *         reader.write(<bytes>self.value)             # <<<<<<<<<<<<<<
 * 
 * DOCK_POSITIONS = {
 */
  __pyx_t_1 = __pyx_v_self->value;
  __Pyx_INCREF(__pyx_t_1);
  (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->write(__pyx_v_reader, ((PyObject*)__pyx_t_1), 0));
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":695
 *         self.value = reader.read(reader.readInt())
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0)
 *         reader.writeInt(self.version)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":675
 * cdef class RTFObject(DataLoader):
 *     cdef public:
 *         int version             # <<<<<<<<<<<<<<
 *         object options
 *         tuple backColor
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 675, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.version.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 675, __pyx_L1_error)
  __pyx_v_self->version = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.version.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":676
 *     cdef public:
 *         int version
 *         object options             # <<<<<<<<<<<<<<
 *         tuple backColor
 *         int width
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->options);
  __pyx_r = __pyx_v_self->options;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->options);
  __Pyx_DECREF(__pyx_v_self->options);
  __pyx_v_self->options = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->options);
  __Pyx_DECREF(__pyx_v_self->options);
  __pyx_v_self->options = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":677
 *         int version
 *         object options
 *         tuple backColor             # <<<<<<<<<<<<<<
 *         int width
 *         int height
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->backColor);
  __pyx_r = __pyx_v_self->backColor;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyTuple_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 677, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->backColor);
  __Pyx_DECREF(__pyx_v_self->backColor);
  __pyx_v_self->backColor = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.backColor.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->backColor);
  __Pyx_DECREF(__pyx_v_self->backColor);
  __pyx_v_self->backColor = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":678
 *         object options
 *         tuple backColor
 *         int width             # <<<<<<<<<<<<<<
 *         int height
 *         bytes value
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 678, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 678, __pyx_L1_error)
  __pyx_v_self->width = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":679
 *         tuple backColor
 *         int width
 *         int height             # <<<<<<<<<<<<<<
 *         bytes value
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 679, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 679, __pyx_L1_error)
  __pyx_v_self->height = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":680
 *         int width
 *         int height
 *         bytes value             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->value);
  __pyx_r = __pyx_v_self->value;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyBytes_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 680, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->value);
  __Pyx_DECREF(__pyx_v_self->value);
  __pyx_v_self->value = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.value.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->value);
  __Pyx_DECREF(__pyx_v_self->value);
  __pyx_v_self->value = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.backColor, self.height, self.options, self.parent, self.settings, self.value, self.version, self.width)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->version); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(8); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_self->backColor);
  __Pyx_GIVEREF(__pyx_v_self->backColor);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_self->backColor);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->options);
  __Pyx_GIVEREF(__pyx_v_self->options);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_self->options);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_4, 3, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_v_self->__pyx_base.settings);
  __Pyx_INCREF(__pyx_v_self->value);
  __Pyx_GIVEREF(__pyx_v_self->value);
  PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_v_self->value);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 6, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 7, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.backColor, self.height, self.options, self.parent, self.settings, self.value, self.version, self.width)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_4 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v__dict = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":7
 *     state = (self.backColor, self.height, self.options, self.parent, self.settings, self.value, self.version, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_5 = (__pyx_v__dict != Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v__dict);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.backColor is not None or self.options is not None or self.parent is not None or self.settings is not None or self.value is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.backColor, self.height, self.options, self.parent, self.settings, self.value, self.version, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.backColor is not None or self.options is not None or self.parent is not None or self.settings is not None or self.value is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, None), state
 */
  /*else*/ {
    __pyx_t_5 = (__pyx_v_self->backColor != ((PyObject*)Py_None));
    __pyx_t_7 = (__pyx_t_5 != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_7 = (__pyx_v_self->options != Py_None);
    __pyx_t_5 = (__pyx_t_7 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_6 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_7 = (__pyx_t_5 != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_7 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_7 != 0);
    if (!__pyx_t_5) {
    } else {
      __pyx_t_6 = __pyx_t_5;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_5 = (__pyx_v_self->value != ((PyObject*)Py_None));
    __pyx_t_7 = (__pyx_t_5 != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_6;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.backColor is not None or self.options is not None or self.parent is not None or self.settings is not None or self.value is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, None), state
 *     else:
 */
  __pyx_t_6 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":13
 *         use_setstate = self.backColor is not None or self.options is not None or self.parent is not None or self.settings is not None or self.value is not None
 *     if use_setstate:
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_RTFObject); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_114659918);
    __Pyx_GIVEREF(__pyx_int_114659918);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_114659918);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_4, 2, Py_None);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_state);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.backColor is not None or self.options is not None or self.parent is not None or self.settings is not None or self.value is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, None), state
 *     else:
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_RTFObject__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_pyx_unpickle_RTFObject); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_114659918);
    __Pyx_GIVEREF(__pyx_int_114659918);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_114659918);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_RTFObject__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_8__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_8__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_RTFObject__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_RTFObject__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_RTFObject, (type(self), 0x6d5924e, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_RTFObject__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.RTFObject.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":752
 *         bytes name
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.options = SUBAPPLICATION_FLAGS.copy()
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 752, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 752, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":753
 * 
 *     cpdef initialize(self):
 *         self.options = SUBAPPLICATION_FLAGS.copy()             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SUBAPPLICATION_FLAGS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 753, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 753, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 753, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->options);
  __Pyx_DECREF(__pyx_v_self->options);
  __pyx_v_self->options = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":752
 *         bytes name
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.options = SUBAPPLICATION_FLAGS.copy()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 752, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":755
 *         self.options = SUBAPPLICATION_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt()
 *         self.width = reader.readInt()
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  CYTHON_UNUSED PyObject *__pyx_v_size = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 755, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 755, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":756
 * 
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_size = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":757
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readInt()
 *         self.width = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.height = reader.readInt()
 *         self.version = reader.readShort()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 757, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 757, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->width = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":758
 *         size = reader.readInt()
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.version = reader.readShort()
 *         self.startFrame = reader.readShort()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 758, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 758, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->height = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":759
 *         self.width = reader.readInt()
 *         self.height = reader.readInt()
 *         self.version = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.startFrame = reader.readShort()
 *         self.options.setFlags(reader.readInt(True))
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 759, __pyx_L1_error)
  __pyx_v_self->version = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":760
 *         self.height = reader.readInt()
 *         self.version = reader.readShort()
 *         self.startFrame = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.options.setFlags(reader.readInt(True))
 *         self.iconOffset = reader.readInt()
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 760, __pyx_L1_error)
  __pyx_v_self->startFrame = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":761
 *         self.version = reader.readShort()
 *         self.startFrame = reader.readShort()
 *         self.options.setFlags(reader.readInt(True))             # <<<<<<<<<<<<<<
 *         self.iconOffset = reader.readInt()
 *         reader.skipBytes(4) # "free"
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->options, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 761, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6.__pyx_n = 1;
  __pyx_t_6.asUnsigned = 1;
  __pyx_t_3 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 761, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 761, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":762
 *         self.startFrame = reader.readShort()
 *         self.options.setFlags(reader.readInt(True))
 *         self.iconOffset = reader.readInt()             # <<<<<<<<<<<<<<
 *         reader.skipBytes(4) # "free"
 *         self.name = self.readString(reader)
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->iconOffset = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":763
 *         self.options.setFlags(reader.readInt(True))
 *         self.iconOffset = reader.readInt()
 *         reader.skipBytes(4) # "free"             # <<<<<<<<<<<<<<
 *         self.name = self.readString(reader)
 * 
 */
  (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, 4, 0));

  /* "mmfparser/data/chunkloaders/objects.pyx":764
 *         self.iconOffset = reader.readInt()
 *         reader.skipBytes(4) # "free"
 *         self.name = self.readString(reader)             # <<<<<<<<<<<<<<
 * 
 *     def getDockedPosition(self):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.readString(((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_v_self), __pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 764, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyBytes_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 764, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->name);
  __Pyx_DECREF(__pyx_v_self->name);
  __pyx_v_self->name = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":755
 *         self.options = SUBAPPLICATION_FLAGS.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readInt()
 *         self.width = reader.readInt()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_size);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 755, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 755, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":766
 *         self.name = self.readString(reader)
 * 
 *     def getDockedPosition(self):             # <<<<<<<<<<<<<<
 *         docked1 = self.options['Docked1']
 *         docked2 = self.options['Docked2']
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5getDockedPosition(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5getDockedPosition(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("getDockedPosition (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4getDockedPosition(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4getDockedPosition(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_v_docked1 = NULL;
  PyObject *__pyx_v_docked2 = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("getDockedPosition", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":767
 * 
 *     def getDockedPosition(self):
 *         docked1 = self.options['Docked1']             # <<<<<<<<<<<<<<
 *         docked2 = self.options['Docked2']
 *         return DOCK_POSITIONS[(docked1, docked2)]
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->options, __pyx_n_s_Docked1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_docked1 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":768
 *     def getDockedPosition(self):
 *         docked1 = self.options['Docked1']
 *         docked2 = self.options['Docked2']             # <<<<<<<<<<<<<<
 *         return DOCK_POSITIONS[(docked1, docked2)]
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->options, __pyx_n_s_Docked2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 768, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_docked2 = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":769
 *         docked1 = self.options['Docked1']
 *         docked2 = self.options['Docked2']
 *         return DOCK_POSITIONS[(docked1, docked2)]             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_DOCK_POSITIONS); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_docked1);
  __Pyx_GIVEREF(__pyx_v_docked1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_docked1);
  __Pyx_INCREF(__pyx_v_docked2);
  __Pyx_GIVEREF(__pyx_v_docked2);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_docked2);
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":766
 *         self.name = self.readString(reader)
 * 
 *     def getDockedPosition(self):             # <<<<<<<<<<<<<<
 *         docked1 = self.options['Docked1']
 *         docked2 = self.options['Docked2']
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.getDockedPosition", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_docked1);
  __Pyx_XDECREF(__pyx_v_docked2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":771
 *         return DOCK_POSITIONS[(docked1, docked2)]
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0)
 *         reader.writeInt(self.width)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 771, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":772
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_int_0);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":773
 *     def write(self, ByteReader reader):
 *         reader.writeInt(0)
 *         reader.writeInt(self.width)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.height)
 *         reader.writeShort(self.version)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 773, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":774
 *         reader.writeInt(0)
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.version)
 *         reader.writeShort(self.startFrame)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":775
 *         reader.writeInt(self.width)
 *         reader.writeInt(self.height)
 *         reader.writeShort(self.version)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.startFrame)
 *         reader.writeInt(self.options.getFlags(), True)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 775, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->version); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 775, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 775, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":776
 *         reader.writeInt(self.height)
 *         reader.writeShort(self.version)
 *         reader.writeShort(self.startFrame)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.options.getFlags(), True)
 *         reader.writeInt(self.iconOffset)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->startFrame); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":777
 *         reader.writeShort(self.version)
 *         reader.writeShort(self.startFrame)
 *         reader.writeInt(self.options.getFlags(), True)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.iconOffset)
 *         reader.writeInt(0)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->options, __pyx_n_s_getFlags); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_6 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, Py_True};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 777, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, Py_True};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 777, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 777, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_4) {
      __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4); __pyx_t_4 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_6, __pyx_t_3);
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_6, Py_True);
    __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 777, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":778
 *         reader.writeShort(self.startFrame)
 *         reader.writeInt(self.options.getFlags(), True)
 *         reader.writeInt(self.iconOffset)             # <<<<<<<<<<<<<<
 *         reader.writeInt(0)
 *         reader.writeString(self.name)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->iconOffset); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":779
 *         reader.writeInt(self.options.getFlags(), True)
 *         reader.writeInt(self.iconOffset)
 *         reader.writeInt(0)             # <<<<<<<<<<<<<<
 *         reader.writeString(self.name)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_int_0);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":780
 *         reader.writeInt(self.iconOffset)
 *         reader.writeInt(0)
 *         reader.writeString(self.name)             # <<<<<<<<<<<<<<
 * 
 * cdef class Counter(DataLoader):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeString); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_v_self->name) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_self->name);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 780, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":771
 *         return DOCK_POSITIONS[(docked1, docked2)]
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeInt(0)
 *         reader.writeInt(self.width)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":744
 * cdef class SubApplication(DataLoader):
 *     cdef public:
 *         int width             # <<<<<<<<<<<<<<
 *         int height
 *         int version
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.width.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 744, __pyx_L1_error)
  __pyx_v_self->width = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.width.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":745
 *     cdef public:
 *         int width
 *         int height             # <<<<<<<<<<<<<<
 *         int version
 *         int startFrame
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 745, __pyx_L1_error)
  __pyx_v_self->height = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.height.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":746
 *         int width
 *         int height
 *         int version             # <<<<<<<<<<<<<<
 *         int startFrame
 *         object options
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.version.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 746, __pyx_L1_error)
  __pyx_v_self->version = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.version.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":747
 *         int height
 *         int version
 *         int startFrame             # <<<<<<<<<<<<<<
 *         object options
 *         int iconOffset
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->startFrame); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.startFrame.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 747, __pyx_L1_error)
  __pyx_v_self->startFrame = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.startFrame.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":748
 *         int version
 *         int startFrame
 *         object options             # <<<<<<<<<<<<<<
 *         int iconOffset
 *         bytes name
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->options);
  __pyx_r = __pyx_v_self->options;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->options);
  __Pyx_DECREF(__pyx_v_self->options);
  __pyx_v_self->options = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->options);
  __Pyx_DECREF(__pyx_v_self->options);
  __pyx_v_self->options = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":749
 *         int startFrame
 *         object options
 *         int iconOffset             # <<<<<<<<<<<<<<
 *         bytes name
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->iconOffset); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.iconOffset.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 749, __pyx_L1_error)
  __pyx_v_self->iconOffset = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.iconOffset.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":750
 *         object options
 *         int iconOffset
 *         bytes name             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->name);
  __pyx_r = __pyx_v_self->name;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyBytes_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 750, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->name);
  __Pyx_DECREF(__pyx_v_self->name);
  __pyx_v_self->name = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.name.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->name);
  __Pyx_DECREF(__pyx_v_self->name);
  __pyx_v_self->name = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_8__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.height, self.iconOffset, self.name, self.options, self.parent, self.settings, self.startFrame, self.version, self.width)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->height); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->iconOffset); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->startFrame); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->version); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->width); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(9); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_2);
  __Pyx_INCREF(__pyx_v_self->name);
  __Pyx_GIVEREF(__pyx_v_self->name);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_self->name);
  __Pyx_INCREF(__pyx_v_self->options);
  __Pyx_GIVEREF(__pyx_v_self->options);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_v_self->options);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_6, 4, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_6, 5, __pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 6, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 7, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 8, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.height, self.iconOffset, self.name, self.options, self.parent, self.settings, self.startFrame, self.version, self.width)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_6 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_v__dict = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "(tree fragment)":7
 *     state = (self.height, self.iconOffset, self.name, self.options, self.parent, self.settings, self.startFrame, self.version, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_7 = (__pyx_v__dict != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v__dict);
    __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.name is not None or self.options is not None or self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.height, self.iconOffset, self.name, self.options, self.parent, self.settings, self.startFrame, self.version, self.width)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.name is not None or self.options is not None or self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, None), state
 */
  /*else*/ {
    __pyx_t_7 = (__pyx_v_self->name != ((PyObject*)Py_None));
    __pyx_t_9 = (__pyx_t_7 != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_9 = (__pyx_v_self->options != Py_None);
    __pyx_t_7 = (__pyx_t_9 != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_8 = __pyx_t_7;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_7 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_9 = (__pyx_t_7 != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_9 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_7 = (__pyx_t_9 != 0);
    __pyx_t_8 = __pyx_t_7;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_8;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.name is not None or self.options is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, None), state
 *     else:
 */
  __pyx_t_8 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":13
 *         use_setstate = self.name is not None or self.options is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_SubApplication); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_2615892);
    __Pyx_GIVEREF(__pyx_int_2615892);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_2615892);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_6, 2, Py_None);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.name is not None or self.options is not None or self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, None), state
 *     else:
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_SubApplication__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_SubApplication); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_2615892);
    __Pyx_GIVEREF(__pyx_int_2615892);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_2615892);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
    __pyx_t_4 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_SubApplication__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_SubApplication__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_SubApplication__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_SubApplication, (type(self), 0x027ea54, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_SubApplication__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.SubApplication.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":788
 *         int maximum
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readShort()
 *         self.initial = reader.readInt()
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_7Counter_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  CYTHON_UNUSED int __pyx_v_size;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 788, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_1read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 788, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":789
 * 
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readShort()             # <<<<<<<<<<<<<<
 *         self.initial = reader.readInt()
 *         self.minimum = reader.readInt()
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 789, __pyx_L1_error)
  __pyx_v_size = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":790
 *     cpdef read(self, ByteReader reader):
 *         size = reader.readShort()
 *         self.initial = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.minimum = reader.readInt()
 *         self.maximum = reader.readInt()
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 790, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->initial = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":791
 *         size = reader.readShort()
 *         self.initial = reader.readInt()
 *         self.minimum = reader.readInt()             # <<<<<<<<<<<<<<
 *         self.maximum = reader.readInt()
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 791, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 791, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->minimum = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":792
 *         self.initial = reader.readInt()
 *         self.minimum = reader.readInt()
 *         self.maximum = reader.readInt()             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 792, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->maximum = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":788
 *         int maximum
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         size = reader.readShort()
 *         self.initial = reader.readInt()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_1read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 788, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_7Counter_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":794
 *         self.maximum = reader.readInt()
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(0)
 *         reader.writeInt(self.initial)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_3write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 794, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_2write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_2write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":795
 * 
 *     def write(self, ByteReader reader):
 *         reader.writeShort(0)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.initial)
 *         reader.writeInt(self.minimum)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_int_0);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":796
 *     def write(self, ByteReader reader):
 *         reader.writeShort(0)
 *         reader.writeInt(self.initial)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.minimum)
 *         reader.writeInt(self.maximum)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->initial); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":797
 *         reader.writeShort(0)
 *         reader.writeInt(self.initial)
 *         reader.writeInt(self.minimum)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.maximum)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->minimum); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 797, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":798
 *         reader.writeInt(self.initial)
 *         reader.writeInt(self.minimum)
 *         reader.writeInt(self.maximum)             # <<<<<<<<<<<<<<
 * 
 * # free(Villy)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->maximum); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":794
 *         self.maximum = reader.readInt()
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         reader.writeShort(0)
 *         reader.writeInt(self.initial)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":784
 * cdef class Counter(DataLoader):
 *     cdef public:
 *         int initial             # <<<<<<<<<<<<<<
 *         int minimum
 *         int maximum
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->initial); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.initial.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 784, __pyx_L1_error)
  __pyx_v_self->initial = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.initial.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":785
 *     cdef public:
 *         int initial
 *         int minimum             # <<<<<<<<<<<<<<
 *         int maximum
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->minimum); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.minimum.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 785, __pyx_L1_error)
  __pyx_v_self->minimum = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.minimum.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":786
 *         int initial
 *         int minimum
 *         int maximum             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->maximum); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.maximum.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 786, __pyx_L1_error)
  __pyx_v_self->maximum = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.maximum.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_4__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_4__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.initial, self.maximum, self.minimum, self.parent, self.settings)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->initial); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->maximum); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->minimum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(5); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_4, 3, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_v_self->__pyx_base.settings);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.initial, self.maximum, self.minimum, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_4 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v__dict = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":7
 *     state = (self.initial, self.maximum, self.minimum, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_5 = (__pyx_v__dict != Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v__dict);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.initial, self.maximum, self.minimum, self.parent, self.settings)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, None), state
 */
  /*else*/ {
    __pyx_t_5 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_7 = (__pyx_t_5 != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_7 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_5 = (__pyx_t_7 != 0);
    __pyx_t_6 = __pyx_t_5;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_6;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, None), state
 *     else:
 */
  __pyx_t_6 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_6) {

    /* "(tree fragment)":13
 *         use_setstate = self.parent is not None or self.settings is not None
 *     if use_setstate:
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_Counter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_17150283);
    __Pyx_GIVEREF(__pyx_int_17150283);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_17150283);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_4, 2, Py_None);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_state);
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.parent is not None or self.settings is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, None), state
 *     else:
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Counter__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_pyx_unpickle_Counter); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_17150283);
    __Pyx_GIVEREF(__pyx_int_17150283);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_17150283);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Counter__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_6__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_7Counter_6__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Counter__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Counter__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Counter, (type(self), 0x105b14b, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Counter__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.Counter.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":876
 *         object fadeOut
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.qualifiers = []
 *         # OCFLAGS2
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_initialize); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 876, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_1initialize)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 876, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":877
 * 
 *     cpdef initialize(self):
 *         self.qualifiers = []             # <<<<<<<<<<<<<<
 *         # OCFLAGS2
 *         self.newFlags = NEW_OBJECT_FLAGS.copy()
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->qualifiers);
  __Pyx_DECREF(__pyx_v_self->qualifiers);
  __pyx_v_self->qualifiers = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":879
 *         self.qualifiers = []
 *         # OCFLAGS2
 *         self.newFlags = NEW_OBJECT_FLAGS.copy()             # <<<<<<<<<<<<<<
 *         # OEFLAG
 *         self.flags = OBJECT_FLAGS.copy()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_NEW_OBJECT_FLAGS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->newFlags);
  __Pyx_DECREF(__pyx_v_self->newFlags);
  __pyx_v_self->newFlags = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":881
 *         self.newFlags = NEW_OBJECT_FLAGS.copy()
 *         # OEFLAG
 *         self.flags = OBJECT_FLAGS.copy()             # <<<<<<<<<<<<<<
 *         # OEPREF
 *         self.preferences = OBJECT_PREFERENCES.copy()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_OBJECT_FLAGS); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 881, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_copy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 881, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 881, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->flags);
  __Pyx_DECREF(__pyx_v_self->flags);
  __pyx_v_self->flags = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":883
 *         self.flags = OBJECT_FLAGS.copy()
 *         # OEPREF
 *         self.preferences = OBJECT_PREFERENCES.copy()             # <<<<<<<<<<<<<<
 * 
 *     cpdef read(self, ByteReader reader):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_OBJECT_PREFERENCES); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->preferences);
  __Pyx_DECREF(__pyx_v_self->preferences);
  __pyx_v_self->preferences = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":876
 *         object fadeOut
 * 
 *     cpdef initialize(self):             # <<<<<<<<<<<<<<
 *         self.qualifiers = []
 *         # OCFLAGS2
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_1initialize(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_initialize(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_initialize(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("initialize", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_initialize(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":885
 *         self.preferences = OBJECT_PREFERENCES.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         currentPosition = reader.tell()
 * 
 */

static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader, int __pyx_skip_dispatch) {
  int __pyx_v_currentPosition;
  CYTHON_UNUSED int __pyx_v_size;
  short __pyx_v_movementsOffset;
  short __pyx_v_animationsOffset;
  short __pyx_v_counterOffset;
  short __pyx_v_systemObjectOffset;
  int __pyx_v_fadeInOffset;
  int __pyx_v_fadeOutOffset;
  short __pyx_v_valuesOffset;
  short __pyx_v_stringsOffset;
  short __pyx_v_extensionOffset;
  short __pyx_v_qualifier;
  unsigned int __pyx_v_end;
  int __pyx_v_newobj;
  int __pyx_v_newobj2;
  CYTHON_UNUSED long __pyx_v__;
  PyObject *__pyx_v_dataSize = NULL;
  PyObject *__pyx_v_objectType = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readInt __pyx_t_9;
  long __pyx_t_10;
  int __pyx_t_11;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_readShort __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  struct __pyx_opt_args_9mmfparser_10bytereader_10ByteReader_read __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_read); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 885, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3read)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_reader)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_reader));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 885, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":886
 * 
 *     cpdef read(self, ByteReader reader):
 *         currentPosition = reader.tell()             # <<<<<<<<<<<<<<
 * 
 *         cdef int size = reader.readInt()
 */
  __pyx_v_currentPosition = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->tell(__pyx_v_reader, 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":888
 *         currentPosition = reader.tell()
 * 
 *         cdef int size = reader.readInt()             # <<<<<<<<<<<<<<
 * 
 *         cdef short movementsOffset
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 888, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_size = __pyx_t_5;

  /* "mmfparser/data/chunkloaders/objects.pyx":902
 *         cdef unsigned int end
 * 
 *         cdef bint newobj = (self.settings['build'] >= 284 and             # <<<<<<<<<<<<<<
 *                             not self.settings.get('compat', False))
 *         cdef bint newobj2 = True
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 902, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->__pyx_base.settings, __pyx_n_s_build); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_284, Py_GE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L3_bool_binop_done;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":903
 * 
 *         cdef bint newobj = (self.settings['build'] >= 284 and
 *                             not self.settings.get('compat', False))             # <<<<<<<<<<<<<<
 *         cdef bint newobj2 = True
 * 
 */
  if (unlikely(__pyx_v_self->__pyx_base.settings == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
    __PYX_ERR(0, 903, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyDict_GetItemDefault(__pyx_v_self->__pyx_base.settings, __pyx_n_s_compat, Py_False); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 903, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 903, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_8 = ((!__pyx_t_7) != 0);
  __pyx_t_6 = __pyx_t_8;
  __pyx_L3_bool_binop_done:;
  __pyx_v_newobj = __pyx_t_6;

  /* "mmfparser/data/chunkloaders/objects.pyx":904
 *         cdef bint newobj = (self.settings['build'] >= 284 and
 *                             not self.settings.get('compat', False))
 *         cdef bint newobj2 = True             # <<<<<<<<<<<<<<
 * 
 *         if newobj and newobj2:
 */
  __pyx_v_newobj2 = 1;

  /* "mmfparser/data/chunkloaders/objects.pyx":906
 *         cdef bint newobj2 = True
 * 
 *         if newobj and newobj2:             # <<<<<<<<<<<<<<
 *             animationsOffset = reader.readShort()
 *             movementsOffset = reader.readShort()
 */
  __pyx_t_8 = (__pyx_v_newobj != 0);
  if (__pyx_t_8) {
  } else {
    __pyx_t_6 = __pyx_t_8;
    goto __pyx_L6_bool_binop_done;
  }
  __pyx_t_8 = (__pyx_v_newobj2 != 0);
  __pyx_t_6 = __pyx_t_8;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":907
 * 
 *         if newobj and newobj2:
 *             animationsOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             movementsOffset = reader.readShort()
 *             self.version = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 907, __pyx_L1_error)
    __pyx_v_animationsOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":908
 *         if newobj and newobj2:
 *             animationsOffset = reader.readShort()
 *             movementsOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             self.version = reader.readShort()
 *             reader.skipBytes(2) # "free"
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 908, __pyx_L1_error)
    __pyx_v_movementsOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":909
 *             animationsOffset = reader.readShort()
 *             movementsOffset = reader.readShort()
 *             self.version = reader.readShort()             # <<<<<<<<<<<<<<
 *             reader.skipBytes(2) # "free"
 *             extensionOffset = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 909, __pyx_L1_error)
    __pyx_v_self->version = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":910
 *             movementsOffset = reader.readShort()
 *             self.version = reader.readShort()
 *             reader.skipBytes(2) # "free"             # <<<<<<<<<<<<<<
 *             extensionOffset = reader.readShort()
 *             counterOffset = reader.readShort()
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, 2, 0));

    /* "mmfparser/data/chunkloaders/objects.pyx":911
 *             self.version = reader.readShort()
 *             reader.skipBytes(2) # "free"
 *             extensionOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             counterOffset = reader.readShort()
 *             self.flags.setFlags(reader.readInt(True))
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 911, __pyx_L1_error)
    __pyx_v_extensionOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":912
 *             reader.skipBytes(2) # "free"
 *             extensionOffset = reader.readShort()
 *             counterOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             self.flags.setFlags(reader.readInt(True))
 * 
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 912, __pyx_L1_error)
    __pyx_v_counterOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":913
 *             extensionOffset = reader.readShort()
 *             counterOffset = reader.readShort()
 *             self.flags.setFlags(reader.readInt(True))             # <<<<<<<<<<<<<<
 * 
 *             end = reader.tell() + 8 * 2
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->flags, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 913, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9.__pyx_n = 1;
    __pyx_t_9.asUnsigned = 1;
    __pyx_t_3 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 913, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 913, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":915
 *             self.flags.setFlags(reader.readInt(True))
 * 
 *             end = reader.tell() + 8 * 2             # <<<<<<<<<<<<<<
 * 
 *             for _ in xrange(8):
 */
    __pyx_v_end = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->tell(__pyx_v_reader, 0) + 16);

    /* "mmfparser/data/chunkloaders/objects.pyx":917
 *             end = reader.tell() + 8 * 2
 * 
 *             for _ in xrange(8):             # <<<<<<<<<<<<<<
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:
 */
    for (__pyx_t_10 = 0; __pyx_t_10 < 8; __pyx_t_10+=1) {
      __pyx_v__ = __pyx_t_10;

      /* "mmfparser/data/chunkloaders/objects.pyx":918
 * 
 *             for _ in xrange(8):
 *                 qualifier = reader.readShort()             # <<<<<<<<<<<<<<
 *                 if qualifier == -1:
 *                     break
 */
      __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 918, __pyx_L1_error)
      __pyx_v_qualifier = __pyx_t_5;

      /* "mmfparser/data/chunkloaders/objects.pyx":919
 *             for _ in xrange(8):
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:             # <<<<<<<<<<<<<<
 *                     break
 *                 self.qualifiers.append(qualifier)
 */
      __pyx_t_6 = ((__pyx_v_qualifier == -1L) != 0);
      if (__pyx_t_6) {

        /* "mmfparser/data/chunkloaders/objects.pyx":920
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:
 *                     break             # <<<<<<<<<<<<<<
 *                 self.qualifiers.append(qualifier)
 * 
 */
        goto __pyx_L9_break;

        /* "mmfparser/data/chunkloaders/objects.pyx":919
 *             for _ in xrange(8):
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:             # <<<<<<<<<<<<<<
 *                     break
 *                 self.qualifiers.append(qualifier)
 */
      }

      /* "mmfparser/data/chunkloaders/objects.pyx":921
 *                 if qualifier == -1:
 *                     break
 *                 self.qualifiers.append(qualifier)             # <<<<<<<<<<<<<<
 * 
 *             reader.seek(end)
 */
      if (unlikely(__pyx_v_self->qualifiers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
        __PYX_ERR(0, 921, __pyx_L1_error)
      }
      __pyx_t_2 = __Pyx_PyInt_From_short(__pyx_v_qualifier); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 921, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_self->qualifiers, __pyx_t_2); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 921, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_L9_break:;

    /* "mmfparser/data/chunkloaders/objects.pyx":923
 *                 self.qualifiers.append(qualifier)
 * 
 *             reader.seek(end)             # <<<<<<<<<<<<<<
 * 
 *             systemObjectOffset = reader.readShort()
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, __pyx_v_end, 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":925
 *             reader.seek(end)
 * 
 *             systemObjectOffset = reader.readShort()             # <<<<<<<<<<<<<<
 * 
 *             valuesOffset = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 925, __pyx_L1_error)
    __pyx_v_systemObjectOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":927
 *             systemObjectOffset = reader.readShort()
 * 
 *             valuesOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             stringsOffset = reader.readShort()
 *             self.newFlags.setFlags(reader.readShort(True))
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 927, __pyx_L1_error)
    __pyx_v_valuesOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":928
 * 
 *             valuesOffset = reader.readShort()
 *             stringsOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             self.newFlags.setFlags(reader.readShort(True))
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 928, __pyx_L1_error)
    __pyx_v_stringsOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":929
 *             valuesOffset = reader.readShort()
 *             stringsOffset = reader.readShort()
 *             self.newFlags.setFlags(reader.readShort(True))             # <<<<<<<<<<<<<<
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 *             self.identifier = reader.readInt()
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->newFlags, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12.__pyx_n = 1;
    __pyx_t_12.asUnsigned = 1;
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_12); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 929, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 929, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":930
 *             stringsOffset = reader.readShort()
 *             self.newFlags.setFlags(reader.readShort(True))
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data             # <<<<<<<<<<<<<<
 *             self.identifier = reader.readInt()
 *             self.backColour = reader.readColor()
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->preferences, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12.__pyx_n = 1;
    __pyx_t_12.asUnsigned = 1;
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_12); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 930, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 930, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":931
 *             self.newFlags.setFlags(reader.readShort(True))
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 *             self.identifier = reader.readInt()             # <<<<<<<<<<<<<<
 *             self.backColour = reader.readColor()
 *             fadeInOffset = reader.readInt()
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 931, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 931, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->identifier = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":932
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 *             self.identifier = reader.readInt()
 *             self.backColour = reader.readColor()             # <<<<<<<<<<<<<<
 *             fadeInOffset = reader.readInt()
 *             fadeOutOffset = reader.readInt()
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readColor(__pyx_v_reader, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 932, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->backColour);
    __Pyx_DECREF(__pyx_v_self->backColour);
    __pyx_v_self->backColour = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":933
 *             self.identifier = reader.readInt()
 *             self.backColour = reader.readColor()
 *             fadeInOffset = reader.readInt()             # <<<<<<<<<<<<<<
 *             fadeOutOffset = reader.readInt()
 *         elif newobj:
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 933, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 933, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_fadeInOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":934
 *             self.backColour = reader.readColor()
 *             fadeInOffset = reader.readInt()
 *             fadeOutOffset = reader.readInt()             # <<<<<<<<<<<<<<
 *         elif newobj:
 *             counterOffset = reader.readShort()
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 934, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 934, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_fadeOutOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":906
 *         cdef bint newobj2 = True
 * 
 *         if newobj and newobj2:             # <<<<<<<<<<<<<<
 *             animationsOffset = reader.readShort()
 *             movementsOffset = reader.readShort()
 */
    goto __pyx_L5;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":935
 *             fadeInOffset = reader.readInt()
 *             fadeOutOffset = reader.readInt()
 *         elif newobj:             # <<<<<<<<<<<<<<
 *             counterOffset = reader.readShort()
 *             self.version = reader.readShort()
 */
  __pyx_t_6 = (__pyx_v_newobj != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":936
 *             fadeOutOffset = reader.readInt()
 *         elif newobj:
 *             counterOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             self.version = reader.readShort()
 *             reader.skipBytes(2) # "free"
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 936, __pyx_L1_error)
    __pyx_v_counterOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":937
 *         elif newobj:
 *             counterOffset = reader.readShort()
 *             self.version = reader.readShort()             # <<<<<<<<<<<<<<
 *             reader.skipBytes(2) # "free"
 *             movementsOffset = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 937, __pyx_L1_error)
    __pyx_v_self->version = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":938
 *             counterOffset = reader.readShort()
 *             self.version = reader.readShort()
 *             reader.skipBytes(2) # "free"             # <<<<<<<<<<<<<<
 *             movementsOffset = reader.readShort()
 *             extensionOffset = reader.readShort()
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, 2, 0));

    /* "mmfparser/data/chunkloaders/objects.pyx":939
 *             self.version = reader.readShort()
 *             reader.skipBytes(2) # "free"
 *             movementsOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             extensionOffset = reader.readShort()
 *             animationsOffset = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 939, __pyx_L1_error)
    __pyx_v_movementsOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":940
 *             reader.skipBytes(2) # "free"
 *             movementsOffset = reader.readShort()
 *             extensionOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             animationsOffset = reader.readShort()
 *             self.flags.setFlags(reader.readInt(True))
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 940, __pyx_L1_error)
    __pyx_v_extensionOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":941
 *             movementsOffset = reader.readShort()
 *             extensionOffset = reader.readShort()
 *             animationsOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             self.flags.setFlags(reader.readInt(True))
 * 
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 941, __pyx_L1_error)
    __pyx_v_animationsOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":942
 *             extensionOffset = reader.readShort()
 *             animationsOffset = reader.readShort()
 *             self.flags.setFlags(reader.readInt(True))             # <<<<<<<<<<<<<<
 * 
 *             end = reader.tell() + 8 * 2
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->flags, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 942, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9.__pyx_n = 1;
    __pyx_t_9.asUnsigned = 1;
    __pyx_t_3 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 942, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 942, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":944
 *             self.flags.setFlags(reader.readInt(True))
 * 
 *             end = reader.tell() + 8 * 2             # <<<<<<<<<<<<<<
 * 
 *             for _ in xrange(8):
 */
    __pyx_v_end = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->tell(__pyx_v_reader, 0) + 16);

    /* "mmfparser/data/chunkloaders/objects.pyx":946
 *             end = reader.tell() + 8 * 2
 * 
 *             for _ in xrange(8):             # <<<<<<<<<<<<<<
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:
 */
    for (__pyx_t_10 = 0; __pyx_t_10 < 8; __pyx_t_10+=1) {
      __pyx_v__ = __pyx_t_10;

      /* "mmfparser/data/chunkloaders/objects.pyx":947
 * 
 *             for _ in xrange(8):
 *                 qualifier = reader.readShort()             # <<<<<<<<<<<<<<
 *                 if qualifier == -1:
 *                     break
 */
      __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 947, __pyx_L1_error)
      __pyx_v_qualifier = __pyx_t_5;

      /* "mmfparser/data/chunkloaders/objects.pyx":948
 *             for _ in xrange(8):
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:             # <<<<<<<<<<<<<<
 *                     break
 *                 self.qualifiers.append(qualifier)
 */
      __pyx_t_6 = ((__pyx_v_qualifier == -1L) != 0);
      if (__pyx_t_6) {

        /* "mmfparser/data/chunkloaders/objects.pyx":949
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:
 *                     break             # <<<<<<<<<<<<<<
 *                 self.qualifiers.append(qualifier)
 * 
 */
        goto __pyx_L12_break;

        /* "mmfparser/data/chunkloaders/objects.pyx":948
 *             for _ in xrange(8):
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:             # <<<<<<<<<<<<<<
 *                     break
 *                 self.qualifiers.append(qualifier)
 */
      }

      /* "mmfparser/data/chunkloaders/objects.pyx":950
 *                 if qualifier == -1:
 *                     break
 *                 self.qualifiers.append(qualifier)             # <<<<<<<<<<<<<<
 * 
 *             reader.seek(end)
 */
      if (unlikely(__pyx_v_self->qualifiers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
        __PYX_ERR(0, 950, __pyx_L1_error)
      }
      __pyx_t_2 = __Pyx_PyInt_From_short(__pyx_v_qualifier); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 950, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_self->qualifiers, __pyx_t_2); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 950, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_L12_break:;

    /* "mmfparser/data/chunkloaders/objects.pyx":952
 *                 self.qualifiers.append(qualifier)
 * 
 *             reader.seek(end)             # <<<<<<<<<<<<<<
 * 
 *             systemObjectOffset = reader.readShort()
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, __pyx_v_end, 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":954
 *             reader.seek(end)
 * 
 *             systemObjectOffset = reader.readShort()             # <<<<<<<<<<<<<<
 * 
 *             valuesOffset = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 954, __pyx_L1_error)
    __pyx_v_systemObjectOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":956
 *             systemObjectOffset = reader.readShort()
 * 
 *             valuesOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             stringsOffset = reader.readShort()
 *             self.newFlags.setFlags(reader.readShort(True))
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 956, __pyx_L1_error)
    __pyx_v_valuesOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":957
 * 
 *             valuesOffset = reader.readShort()
 *             stringsOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             self.newFlags.setFlags(reader.readShort(True))
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 957, __pyx_L1_error)
    __pyx_v_stringsOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":958
 *             valuesOffset = reader.readShort()
 *             stringsOffset = reader.readShort()
 *             self.newFlags.setFlags(reader.readShort(True))             # <<<<<<<<<<<<<<
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 *             self.identifier = reader.readInt()
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->newFlags, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12.__pyx_n = 1;
    __pyx_t_12.asUnsigned = 1;
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_12); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 958, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":959
 *             stringsOffset = reader.readShort()
 *             self.newFlags.setFlags(reader.readShort(True))
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data             # <<<<<<<<<<<<<<
 *             self.identifier = reader.readInt()
 *             self.backColour = reader.readColor()
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->preferences, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 959, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12.__pyx_n = 1;
    __pyx_t_12.asUnsigned = 1;
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_12); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 959, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 959, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 959, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":960
 *             self.newFlags.setFlags(reader.readShort(True))
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 *             self.identifier = reader.readInt()             # <<<<<<<<<<<<<<
 *             self.backColour = reader.readColor()
 *             fadeInOffset = reader.readInt()
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 960, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->identifier = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":961
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 *             self.identifier = reader.readInt()
 *             self.backColour = reader.readColor()             # <<<<<<<<<<<<<<
 *             fadeInOffset = reader.readInt()
 *             fadeOutOffset = reader.readInt()
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readColor(__pyx_v_reader, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 961, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->backColour);
    __Pyx_DECREF(__pyx_v_self->backColour);
    __pyx_v_self->backColour = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":962
 *             self.identifier = reader.readInt()
 *             self.backColour = reader.readColor()
 *             fadeInOffset = reader.readInt()             # <<<<<<<<<<<<<<
 *             fadeOutOffset = reader.readInt()
 *         else:
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 962, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_fadeInOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":963
 *             self.backColour = reader.readColor()
 *             fadeInOffset = reader.readInt()
 *             fadeOutOffset = reader.readInt()             # <<<<<<<<<<<<<<
 *         else:
 *             # start change
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 963, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 963, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_fadeOutOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":935
 *             fadeInOffset = reader.readInt()
 *             fadeOutOffset = reader.readInt()
 *         elif newobj:             # <<<<<<<<<<<<<<
 *             counterOffset = reader.readShort()
 *             self.version = reader.readShort()
 */
    goto __pyx_L5;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":966
 *         else:
 *             # start change
 *             movementsOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             animationsOffset = reader.readShort()
 *             self.version = reader.readShort()
 */
  /*else*/ {
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 966, __pyx_L1_error)
    __pyx_v_movementsOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":967
 *             # start change
 *             movementsOffset = reader.readShort()
 *             animationsOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             self.version = reader.readShort()
 *             counterOffset = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 967, __pyx_L1_error)
    __pyx_v_animationsOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":968
 *             movementsOffset = reader.readShort()
 *             animationsOffset = reader.readShort()
 *             self.version = reader.readShort()             # <<<<<<<<<<<<<<
 *             counterOffset = reader.readShort()
 *             systemObjectOffset = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 968, __pyx_L1_error)
    __pyx_v_self->version = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":969
 *             animationsOffset = reader.readShort()
 *             self.version = reader.readShort()
 *             counterOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             systemObjectOffset = reader.readShort()
 *             reader.skipBytes(2) # "free"
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 969, __pyx_L1_error)
    __pyx_v_counterOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":970
 *             self.version = reader.readShort()
 *             counterOffset = reader.readShort()
 *             systemObjectOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             reader.skipBytes(2) # "free"
 *             # stop change
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 970, __pyx_L1_error)
    __pyx_v_systemObjectOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":971
 *             counterOffset = reader.readShort()
 *             systemObjectOffset = reader.readShort()
 *             reader.skipBytes(2) # "free"             # <<<<<<<<<<<<<<
 *             # stop change
 * 
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, 2, 0));

    /* "mmfparser/data/chunkloaders/objects.pyx":974
 *             # stop change
 * 
 *             self.flags.setFlags(reader.readInt(True))             # <<<<<<<<<<<<<<
 * 
 *             end = reader.tell() + 8 * 2
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->flags, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 974, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9.__pyx_n = 1;
    __pyx_t_9.asUnsigned = 1;
    __pyx_t_3 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, &__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 974, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":976
 *             self.flags.setFlags(reader.readInt(True))
 * 
 *             end = reader.tell() + 8 * 2             # <<<<<<<<<<<<<<
 * 
 *             for _ in xrange(8):
 */
    __pyx_v_end = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->tell(__pyx_v_reader, 0) + 16);

    /* "mmfparser/data/chunkloaders/objects.pyx":978
 *             end = reader.tell() + 8 * 2
 * 
 *             for _ in xrange(8):             # <<<<<<<<<<<<<<
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:
 */
    for (__pyx_t_10 = 0; __pyx_t_10 < 8; __pyx_t_10+=1) {
      __pyx_v__ = __pyx_t_10;

      /* "mmfparser/data/chunkloaders/objects.pyx":979
 * 
 *             for _ in xrange(8):
 *                 qualifier = reader.readShort()             # <<<<<<<<<<<<<<
 *                 if qualifier == -1:
 *                     break
 */
      __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 979, __pyx_L1_error)
      __pyx_v_qualifier = __pyx_t_5;

      /* "mmfparser/data/chunkloaders/objects.pyx":980
 *             for _ in xrange(8):
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:             # <<<<<<<<<<<<<<
 *                     break
 *                 self.qualifiers.append(qualifier)
 */
      __pyx_t_6 = ((__pyx_v_qualifier == -1L) != 0);
      if (__pyx_t_6) {

        /* "mmfparser/data/chunkloaders/objects.pyx":981
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:
 *                     break             # <<<<<<<<<<<<<<
 *                 self.qualifiers.append(qualifier)
 * 
 */
        goto __pyx_L15_break;

        /* "mmfparser/data/chunkloaders/objects.pyx":980
 *             for _ in xrange(8):
 *                 qualifier = reader.readShort()
 *                 if qualifier == -1:             # <<<<<<<<<<<<<<
 *                     break
 *                 self.qualifiers.append(qualifier)
 */
      }

      /* "mmfparser/data/chunkloaders/objects.pyx":982
 *                 if qualifier == -1:
 *                     break
 *                 self.qualifiers.append(qualifier)             # <<<<<<<<<<<<<<
 * 
 *             reader.seek(end)
 */
      if (unlikely(__pyx_v_self->qualifiers == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
        __PYX_ERR(0, 982, __pyx_L1_error)
      }
      __pyx_t_2 = __Pyx_PyInt_From_short(__pyx_v_qualifier); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 982, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_self->qualifiers, __pyx_t_2); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 982, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_L15_break:;

    /* "mmfparser/data/chunkloaders/objects.pyx":984
 *                 self.qualifiers.append(qualifier)
 * 
 *             reader.seek(end)             # <<<<<<<<<<<<<<
 * 
 *             # can change
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, __pyx_v_end, 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":987
 * 
 *             # can change
 *             extensionOffset = reader.readShort()             # <<<<<<<<<<<<<<
 * 
 *             valuesOffset = reader.readShort()
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 987, __pyx_L1_error)
    __pyx_v_extensionOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":989
 *             extensionOffset = reader.readShort()
 * 
 *             valuesOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             stringsOffset = reader.readShort()
 *             self.newFlags.setFlags(reader.readShort(True))
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 989, __pyx_L1_error)
    __pyx_v_valuesOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":990
 * 
 *             valuesOffset = reader.readShort()
 *             stringsOffset = reader.readShort()             # <<<<<<<<<<<<<<
 *             self.newFlags.setFlags(reader.readShort(True))
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, NULL); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 990, __pyx_L1_error)
    __pyx_v_stringsOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":991
 *             valuesOffset = reader.readShort()
 *             stringsOffset = reader.readShort()
 *             self.newFlags.setFlags(reader.readShort(True))             # <<<<<<<<<<<<<<
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 *             self.identifier = reader.readInt()
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->newFlags, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 991, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12.__pyx_n = 1;
    __pyx_t_12.asUnsigned = 1;
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_12); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 991, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 991, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 991, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":992
 *             stringsOffset = reader.readShort()
 *             self.newFlags.setFlags(reader.readShort(True))
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data             # <<<<<<<<<<<<<<
 *             self.identifier = reader.readInt()
 *             self.backColour = reader.readColor()
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->preferences, __pyx_n_s_setFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 992, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12.__pyx_n = 1;
    __pyx_t_12.asUnsigned = 1;
    __pyx_t_5 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readShort(__pyx_v_reader, 0, &__pyx_t_12); if (unlikely(__pyx_t_5 == ((int)-10) && PyErr_Occurred())) __PYX_ERR(0, 992, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 992, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 992, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":993
 *             self.newFlags.setFlags(reader.readShort(True))
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 *             self.identifier = reader.readInt()             # <<<<<<<<<<<<<<
 *             self.backColour = reader.readColor()
 *             fadeInOffset = reader.readInt()
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 993, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 993, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->identifier = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":994
 *             self.preferences.setFlags(reader.readShort(True)) # runtime data
 *             self.identifier = reader.readInt()
 *             self.backColour = reader.readColor()             # <<<<<<<<<<<<<<
 *             fadeInOffset = reader.readInt()
 *             fadeOutOffset = reader.readInt()
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readColor(__pyx_v_reader, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 994, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->backColour);
    __Pyx_DECREF(__pyx_v_self->backColour);
    __pyx_v_self->backColour = ((PyObject*)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":995
 *             self.identifier = reader.readInt()
 *             self.backColour = reader.readColor()
 *             fadeInOffset = reader.readInt()             # <<<<<<<<<<<<<<
 *             fadeOutOffset = reader.readInt()
 * 
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 995, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 995, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_fadeInOffset = __pyx_t_5;

    /* "mmfparser/data/chunkloaders/objects.pyx":996
 *             self.backColour = reader.readColor()
 *             fadeInOffset = reader.readInt()
 *             fadeOutOffset = reader.readInt()             # <<<<<<<<<<<<<<
 * 
 *         if movementsOffset != 0:
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 996, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 996, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_fadeOutOffset = __pyx_t_5;
  }
  __pyx_L5:;

  /* "mmfparser/data/chunkloaders/objects.pyx":998
 *             fadeOutOffset = reader.readInt()
 * 
 *         if movementsOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + movementsOffset)
 *             self.movements = self.new(Movements, reader)
 */
  __pyx_t_6 = ((__pyx_v_movementsOffset != 0) != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":999
 * 
 *         if movementsOffset != 0:
 *             reader.seek(currentPosition + movementsOffset)             # <<<<<<<<<<<<<<
 *             self.movements = self.new(Movements, reader)
 * 
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, (__pyx_v_currentPosition + __pyx_v_movementsOffset), 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":1000
 *         if movementsOffset != 0:
 *             reader.seek(currentPosition + movementsOffset)
 *             self.movements = self.new(Movements, reader)             # <<<<<<<<<<<<<<
 * 
 *         if valuesOffset != 0:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_Movements); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1000, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_t_3, ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1000, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    } else
    #endif
    {
      __pyx_t_13 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1000, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_5, __pyx_t_3);
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
      __pyx_t_3 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_13, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1000, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->movements);
    __Pyx_DECREF(__pyx_v_self->movements);
    __pyx_v_self->movements = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":998
 *             fadeOutOffset = reader.readInt()
 * 
 *         if movementsOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + movementsOffset)
 *             self.movements = self.new(Movements, reader)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1002
 *             self.movements = self.new(Movements, reader)
 * 
 *         if valuesOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + valuesOffset)
 *             self.values = self.new(AlterableValues, reader)
 */
  __pyx_t_6 = ((__pyx_v_valuesOffset != 0) != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1003
 * 
 *         if valuesOffset != 0:
 *             reader.seek(currentPosition + valuesOffset)             # <<<<<<<<<<<<<<
 *             self.values = self.new(AlterableValues, reader)
 * 
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, (__pyx_v_currentPosition + __pyx_v_valuesOffset), 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":1004
 *         if valuesOffset != 0:
 *             reader.seek(currentPosition + valuesOffset)
 *             self.values = self.new(AlterableValues, reader)             # <<<<<<<<<<<<<<
 * 
 *         if stringsOffset != 0:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1004, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_13 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_13, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableValues), ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1004, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_13, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableValues), ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1004, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1004, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (__pyx_t_13) {
        __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_13); __pyx_t_13 = NULL;
      }
      __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableValues));
      __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableValues));
      PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableValues));
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1004, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->values);
    __Pyx_DECREF(__pyx_v_self->values);
    __pyx_v_self->values = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1002
 *             self.movements = self.new(Movements, reader)
 * 
 *         if valuesOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + valuesOffset)
 *             self.values = self.new(AlterableValues, reader)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1006
 *             self.values = self.new(AlterableValues, reader)
 * 
 *         if stringsOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + stringsOffset)
 *             self.strings = self.new(AlterableStrings, reader)
 */
  __pyx_t_6 = ((__pyx_v_stringsOffset != 0) != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1007
 * 
 *         if stringsOffset != 0:
 *             reader.seek(currentPosition + stringsOffset)             # <<<<<<<<<<<<<<
 *             self.strings = self.new(AlterableStrings, reader)
 * 
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, (__pyx_v_currentPosition + __pyx_v_stringsOffset), 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":1008
 *         if stringsOffset != 0:
 *             reader.seek(currentPosition + stringsOffset)
 *             self.strings = self.new(AlterableStrings, reader)             # <<<<<<<<<<<<<<
 * 
 *         if animationsOffset != 0:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1008, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings), ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1008, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings), ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1008, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_13 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1008, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings));
      __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings));
      PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings));
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_13, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1008, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->strings);
    __Pyx_DECREF(__pyx_v_self->strings);
    __pyx_v_self->strings = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1006
 *             self.values = self.new(AlterableValues, reader)
 * 
 *         if stringsOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + stringsOffset)
 *             self.strings = self.new(AlterableStrings, reader)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1010
 *             self.strings = self.new(AlterableStrings, reader)
 * 
 *         if animationsOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + animationsOffset)
 *             self.animations = self.new(AnimationHeader, reader)
 */
  __pyx_t_6 = ((__pyx_v_animationsOffset != 0) != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1011
 * 
 *         if animationsOffset != 0:
 *             reader.seek(currentPosition + animationsOffset)             # <<<<<<<<<<<<<<
 *             self.animations = self.new(AnimationHeader, reader)
 * 
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, (__pyx_v_currentPosition + __pyx_v_animationsOffset), 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":1012
 *         if animationsOffset != 0:
 *             reader.seek(currentPosition + animationsOffset)
 *             self.animations = self.new(AnimationHeader, reader)             # <<<<<<<<<<<<<<
 * 
 *         if counterOffset != 0:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1012, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_13 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_13, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader), ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1012, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_13, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader), ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1012, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1012, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (__pyx_t_13) {
        __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_13); __pyx_t_13 = NULL;
      }
      __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader));
      __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader));
      PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader));
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1012, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->animations);
    __Pyx_DECREF(__pyx_v_self->animations);
    __pyx_v_self->animations = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1010
 *             self.strings = self.new(AlterableStrings, reader)
 * 
 *         if animationsOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + animationsOffset)
 *             self.animations = self.new(AnimationHeader, reader)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1014
 *             self.animations = self.new(AnimationHeader, reader)
 * 
 *         if counterOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + counterOffset)
 *             self.counter = self.new(Counter, reader)
 */
  __pyx_t_6 = ((__pyx_v_counterOffset != 0) != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1015
 * 
 *         if counterOffset != 0:
 *             reader.seek(currentPosition + counterOffset)             # <<<<<<<<<<<<<<
 *             self.counter = self.new(Counter, reader)
 * 
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, (__pyx_v_currentPosition + __pyx_v_counterOffset), 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":1016
 *         if counterOffset != 0:
 *             reader.seek(currentPosition + counterOffset)
 *             self.counter = self.new(Counter, reader)             # <<<<<<<<<<<<<<
 * 
 *         if extensionOffset != 0:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1016, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counter), ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1016, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counter), ((PyObject *)__pyx_v_reader)};
      __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1016, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_2);
    } else
    #endif
    {
      __pyx_t_13 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1016, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counter));
      __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counter));
      PyTuple_SET_ITEM(__pyx_t_13, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counter));
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_13, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_13, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1016, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF(__pyx_v_self->counter);
    __Pyx_DECREF(__pyx_v_self->counter);
    __pyx_v_self->counter = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1014
 *             self.animations = self.new(AnimationHeader, reader)
 * 
 *         if counterOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + counterOffset)
 *             self.counter = self.new(Counter, reader)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1018
 *             self.counter = self.new(Counter, reader)
 * 
 *         if extensionOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + extensionOffset)
 * 
 */
  __pyx_t_6 = ((__pyx_v_extensionOffset != 0) != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1019
 * 
 *         if extensionOffset != 0:
 *             reader.seek(currentPosition + extensionOffset)             # <<<<<<<<<<<<<<
 * 
 *             dataSize = reader.readInt() - 20
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, (__pyx_v_currentPosition + __pyx_v_extensionOffset), 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":1021
 *             reader.seek(currentPosition + extensionOffset)
 * 
 *             dataSize = reader.readInt() - 20             # <<<<<<<<<<<<<<
 *             reader.skipBytes(4) # maxSize
 *             self.extensionVersion = reader.readInt()
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1021, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyInt_SubtractObjC(__pyx_t_2, __pyx_int_20, 20, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1021, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_dataSize = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1022
 * 
 *             dataSize = reader.readInt() - 20
 *             reader.skipBytes(4) # maxSize             # <<<<<<<<<<<<<<
 *             self.extensionVersion = reader.readInt()
 *             self.extensionId = reader.readInt()
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->skipBytes(__pyx_v_reader, 4, 0));

    /* "mmfparser/data/chunkloaders/objects.pyx":1023
 *             dataSize = reader.readInt() - 20
 *             reader.skipBytes(4) # maxSize
 *             self.extensionVersion = reader.readInt()             # <<<<<<<<<<<<<<
 *             self.extensionId = reader.readInt()
 *             self.extensionPrivate = reader.readInt()
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1023, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->extensionVersion);
    __Pyx_DECREF(__pyx_v_self->extensionVersion);
    __pyx_v_self->extensionVersion = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1024
 *             reader.skipBytes(4) # maxSize
 *             self.extensionVersion = reader.readInt()
 *             self.extensionId = reader.readInt()             # <<<<<<<<<<<<<<
 *             self.extensionPrivate = reader.readInt()
 *             if dataSize != 0:
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1024, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->extensionId);
    __Pyx_DECREF(__pyx_v_self->extensionId);
    __pyx_v_self->extensionId = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1025
 *             self.extensionVersion = reader.readInt()
 *             self.extensionId = reader.readInt()
 *             self.extensionPrivate = reader.readInt()             # <<<<<<<<<<<<<<
 *             if dataSize != 0:
 *                 self.extensionData = reader.read(dataSize)
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->readInt(__pyx_v_reader, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1025, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->extensionPrivate);
    __Pyx_DECREF(__pyx_v_self->extensionPrivate);
    __pyx_v_self->extensionPrivate = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1026
 *             self.extensionId = reader.readInt()
 *             self.extensionPrivate = reader.readInt()
 *             if dataSize != 0:             # <<<<<<<<<<<<<<
 *                 self.extensionData = reader.read(dataSize)
 * 
 */
    __pyx_t_1 = __Pyx_PyInt_NeObjC(__pyx_v_dataSize, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1026, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_6) {

      /* "mmfparser/data/chunkloaders/objects.pyx":1027
 *             self.extensionPrivate = reader.readInt()
 *             if dataSize != 0:
 *                 self.extensionData = reader.read(dataSize)             # <<<<<<<<<<<<<<
 * 
 *         if fadeInOffset != 0:
 */
      __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_dataSize); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1027, __pyx_L1_error)
      __pyx_t_14.__pyx_n = 1;
      __pyx_t_14.size = __pyx_t_5;
      __pyx_t_1 = ((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->read(__pyx_v_reader, 0, &__pyx_t_14); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1027, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_v_self->extensionData);
      __Pyx_DECREF(__pyx_v_self->extensionData);
      __pyx_v_self->extensionData = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1026
 *             self.extensionId = reader.readInt()
 *             self.extensionPrivate = reader.readInt()
 *             if dataSize != 0:             # <<<<<<<<<<<<<<
 *                 self.extensionData = reader.read(dataSize)
 * 
 */
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":1018
 *             self.counter = self.new(Counter, reader)
 * 
 *         if extensionOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + extensionOffset)
 * 
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1029
 *                 self.extensionData = reader.read(dataSize)
 * 
 *         if fadeInOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + fadeInOffset)
 *             self.fadeIn = self.new(FadeIn, reader)
 */
  __pyx_t_6 = ((__pyx_v_fadeInOffset != 0) != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1030
 * 
 *         if fadeInOffset != 0:
 *             reader.seek(currentPosition + fadeInOffset)             # <<<<<<<<<<<<<<
 *             self.fadeIn = self.new(FadeIn, reader)
 * 
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, (__pyx_v_currentPosition + __pyx_v_fadeInOffset), 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":1031
 *         if fadeInOffset != 0:
 *             reader.seek(currentPosition + fadeInOffset)
 *             self.fadeIn = self.new(FadeIn, reader)             # <<<<<<<<<<<<<<
 * 
 *         if fadeOutOffset != 0:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1031, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_FadeIn); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1031, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_13, ((PyObject *)__pyx_v_reader)};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1031, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_t_13, ((PyObject *)__pyx_v_reader)};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1031, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    } else
    #endif
    {
      __pyx_t_4 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1031, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (__pyx_t_3) {
        __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_5, __pyx_t_13);
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
      __pyx_t_13 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1031, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->fadeIn);
    __Pyx_DECREF(__pyx_v_self->fadeIn);
    __pyx_v_self->fadeIn = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1029
 *                 self.extensionData = reader.read(dataSize)
 * 
 *         if fadeInOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + fadeInOffset)
 *             self.fadeIn = self.new(FadeIn, reader)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1033
 *             self.fadeIn = self.new(FadeIn, reader)
 * 
 *         if fadeOutOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + fadeOutOffset)
 *             self.fadeOut = self.new(FadeOut, reader)
 */
  __pyx_t_6 = ((__pyx_v_fadeOutOffset != 0) != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1034
 * 
 *         if fadeOutOffset != 0:
 *             reader.seek(currentPosition + fadeOutOffset)             # <<<<<<<<<<<<<<
 *             self.fadeOut = self.new(FadeOut, reader)
 * 
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, (__pyx_v_currentPosition + __pyx_v_fadeOutOffset), 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":1035
 *         if fadeOutOffset != 0:
 *             reader.seek(currentPosition + fadeOutOffset)
 *             self.fadeOut = self.new(FadeOut, reader)             # <<<<<<<<<<<<<<
 * 
 *         if systemObjectOffset != 0:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1035, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_FadeOut); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1035, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_13 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_5 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_t_4, ((PyObject *)__pyx_v_reader)};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1035, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[3] = {__pyx_t_13, __pyx_t_4, ((PyObject *)__pyx_v_reader)};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1035, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else
    #endif
    {
      __pyx_t_3 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1035, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (__pyx_t_13) {
        __Pyx_GIVEREF(__pyx_t_13); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_13); __pyx_t_13 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_5, __pyx_t_4);
      __Pyx_INCREF(((PyObject *)__pyx_v_reader));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
      PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
      __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1035, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->fadeOut);
    __Pyx_DECREF(__pyx_v_self->fadeOut);
    __pyx_v_self->fadeOut = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1033
 *             self.fadeIn = self.new(FadeIn, reader)
 * 
 *         if fadeOutOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + fadeOutOffset)
 *             self.fadeOut = self.new(FadeOut, reader)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1037
 *             self.fadeOut = self.new(FadeOut, reader)
 * 
 *         if systemObjectOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + systemObjectOffset)
 * 
 */
  __pyx_t_6 = ((__pyx_v_systemObjectOffset != 0) != 0);
  if (__pyx_t_6) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1038
 * 
 *         if systemObjectOffset != 0:
 *             reader.seek(currentPosition + systemObjectOffset)             # <<<<<<<<<<<<<<
 * 
 *             objectType = self.parent.objectType
 */
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader->__pyx_vtab)->seek(__pyx_v_reader, (__pyx_v_currentPosition + __pyx_v_systemObjectOffset), 0, NULL));

    /* "mmfparser/data/chunkloaders/objects.pyx":1040
 *             reader.seek(currentPosition + systemObjectOffset)
 * 
 *             objectType = self.parent.objectType             # <<<<<<<<<<<<<<
 *             if objectType in (TEXT, QUESTION):
 *                 self.text = self.new(Text, reader)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.parent), __pyx_n_s_objectType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1040, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_objectType = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1041
 * 
 *             objectType = self.parent.objectType
 *             if objectType in (TEXT, QUESTION):             # <<<<<<<<<<<<<<
 *                 self.text = self.new(Text, reader)
 *             elif objectType in (SCORE, LIVES, COUNTER):
 */
    __Pyx_INCREF(__pyx_v_objectType);
    __pyx_t_1 = __pyx_v_objectType;
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_TEXT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1041, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1041, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 1041, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!__pyx_t_8) {
    } else {
      __pyx_t_6 = __pyx_t_8;
      goto __pyx_L28_bool_binop_done;
    }
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_QUESTION); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1041, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1041, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 1041, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_6 = __pyx_t_8;
    __pyx_L28_bool_binop_done:;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_8 = (__pyx_t_6 != 0);
    if (__pyx_t_8) {

      /* "mmfparser/data/chunkloaders/objects.pyx":1042
 *             objectType = self.parent.objectType
 *             if objectType in (TEXT, QUESTION):
 *                 self.text = self.new(Text, reader)             # <<<<<<<<<<<<<<
 *             elif objectType in (SCORE, LIVES, COUNTER):
 *                 self.counters = self.new(Counters, reader)
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1042, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_5 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Text), ((PyObject *)__pyx_v_reader)};
        __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
        PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Text), ((PyObject *)__pyx_v_reader)};
        __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      {
        __pyx_t_4 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (__pyx_t_3) {
          __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3); __pyx_t_3 = NULL;
        }
        __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Text));
        __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Text));
        PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Text));
        __Pyx_INCREF(((PyObject *)__pyx_v_reader));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
        PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1042, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GIVEREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_v_self->text);
      __Pyx_DECREF(__pyx_v_self->text);
      __pyx_v_self->text = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1041
 * 
 *             objectType = self.parent.objectType
 *             if objectType in (TEXT, QUESTION):             # <<<<<<<<<<<<<<
 *                 self.text = self.new(Text, reader)
 *             elif objectType in (SCORE, LIVES, COUNTER):
 */
      goto __pyx_L27;
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":1043
 *             if objectType in (TEXT, QUESTION):
 *                 self.text = self.new(Text, reader)
 *             elif objectType in (SCORE, LIVES, COUNTER):             # <<<<<<<<<<<<<<
 *                 self.counters = self.new(Counters, reader)
 *             elif objectType == RTF:
 */
    __Pyx_INCREF(__pyx_v_objectType);
    __pyx_t_1 = __pyx_v_objectType;
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_SCORE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!__pyx_t_6) {
    } else {
      __pyx_t_8 = __pyx_t_6;
      goto __pyx_L30_bool_binop_done;
    }
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_LIVES); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (!__pyx_t_6) {
    } else {
      __pyx_t_8 = __pyx_t_6;
      goto __pyx_L30_bool_binop_done;
    }
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_COUNTER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1043, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_8 = __pyx_t_6;
    __pyx_L30_bool_binop_done:;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = (__pyx_t_8 != 0);
    if (__pyx_t_6) {

      /* "mmfparser/data/chunkloaders/objects.pyx":1044
 *                 self.text = self.new(Text, reader)
 *             elif objectType in (SCORE, LIVES, COUNTER):
 *                 self.counters = self.new(Counters, reader)             # <<<<<<<<<<<<<<
 *             elif objectType == RTF:
 *                 self.rtf = self.new(RTFObject, reader)
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1044, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_5 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[3] = {__pyx_t_2, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counters), ((PyObject *)__pyx_v_reader)};
        __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1044, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[3] = {__pyx_t_2, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counters), ((PyObject *)__pyx_v_reader)};
        __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1044, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      {
        __pyx_t_3 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1044, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (__pyx_t_2) {
          __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
        }
        __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counters));
        __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counters));
        PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counters));
        __Pyx_INCREF(((PyObject *)__pyx_v_reader));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
        PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1044, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GIVEREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_v_self->counters);
      __Pyx_DECREF(__pyx_v_self->counters);
      __pyx_v_self->counters = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1043
 *             if objectType in (TEXT, QUESTION):
 *                 self.text = self.new(Text, reader)
 *             elif objectType in (SCORE, LIVES, COUNTER):             # <<<<<<<<<<<<<<
 *                 self.counters = self.new(Counters, reader)
 *             elif objectType == RTF:
 */
      goto __pyx_L27;
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":1045
 *             elif objectType in (SCORE, LIVES, COUNTER):
 *                 self.counters = self.new(Counters, reader)
 *             elif objectType == RTF:             # <<<<<<<<<<<<<<
 *                 self.rtf = self.new(RTFObject, reader)
 *             elif objectType == SUBAPPLICATION:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_RTF); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_objectType, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1045, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_6) {

      /* "mmfparser/data/chunkloaders/objects.pyx":1046
 *                 self.counters = self.new(Counters, reader)
 *             elif objectType == RTF:
 *                 self.rtf = self.new(RTFObject, reader)             # <<<<<<<<<<<<<<
 *             elif objectType == SUBAPPLICATION:
 *                 self.subApplication = self.new(SubApplication, reader)
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1046, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
          __pyx_t_5 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_RTFObject), ((PyObject *)__pyx_v_reader)};
        __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1046, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_1)) {
        PyObject *__pyx_temp[3] = {__pyx_t_3, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_RTFObject), ((PyObject *)__pyx_v_reader)};
        __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_1, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1046, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_4);
      } else
      #endif
      {
        __pyx_t_2 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1046, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        if (__pyx_t_3) {
          __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3); __pyx_t_3 = NULL;
        }
        __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_RTFObject));
        __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_RTFObject));
        PyTuple_SET_ITEM(__pyx_t_2, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_RTFObject));
        __Pyx_INCREF(((PyObject *)__pyx_v_reader));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
        PyTuple_SET_ITEM(__pyx_t_2, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1046, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GIVEREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_v_self->rtf);
      __Pyx_DECREF(__pyx_v_self->rtf);
      __pyx_v_self->rtf = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1045
 *             elif objectType in (SCORE, LIVES, COUNTER):
 *                 self.counters = self.new(Counters, reader)
 *             elif objectType == RTF:             # <<<<<<<<<<<<<<
 *                 self.rtf = self.new(RTFObject, reader)
 *             elif objectType == SUBAPPLICATION:
 */
      goto __pyx_L27;
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":1047
 *             elif objectType == RTF:
 *                 self.rtf = self.new(RTFObject, reader)
 *             elif objectType == SUBAPPLICATION:             # <<<<<<<<<<<<<<
 *                 self.subApplication = self.new(SubApplication, reader)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_SUBAPPLICATION); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_objectType, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1047, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_6) {

      /* "mmfparser/data/chunkloaders/objects.pyx":1048
 *                 self.rtf = self.new(RTFObject, reader)
 *             elif objectType == SUBAPPLICATION:
 *                 self.subApplication = self.new(SubApplication, reader)             # <<<<<<<<<<<<<<
 * 
 *     def write(self, ByteReader reader):
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_new); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1048, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_5 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[3] = {__pyx_t_2, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_SubApplication), ((PyObject *)__pyx_v_reader)};
        __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1048, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[3] = {__pyx_t_2, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_SubApplication), ((PyObject *)__pyx_v_reader)};
        __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1048, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_GOTREF(__pyx_t_1);
      } else
      #endif
      {
        __pyx_t_3 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1048, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (__pyx_t_2) {
          __Pyx_GIVEREF(__pyx_t_2); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __pyx_t_2 = NULL;
        }
        __Pyx_INCREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_SubApplication));
        __Pyx_GIVEREF(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_SubApplication));
        PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_5, ((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_SubApplication));
        __Pyx_INCREF(((PyObject *)__pyx_v_reader));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_reader));
        PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_5, ((PyObject *)__pyx_v_reader));
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1048, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GIVEREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_v_self->subApplication);
      __Pyx_DECREF(__pyx_v_self->subApplication);
      __pyx_v_self->subApplication = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1047
 *             elif objectType == RTF:
 *                 self.rtf = self.new(RTFObject, reader)
 *             elif objectType == SUBAPPLICATION:             # <<<<<<<<<<<<<<
 *                 self.subApplication = self.new(SubApplication, reader)
 * 
 */
    }
    __pyx_L27:;

    /* "mmfparser/data/chunkloaders/objects.pyx":1037
 *             self.fadeOut = self.new(FadeOut, reader)
 * 
 *         if systemObjectOffset != 0:             # <<<<<<<<<<<<<<
 *             reader.seek(currentPosition + systemObjectOffset)
 * 
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":885
 *         self.preferences = OBJECT_PREFERENCES.copy()
 * 
 *     cpdef read(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         currentPosition = reader.tell()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dataSize);
  __Pyx_XDECREF(__pyx_v_objectType);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3read(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 885, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_2read(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_2read(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("read", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_read(__pyx_v_self, __pyx_v_reader, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 885, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.read", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":1050
 *                 self.subApplication = self.new(SubApplication, reader)
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         movementsOffset = animationsOffset = counterOffset = \
 *         systemObjectOffset = extensionOffset = valuesOffset = \
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5write(PyObject *__pyx_v_self, PyObject *__pyx_v_reader) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_reader), __pyx_ptype_9mmfparser_10bytereader_ByteReader, 1, "reader", 0))) __PYX_ERR(0, 1050, __pyx_L1_error)
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4write(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_v_reader));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4write(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_reader) {
  long __pyx_v_movementsOffset;
  long __pyx_v_animationsOffset;
  long __pyx_v_counterOffset;
  long __pyx_v_systemObjectOffset;
  long __pyx_v_extensionOffset;
  long __pyx_v_valuesOffset;
  long __pyx_v_stringsOffset;
  long __pyx_v_fadeInOffset;
  long __pyx_v_fadeOutOffset;
  struct __pyx_obj_9mmfparser_10bytereader_ByteReader *__pyx_v_objectData = NULL;
  PyObject *__pyx_v_objectType = NULL;
  long __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  long __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("write", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":1053
 *         movementsOffset = animationsOffset = counterOffset = \
 *         systemObjectOffset = extensionOffset = valuesOffset = \
 *         stringsOffset = fadeInOffset = fadeOutOffset = 0             # <<<<<<<<<<<<<<
 * 
 *         objectData = ByteReader()
 */
  __pyx_v_movementsOffset = 0;
  __pyx_v_animationsOffset = 0;
  __pyx_v_counterOffset = 0;
  __pyx_v_systemObjectOffset = 0;
  __pyx_v_extensionOffset = 0;
  __pyx_v_valuesOffset = 0;
  __pyx_v_stringsOffset = 0;
  __pyx_v_fadeInOffset = 0;
  __pyx_v_fadeOutOffset = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1055
 *         stringsOffset = fadeInOffset = fadeOutOffset = 0
 * 
 *         objectData = ByteReader()             # <<<<<<<<<<<<<<
 *         if self.movements is not None:
 *             movementsOffset = objectData.tell() + 62
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_9mmfparser_10bytereader_ByteReader)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1055, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_objectData = ((struct __pyx_obj_9mmfparser_10bytereader_ByteReader *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1056
 * 
 *         objectData = ByteReader()
 *         if self.movements is not None:             # <<<<<<<<<<<<<<
 *             movementsOffset = objectData.tell() + 62
 *             self.movements.write(objectData)
 */
  __pyx_t_2 = (__pyx_v_self->movements != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1057
 *         objectData = ByteReader()
 *         if self.movements is not None:
 *             movementsOffset = objectData.tell() + 62             # <<<<<<<<<<<<<<
 *             self.movements.write(objectData)
 *         if self.values is not None:
 */
    __pyx_v_movementsOffset = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->tell(__pyx_v_objectData, 0) + 62);

    /* "mmfparser/data/chunkloaders/objects.pyx":1058
 *         if self.movements is not None:
 *             movementsOffset = objectData.tell() + 62
 *             self.movements.write(objectData)             # <<<<<<<<<<<<<<
 *         if self.values is not None:
 *             valuesOffset = objectData.tell() + 62
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->movements, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1058, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1058, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1056
 * 
 *         objectData = ByteReader()
 *         if self.movements is not None:             # <<<<<<<<<<<<<<
 *             movementsOffset = objectData.tell() + 62
 *             self.movements.write(objectData)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1059
 *             movementsOffset = objectData.tell() + 62
 *             self.movements.write(objectData)
 *         if self.values is not None:             # <<<<<<<<<<<<<<
 *             valuesOffset = objectData.tell() + 62
 *             self.values.write(objectData)
 */
  __pyx_t_3 = (__pyx_v_self->values != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1060
 *             self.movements.write(objectData)
 *         if self.values is not None:
 *             valuesOffset = objectData.tell() + 62             # <<<<<<<<<<<<<<
 *             self.values.write(objectData)
 *         if self.strings is not None:
 */
    __pyx_v_valuesOffset = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->tell(__pyx_v_objectData, 0) + 62);

    /* "mmfparser/data/chunkloaders/objects.pyx":1061
 *         if self.values is not None:
 *             valuesOffset = objectData.tell() + 62
 *             self.values.write(objectData)             # <<<<<<<<<<<<<<
 *         if self.strings is not None:
 *             stringsOffset = objectData.tell() + 62
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->values, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1061, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1061, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1059
 *             movementsOffset = objectData.tell() + 62
 *             self.movements.write(objectData)
 *         if self.values is not None:             # <<<<<<<<<<<<<<
 *             valuesOffset = objectData.tell() + 62
 *             self.values.write(objectData)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1062
 *             valuesOffset = objectData.tell() + 62
 *             self.values.write(objectData)
 *         if self.strings is not None:             # <<<<<<<<<<<<<<
 *             stringsOffset = objectData.tell() + 62
 *             self.strings.write(objectData)
 */
  __pyx_t_2 = (__pyx_v_self->strings != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1063
 *             self.values.write(objectData)
 *         if self.strings is not None:
 *             stringsOffset = objectData.tell() + 62             # <<<<<<<<<<<<<<
 *             self.strings.write(objectData)
 *         if self.animations is not None:
 */
    __pyx_v_stringsOffset = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->tell(__pyx_v_objectData, 0) + 62);

    /* "mmfparser/data/chunkloaders/objects.pyx":1064
 *         if self.strings is not None:
 *             stringsOffset = objectData.tell() + 62
 *             self.strings.write(objectData)             # <<<<<<<<<<<<<<
 *         if self.animations is not None:
 *             animationsOffset = objectData.tell() + 62
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->strings, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1064, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1062
 *             valuesOffset = objectData.tell() + 62
 *             self.values.write(objectData)
 *         if self.strings is not None:             # <<<<<<<<<<<<<<
 *             stringsOffset = objectData.tell() + 62
 *             self.strings.write(objectData)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1065
 *             stringsOffset = objectData.tell() + 62
 *             self.strings.write(objectData)
 *         if self.animations is not None:             # <<<<<<<<<<<<<<
 *             animationsOffset = objectData.tell() + 62
 *             self.animations.write(objectData)
 */
  __pyx_t_3 = (__pyx_v_self->animations != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1066
 *             self.strings.write(objectData)
 *         if self.animations is not None:
 *             animationsOffset = objectData.tell() + 62             # <<<<<<<<<<<<<<
 *             self.animations.write(objectData)
 *         if self.counter is not None:
 */
    __pyx_v_animationsOffset = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->tell(__pyx_v_objectData, 0) + 62);

    /* "mmfparser/data/chunkloaders/objects.pyx":1067
 *         if self.animations is not None:
 *             animationsOffset = objectData.tell() + 62
 *             self.animations.write(objectData)             # <<<<<<<<<<<<<<
 *         if self.counter is not None:
 *             counterOffset = objectData.tell() + 62
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->animations, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1067, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1067, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1065
 *             stringsOffset = objectData.tell() + 62
 *             self.strings.write(objectData)
 *         if self.animations is not None:             # <<<<<<<<<<<<<<
 *             animationsOffset = objectData.tell() + 62
 *             self.animations.write(objectData)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1068
 *             animationsOffset = objectData.tell() + 62
 *             self.animations.write(objectData)
 *         if self.counter is not None:             # <<<<<<<<<<<<<<
 *             counterOffset = objectData.tell() + 62
 *             self.counter.write(objectData)
 */
  __pyx_t_2 = (__pyx_v_self->counter != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1069
 *             self.animations.write(objectData)
 *         if self.counter is not None:
 *             counterOffset = objectData.tell() + 62             # <<<<<<<<<<<<<<
 *             self.counter.write(objectData)
 *         if self.extensionVersion is not None:
 */
    __pyx_v_counterOffset = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->tell(__pyx_v_objectData, 0) + 62);

    /* "mmfparser/data/chunkloaders/objects.pyx":1070
 *         if self.counter is not None:
 *             counterOffset = objectData.tell() + 62
 *             self.counter.write(objectData)             # <<<<<<<<<<<<<<
 *         if self.extensionVersion is not None:
 *             extensionOffset = objectData.tell() + 62
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->counter, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1068
 *             animationsOffset = objectData.tell() + 62
 *             self.animations.write(objectData)
 *         if self.counter is not None:             # <<<<<<<<<<<<<<
 *             counterOffset = objectData.tell() + 62
 *             self.counter.write(objectData)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1071
 *             counterOffset = objectData.tell() + 62
 *             self.counter.write(objectData)
 *         if self.extensionVersion is not None:             # <<<<<<<<<<<<<<
 *             extensionOffset = objectData.tell() + 62
 *             objectData.writeInt(20 + len(self.extensionData or ''))
 */
  __pyx_t_3 = (__pyx_v_self->extensionVersion != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1072
 *             self.counter.write(objectData)
 *         if self.extensionVersion is not None:
 *             extensionOffset = objectData.tell() + 62             # <<<<<<<<<<<<<<
 *             objectData.writeInt(20 + len(self.extensionData or ''))
 *             objectData.writeInt(20 + len(self.extensionData or ''))
 */
    __pyx_v_extensionOffset = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->tell(__pyx_v_objectData, 0) + 62);

    /* "mmfparser/data/chunkloaders/objects.pyx":1073
 *         if self.extensionVersion is not None:
 *             extensionOffset = objectData.tell() + 62
 *             objectData.writeInt(20 + len(self.extensionData or ''))             # <<<<<<<<<<<<<<
 *             objectData.writeInt(20 + len(self.extensionData or ''))
 *             objectData.writeInt(self.extensionVersion)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_objectData), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1073, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_self->extensionData); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1073, __pyx_L1_error)
    if (!__pyx_t_2) {
    } else {
      __Pyx_INCREF(__pyx_v_self->extensionData);
      __pyx_t_5 = __pyx_v_self->extensionData;
      goto __pyx_L9_bool_binop_done;
    }
    __Pyx_INCREF(__pyx_kp_s_);
    __pyx_t_5 = __pyx_kp_s_;
    __pyx_L9_bool_binop_done:;
    __pyx_t_6 = PyObject_Length(__pyx_t_5); if (unlikely(__pyx_t_6 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1073, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyInt_FromSsize_t((20 + __pyx_t_6)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1073, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1073, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1074
 *             extensionOffset = objectData.tell() + 62
 *             objectData.writeInt(20 + len(self.extensionData or ''))
 *             objectData.writeInt(20 + len(self.extensionData or ''))             # <<<<<<<<<<<<<<
 *             objectData.writeInt(self.extensionVersion)
 *             objectData.writeInt(self.extensionId)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_objectData), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1074, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_self->extensionData); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1074, __pyx_L1_error)
    if (!__pyx_t_2) {
    } else {
      __Pyx_INCREF(__pyx_v_self->extensionData);
      __pyx_t_5 = __pyx_v_self->extensionData;
      goto __pyx_L11_bool_binop_done;
    }
    __Pyx_INCREF(__pyx_kp_s_);
    __pyx_t_5 = __pyx_kp_s_;
    __pyx_L11_bool_binop_done:;
    __pyx_t_6 = PyObject_Length(__pyx_t_5); if (unlikely(__pyx_t_6 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1074, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyInt_FromSsize_t((20 + __pyx_t_6)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1074, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1074, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1075
 *             objectData.writeInt(20 + len(self.extensionData or ''))
 *             objectData.writeInt(20 + len(self.extensionData or ''))
 *             objectData.writeInt(self.extensionVersion)             # <<<<<<<<<<<<<<
 *             objectData.writeInt(self.extensionId)
 *             objectData.writeInt(self.extensionPrivate)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_objectData), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1075, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_self->extensionVersion) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_self->extensionVersion);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1075, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1076
 *             objectData.writeInt(20 + len(self.extensionData or ''))
 *             objectData.writeInt(self.extensionVersion)
 *             objectData.writeInt(self.extensionId)             # <<<<<<<<<<<<<<
 *             objectData.writeInt(self.extensionPrivate)
 *             objectData.write(self.extensionData or b'')
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_objectData), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1076, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_self->extensionId) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_self->extensionId);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1076, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1077
 *             objectData.writeInt(self.extensionVersion)
 *             objectData.writeInt(self.extensionId)
 *             objectData.writeInt(self.extensionPrivate)             # <<<<<<<<<<<<<<
 *             objectData.write(self.extensionData or b'')
 *         if self.fadeIn is not None:
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_objectData), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1077, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_self->extensionPrivate) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_self->extensionPrivate);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1077, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1078
 *             objectData.writeInt(self.extensionId)
 *             objectData.writeInt(self.extensionPrivate)
 *             objectData.write(self.extensionData or b'')             # <<<<<<<<<<<<<<
 *         if self.fadeIn is not None:
 *             fadeInOffset = objectData.tell() + 62
 */
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_self->extensionData); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1078, __pyx_L1_error)
    if (!__pyx_t_2) {
    } else {
      if (!(likely(PyBytes_CheckExact(__pyx_v_self->extensionData))||((__pyx_v_self->extensionData) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_self->extensionData)->tp_name), 0))) __PYX_ERR(0, 1078, __pyx_L1_error)
      __Pyx_INCREF(__pyx_v_self->extensionData);
      __pyx_t_1 = __pyx_v_self->extensionData;
      goto __pyx_L13_bool_binop_done;
    }
    __Pyx_INCREF(__pyx_kp_b_);
    __pyx_t_1 = __pyx_kp_b_;
    __pyx_L13_bool_binop_done:;
    (void)(((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->write(__pyx_v_objectData, ((PyObject*)__pyx_t_1), 0));
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1071
 *             counterOffset = objectData.tell() + 62
 *             self.counter.write(objectData)
 *         if self.extensionVersion is not None:             # <<<<<<<<<<<<<<
 *             extensionOffset = objectData.tell() + 62
 *             objectData.writeInt(20 + len(self.extensionData or ''))
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1079
 *             objectData.writeInt(self.extensionPrivate)
 *             objectData.write(self.extensionData or b'')
 *         if self.fadeIn is not None:             # <<<<<<<<<<<<<<
 *             fadeInOffset = objectData.tell() + 62
 *             self.fadeIn.write(objectData)
 */
  __pyx_t_2 = (__pyx_v_self->fadeIn != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1080
 *             objectData.write(self.extensionData or b'')
 *         if self.fadeIn is not None:
 *             fadeInOffset = objectData.tell() + 62             # <<<<<<<<<<<<<<
 *             self.fadeIn.write(objectData)
 *         if self.fadeOut is not None:
 */
    __pyx_v_fadeInOffset = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->tell(__pyx_v_objectData, 0) + 62);

    /* "mmfparser/data/chunkloaders/objects.pyx":1081
 *         if self.fadeIn is not None:
 *             fadeInOffset = objectData.tell() + 62
 *             self.fadeIn.write(objectData)             # <<<<<<<<<<<<<<
 *         if self.fadeOut is not None:
 *             fadeOutOffset = objectData.tell() + 62
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->fadeIn, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1081, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1081, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1079
 *             objectData.writeInt(self.extensionPrivate)
 *             objectData.write(self.extensionData or b'')
 *         if self.fadeIn is not None:             # <<<<<<<<<<<<<<
 *             fadeInOffset = objectData.tell() + 62
 *             self.fadeIn.write(objectData)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1082
 *             fadeInOffset = objectData.tell() + 62
 *             self.fadeIn.write(objectData)
 *         if self.fadeOut is not None:             # <<<<<<<<<<<<<<
 *             fadeOutOffset = objectData.tell() + 62
 *             self.fadeOut.write(objectData)
 */
  __pyx_t_3 = (__pyx_v_self->fadeOut != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1083
 *             self.fadeIn.write(objectData)
 *         if self.fadeOut is not None:
 *             fadeOutOffset = objectData.tell() + 62             # <<<<<<<<<<<<<<
 *             self.fadeOut.write(objectData)
 *         objectType = self.parent.objectType
 */
    __pyx_v_fadeOutOffset = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->tell(__pyx_v_objectData, 0) + 62);

    /* "mmfparser/data/chunkloaders/objects.pyx":1084
 *         if self.fadeOut is not None:
 *             fadeOutOffset = objectData.tell() + 62
 *             self.fadeOut.write(objectData)             # <<<<<<<<<<<<<<
 *         objectType = self.parent.objectType
 *         if objectType in (TEXT, QUESTION, SCORE, LIVES, COUNTER, RTF,
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->fadeOut, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1084, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1084, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "mmfparser/data/chunkloaders/objects.pyx":1082
 *             fadeInOffset = objectData.tell() + 62
 *             self.fadeIn.write(objectData)
 *         if self.fadeOut is not None:             # <<<<<<<<<<<<<<
 *             fadeOutOffset = objectData.tell() + 62
 *             self.fadeOut.write(objectData)
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1085
 *             fadeOutOffset = objectData.tell() + 62
 *             self.fadeOut.write(objectData)
 *         objectType = self.parent.objectType             # <<<<<<<<<<<<<<
 *         if objectType in (TEXT, QUESTION, SCORE, LIVES, COUNTER, RTF,
 *                         SUBAPPLICATION):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.parent), __pyx_n_s_objectType); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1085, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_objectType = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1086
 *             self.fadeOut.write(objectData)
 *         objectType = self.parent.objectType
 *         if objectType in (TEXT, QUESTION, SCORE, LIVES, COUNTER, RTF,             # <<<<<<<<<<<<<<
 *                         SUBAPPLICATION):
 *             systemObjectOffset = objectData.tell() + 62
 */
  __Pyx_INCREF(__pyx_v_objectType);
  __pyx_t_1 = __pyx_v_objectType;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_TEXT); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (!__pyx_t_3) {
  } else {
    __pyx_t_2 = __pyx_t_3;
    goto __pyx_L18_bool_binop_done;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_QUESTION); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!__pyx_t_3) {
  } else {
    __pyx_t_2 = __pyx_t_3;
    goto __pyx_L18_bool_binop_done;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_SCORE); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (!__pyx_t_3) {
  } else {
    __pyx_t_2 = __pyx_t_3;
    goto __pyx_L18_bool_binop_done;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_LIVES); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!__pyx_t_3) {
  } else {
    __pyx_t_2 = __pyx_t_3;
    goto __pyx_L18_bool_binop_done;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_COUNTER); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (!__pyx_t_3) {
  } else {
    __pyx_t_2 = __pyx_t_3;
    goto __pyx_L18_bool_binop_done;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_RTF); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!__pyx_t_3) {
  } else {
    __pyx_t_2 = __pyx_t_3;
    goto __pyx_L18_bool_binop_done;
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1087
 *         objectType = self.parent.objectType
 *         if objectType in (TEXT, QUESTION, SCORE, LIVES, COUNTER, RTF,
 *                         SUBAPPLICATION):             # <<<<<<<<<<<<<<
 *             systemObjectOffset = objectData.tell() + 62
 *             if objectType in (TEXT, QUESTION):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_SUBAPPLICATION); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1087, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1086
 *             self.fadeOut.write(objectData)
 *         objectType = self.parent.objectType
 *         if objectType in (TEXT, QUESTION, SCORE, LIVES, COUNTER, RTF,             # <<<<<<<<<<<<<<
 *                         SUBAPPLICATION):
 *             systemObjectOffset = objectData.tell() + 62
 */
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1086, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_2 = __pyx_t_3;
  __pyx_L18_bool_binop_done:;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "mmfparser/data/chunkloaders/objects.pyx":1088
 *         if objectType in (TEXT, QUESTION, SCORE, LIVES, COUNTER, RTF,
 *                         SUBAPPLICATION):
 *             systemObjectOffset = objectData.tell() + 62             # <<<<<<<<<<<<<<
 *             if objectType in (TEXT, QUESTION):
 *                 self.text.write(objectData)
 */
    __pyx_v_systemObjectOffset = (((struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader *)__pyx_v_objectData->__pyx_vtab)->tell(__pyx_v_objectData, 0) + 62);

    /* "mmfparser/data/chunkloaders/objects.pyx":1089
 *                         SUBAPPLICATION):
 *             systemObjectOffset = objectData.tell() + 62
 *             if objectType in (TEXT, QUESTION):             # <<<<<<<<<<<<<<
 *                 self.text.write(objectData)
 *             elif objectType in (SCORE, LIVES, COUNTER):
 */
    __Pyx_INCREF(__pyx_v_objectType);
    __pyx_t_1 = __pyx_v_objectType;
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_TEXT); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1089, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1089, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!__pyx_t_2) {
    } else {
      __pyx_t_3 = __pyx_t_2;
      goto __pyx_L26_bool_binop_done;
    }
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_QUESTION); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1089, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1089, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1089, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_3 = __pyx_t_2;
    __pyx_L26_bool_binop_done:;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = (__pyx_t_3 != 0);
    if (__pyx_t_2) {

      /* "mmfparser/data/chunkloaders/objects.pyx":1090
 *             systemObjectOffset = objectData.tell() + 62
 *             if objectType in (TEXT, QUESTION):
 *                 self.text.write(objectData)             # <<<<<<<<<<<<<<
 *             elif objectType in (SCORE, LIVES, COUNTER):
 *                 self.counters.write(objectData)
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->text, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1090, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_5, ((PyObject *)__pyx_v_objectData));
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1090, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1089
 *                         SUBAPPLICATION):
 *             systemObjectOffset = objectData.tell() + 62
 *             if objectType in (TEXT, QUESTION):             # <<<<<<<<<<<<<<
 *                 self.text.write(objectData)
 *             elif objectType in (SCORE, LIVES, COUNTER):
 */
      goto __pyx_L25;
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":1091
 *             if objectType in (TEXT, QUESTION):
 *                 self.text.write(objectData)
 *             elif objectType in (SCORE, LIVES, COUNTER):             # <<<<<<<<<<<<<<
 *                 self.counters.write(objectData)
 *             elif objectType == RTF:
 */
    __Pyx_INCREF(__pyx_v_objectType);
    __pyx_t_1 = __pyx_v_objectType;
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_SCORE); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!__pyx_t_3) {
    } else {
      __pyx_t_2 = __pyx_t_3;
      goto __pyx_L28_bool_binop_done;
    }
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_LIVES); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (!__pyx_t_3) {
    } else {
      __pyx_t_2 = __pyx_t_3;
      goto __pyx_L28_bool_binop_done;
    }
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_COUNTER); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1091, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_2 = __pyx_t_3;
    __pyx_L28_bool_binop_done:;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = (__pyx_t_2 != 0);
    if (__pyx_t_3) {

      /* "mmfparser/data/chunkloaders/objects.pyx":1092
 *                 self.text.write(objectData)
 *             elif objectType in (SCORE, LIVES, COUNTER):
 *                 self.counters.write(objectData)             # <<<<<<<<<<<<<<
 *             elif objectType == RTF:
 *                 self.rtf.write(objectData)
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->counters, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1092, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1092, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1091
 *             if objectType in (TEXT, QUESTION):
 *                 self.text.write(objectData)
 *             elif objectType in (SCORE, LIVES, COUNTER):             # <<<<<<<<<<<<<<
 *                 self.counters.write(objectData)
 *             elif objectType == RTF:
 */
      goto __pyx_L25;
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":1093
 *             elif objectType in (SCORE, LIVES, COUNTER):
 *                 self.counters.write(objectData)
 *             elif objectType == RTF:             # <<<<<<<<<<<<<<
 *                 self.rtf.write(objectData)
 *             elif objectType == SUBAPPLICATION:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_RTF); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1093, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyObject_RichCompare(__pyx_v_objectType, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1093, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1093, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_3) {

      /* "mmfparser/data/chunkloaders/objects.pyx":1094
 *                 self.counters.write(objectData)
 *             elif objectType == RTF:
 *                 self.rtf.write(objectData)             # <<<<<<<<<<<<<<
 *             elif objectType == SUBAPPLICATION:
 *                 self.subApplication.write(objectData)
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->rtf, __pyx_n_s_write); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1094, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
        }
      }
      __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_1, ((PyObject *)__pyx_v_objectData));
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1094, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1093
 *             elif objectType in (SCORE, LIVES, COUNTER):
 *                 self.counters.write(objectData)
 *             elif objectType == RTF:             # <<<<<<<<<<<<<<
 *                 self.rtf.write(objectData)
 *             elif objectType == SUBAPPLICATION:
 */
      goto __pyx_L25;
    }

    /* "mmfparser/data/chunkloaders/objects.pyx":1095
 *             elif objectType == RTF:
 *                 self.rtf.write(objectData)
 *             elif objectType == SUBAPPLICATION:             # <<<<<<<<<<<<<<
 *                 self.subApplication.write(objectData)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_SUBAPPLICATION); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1095, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyObject_RichCompare(__pyx_v_objectType, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1095, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1095, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_3) {

      /* "mmfparser/data/chunkloaders/objects.pyx":1096
 *                 self.rtf.write(objectData)
 *             elif objectType == SUBAPPLICATION:
 *                 self.subApplication.write(objectData)             # <<<<<<<<<<<<<<
 * 
 *         reader.writeInt(len(objectData) + 62) # size
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->subApplication, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1096, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1096, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1095
 *             elif objectType == RTF:
 *                 self.rtf.write(objectData)
 *             elif objectType == SUBAPPLICATION:             # <<<<<<<<<<<<<<
 *                 self.subApplication.write(objectData)
 * 
 */
    }
    __pyx_L25:;

    /* "mmfparser/data/chunkloaders/objects.pyx":1086
 *             self.fadeOut.write(objectData)
 *         objectType = self.parent.objectType
 *         if objectType in (TEXT, QUESTION, SCORE, LIVES, COUNTER, RTF,             # <<<<<<<<<<<<<<
 *                         SUBAPPLICATION):
 *             systemObjectOffset = objectData.tell() + 62
 */
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1098
 *                 self.subApplication.write(objectData)
 * 
 *         reader.writeInt(len(objectData) + 62) # size             # <<<<<<<<<<<<<<
 *         reader.writeShort(movementsOffset)
 *         reader.writeShort(animationsOffset)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = PyObject_Length(((PyObject *)__pyx_v_objectData)); if (unlikely(__pyx_t_6 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1098, __pyx_L1_error)
  __pyx_t_5 = PyInt_FromSsize_t((__pyx_t_6 + 62)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1099
 * 
 *         reader.writeInt(len(objectData) + 62) # size
 *         reader.writeShort(movementsOffset)             # <<<<<<<<<<<<<<
 *         reader.writeShort(animationsOffset)
 *         reader.writeShort(self.version)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_movementsOffset); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1100
 *         reader.writeInt(len(objectData) + 62) # size
 *         reader.writeShort(movementsOffset)
 *         reader.writeShort(animationsOffset)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.version)
 *         reader.writeShort(counterOffset)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_animationsOffset); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1101
 *         reader.writeShort(movementsOffset)
 *         reader.writeShort(animationsOffset)
 *         reader.writeShort(self.version)             # <<<<<<<<<<<<<<
 *         reader.writeShort(counterOffset)
 *         reader.writeShort(systemObjectOffset)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->version); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1102
 *         reader.writeShort(animationsOffset)
 *         reader.writeShort(self.version)
 *         reader.writeShort(counterOffset)             # <<<<<<<<<<<<<<
 *         reader.writeShort(systemObjectOffset)
 *         reader.writeShort(0)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_counterOffset); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1103
 *         reader.writeShort(self.version)
 *         reader.writeShort(counterOffset)
 *         reader.writeShort(systemObjectOffset)             # <<<<<<<<<<<<<<
 *         reader.writeShort(0)
 *         reader.writeInt(self.flags.getFlags(), True)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_systemObjectOffset); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1104
 *         reader.writeShort(counterOffset)
 *         reader.writeShort(systemObjectOffset)
 *         reader.writeShort(0)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.flags.getFlags(), True)
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_int_0) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_int_0);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1105
 *         reader.writeShort(systemObjectOffset)
 *         reader.writeShort(0)
 *         reader.writeInt(self.flags.getFlags(), True)             # <<<<<<<<<<<<<<
 * 
 *         for i in xrange(8):
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->flags, __pyx_n_s_getFlags); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8) : __Pyx_PyObject_CallNoArg(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_5, Py_True};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1105, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_5, Py_True};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1105, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  } else
  #endif
  {
    __pyx_t_8 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (__pyx_t_7) {
      __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_7); __pyx_t_7 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_9, __pyx_t_5);
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_9, Py_True);
    __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1107
 *         reader.writeInt(self.flags.getFlags(), True)
 * 
 *         for i in xrange(8):             # <<<<<<<<<<<<<<
 *             try:
 *                 reader.writeShort(self.qualifiers[i])
 */
  for (__pyx_t_10 = 0; __pyx_t_10 < 8; __pyx_t_10+=1) {
    __pyx_v_i = __pyx_t_10;

    /* "mmfparser/data/chunkloaders/objects.pyx":1108
 * 
 *         for i in xrange(8):
 *             try:             # <<<<<<<<<<<<<<
 *                 reader.writeShort(self.qualifiers[i])
 *             except IndexError:
 */
    {
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
      __Pyx_XGOTREF(__pyx_t_11);
      __Pyx_XGOTREF(__pyx_t_12);
      __Pyx_XGOTREF(__pyx_t_13);
      /*try:*/ {

        /* "mmfparser/data/chunkloaders/objects.pyx":1109
 *         for i in xrange(8):
 *             try:
 *                 reader.writeShort(self.qualifiers[i])             # <<<<<<<<<<<<<<
 *             except IndexError:
 *                 reader.writeShort(-1)
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1109, __pyx_L33_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (unlikely(__pyx_v_self->qualifiers == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
          __PYX_ERR(0, 1109, __pyx_L33_error)
        }
        __pyx_t_8 = __Pyx_GetItemInt_List(__pyx_v_self->qualifiers, __pyx_v_i, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1109, __pyx_L33_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_8);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1109, __pyx_L33_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "mmfparser/data/chunkloaders/objects.pyx":1108
 * 
 *         for i in xrange(8):
 *             try:             # <<<<<<<<<<<<<<
 *                 reader.writeShort(self.qualifiers[i])
 *             except IndexError:
 */
      }
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      goto __pyx_L40_try_end;
      __pyx_L33_error:;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "mmfparser/data/chunkloaders/objects.pyx":1110
 *             try:
 *                 reader.writeShort(self.qualifiers[i])
 *             except IndexError:             # <<<<<<<<<<<<<<
 *                 reader.writeShort(-1)
 *         reader.writeShort(extensionOffset)
 */
      __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_IndexError);
      if (__pyx_t_9) {
        __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_4, &__pyx_t_8) < 0) __PYX_ERR(0, 1110, __pyx_L35_except_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GOTREF(__pyx_t_8);

        /* "mmfparser/data/chunkloaders/objects.pyx":1111
 *                 reader.writeShort(self.qualifiers[i])
 *             except IndexError:
 *                 reader.writeShort(-1)             # <<<<<<<<<<<<<<
 *         reader.writeShort(extensionOffset)
 *         reader.writeShort(valuesOffset)
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1111, __pyx_L35_except_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_14 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_5 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_14, __pyx_int_neg_1) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_int_neg_1);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1111, __pyx_L35_except_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L34_exception_handled;
      }
      goto __pyx_L35_except_error;
      __pyx_L35_except_error:;

      /* "mmfparser/data/chunkloaders/objects.pyx":1108
 * 
 *         for i in xrange(8):
 *             try:             # <<<<<<<<<<<<<<
 *                 reader.writeShort(self.qualifiers[i])
 *             except IndexError:
 */
      __Pyx_XGIVEREF(__pyx_t_11);
      __Pyx_XGIVEREF(__pyx_t_12);
      __Pyx_XGIVEREF(__pyx_t_13);
      __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
      goto __pyx_L1_error;
      __pyx_L34_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_11);
      __Pyx_XGIVEREF(__pyx_t_12);
      __Pyx_XGIVEREF(__pyx_t_13);
      __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
      __pyx_L40_try_end:;
    }
  }

  /* "mmfparser/data/chunkloaders/objects.pyx":1112
 *             except IndexError:
 *                 reader.writeShort(-1)
 *         reader.writeShort(extensionOffset)             # <<<<<<<<<<<<<<
 *         reader.writeShort(valuesOffset)
 *         reader.writeShort(stringsOffset)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_extensionOffset); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1113
 *                 reader.writeShort(-1)
 *         reader.writeShort(extensionOffset)
 *         reader.writeShort(valuesOffset)             # <<<<<<<<<<<<<<
 *         reader.writeShort(stringsOffset)
 *         reader.writeShort(self.newFlags.getFlags(), True)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_valuesOffset); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1114
 *         reader.writeShort(extensionOffset)
 *         reader.writeShort(valuesOffset)
 *         reader.writeShort(stringsOffset)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.newFlags.getFlags(), True)
 *         reader.writeShort(self.preferences.getFlags(), True)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v_stringsOffset); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1115
 *         reader.writeShort(valuesOffset)
 *         reader.writeShort(stringsOffset)
 *         reader.writeShort(self.newFlags.getFlags(), True)             # <<<<<<<<<<<<<<
 *         reader.writeShort(self.preferences.getFlags(), True)
 *         reader.writeInt(self.identifier)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->newFlags, __pyx_n_s_getFlags); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_1, Py_True};
    __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1115, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_1, Py_True};
    __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1115, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else
  #endif
  {
    __pyx_t_7 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (__pyx_t_5) {
      __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_9, __pyx_t_1);
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_9, Py_True);
    __pyx_t_1 = 0;
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1116
 *         reader.writeShort(stringsOffset)
 *         reader.writeShort(self.newFlags.getFlags(), True)
 *         reader.writeShort(self.preferences.getFlags(), True)             # <<<<<<<<<<<<<<
 *         reader.writeInt(self.identifier)
 *         reader.writeColor(self.backColour)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeShort); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->preferences, __pyx_n_s_getFlags); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_9 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_9 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_t_7, Py_True};
    __pyx_t_8 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1116, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_t_7, Py_True};
    __pyx_t_8 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1116, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_1) {
      __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1); __pyx_t_1 = NULL;
    }
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_9, __pyx_t_7);
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_9, Py_True);
    __pyx_t_7 = 0;
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1116, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1117
 *         reader.writeShort(self.newFlags.getFlags(), True)
 *         reader.writeShort(self.preferences.getFlags(), True)
 *         reader.writeInt(self.identifier)             # <<<<<<<<<<<<<<
 *         reader.writeColor(self.backColour)
 *         reader.writeInt(fadeInOffset)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->identifier); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1118
 *         reader.writeShort(self.preferences.getFlags(), True)
 *         reader.writeInt(self.identifier)
 *         reader.writeColor(self.backColour)             # <<<<<<<<<<<<<<
 *         reader.writeInt(fadeInOffset)
 *         reader.writeInt(fadeOutOffset)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeColor); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_self->backColour) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_self->backColour);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1119
 *         reader.writeInt(self.identifier)
 *         reader.writeColor(self.backColour)
 *         reader.writeInt(fadeInOffset)             # <<<<<<<<<<<<<<
 *         reader.writeInt(fadeOutOffset)
 *         reader.writeReader(objectData)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_fadeInOffset); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1120
 *         reader.writeColor(self.backColour)
 *         reader.writeInt(fadeInOffset)
 *         reader.writeInt(fadeOutOffset)             # <<<<<<<<<<<<<<
 *         reader.writeReader(objectData)
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeInt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_v_fadeOutOffset); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1121
 *         reader.writeInt(fadeInOffset)
 *         reader.writeInt(fadeOutOffset)
 *         reader.writeReader(objectData)             # <<<<<<<<<<<<<<
 * 
 *     def isBackground(self):
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_reader), __pyx_n_s_writeReader); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_8 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, ((PyObject *)__pyx_v_objectData)) : __Pyx_PyObject_CallOneArg(__pyx_t_4, ((PyObject *)__pyx_v_objectData));
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1050
 *                 self.subApplication = self.new(SubApplication, reader)
 * 
 *     def write(self, ByteReader reader):             # <<<<<<<<<<<<<<
 *         movementsOffset = animationsOffset = counterOffset = \
 *         systemObjectOffset = extensionOffset = valuesOffset = \
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.write", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_objectData);
  __Pyx_XDECREF(__pyx_v_objectType);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":1123
 *         reader.writeReader(objectData)
 * 
 *     def isBackground(self):             # <<<<<<<<<<<<<<
 *         return self.flags['QuickDisplay'] or self.flags['Background']
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7isBackground(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7isBackground(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isBackground (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6isBackground(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6isBackground(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isBackground", 0);

  /* "mmfparser/data/chunkloaders/objects.pyx":1124
 * 
 *     def isBackground(self):
 *         return self.flags['QuickDisplay'] or self.flags['Background']             # <<<<<<<<<<<<<<
 * 
 * __all__ = ['AlterableValues', 'AlterableStrings', 'Backdrop', 'QuickBackdrop',
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->flags, __pyx_n_s_QuickDisplay); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1124, __pyx_L1_error)
  if (!__pyx_t_3) {
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_1 = __pyx_t_2;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->flags, __pyx_n_s_Background); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_t_1 = __pyx_t_2;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1123
 *         reader.writeReader(objectData)
 * 
 *     def isBackground(self):             # <<<<<<<<<<<<<<
 *         return self.flags['QuickDisplay'] or self.flags['Background']
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.isBackground", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":853
 * cdef class ObjectCommon(DataLoader):
 *     cdef public:
 *         object newFlags             # <<<<<<<<<<<<<<
 *         object flags
 *         object preferences
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->newFlags);
  __pyx_r = __pyx_v_self->newFlags;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->newFlags);
  __Pyx_DECREF(__pyx_v_self->newFlags);
  __pyx_v_self->newFlags = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->newFlags);
  __Pyx_DECREF(__pyx_v_self->newFlags);
  __pyx_v_self->newFlags = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":854
 *     cdef public:
 *         object newFlags
 *         object flags             # <<<<<<<<<<<<<<
 *         object preferences
 *         int version
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->flags);
  __pyx_r = __pyx_v_self->flags;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->flags);
  __Pyx_DECREF(__pyx_v_self->flags);
  __pyx_v_self->flags = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->flags);
  __Pyx_DECREF(__pyx_v_self->flags);
  __pyx_v_self->flags = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":855
 *         object newFlags
 *         object flags
 *         object preferences             # <<<<<<<<<<<<<<
 *         int version
 *         object movements
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->preferences);
  __pyx_r = __pyx_v_self->preferences;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->preferences);
  __Pyx_DECREF(__pyx_v_self->preferences);
  __pyx_v_self->preferences = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->preferences);
  __Pyx_DECREF(__pyx_v_self->preferences);
  __pyx_v_self->preferences = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":856
 *         object flags
 *         object preferences
 *         int version             # <<<<<<<<<<<<<<
 *         object movements
 *         object animations
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->version); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 856, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.version.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 856, __pyx_L1_error)
  __pyx_v_self->version = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.version.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":857
 *         object preferences
 *         int version
 *         object movements             # <<<<<<<<<<<<<<
 *         object animations
 *         list qualifiers
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->movements);
  __pyx_r = __pyx_v_self->movements;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->movements);
  __Pyx_DECREF(__pyx_v_self->movements);
  __pyx_v_self->movements = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->movements);
  __Pyx_DECREF(__pyx_v_self->movements);
  __pyx_v_self->movements = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":858
 *         int version
 *         object movements
 *         object animations             # <<<<<<<<<<<<<<
 *         list qualifiers
 *         int identifier
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->animations);
  __pyx_r = __pyx_v_self->animations;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->animations);
  __Pyx_DECREF(__pyx_v_self->animations);
  __pyx_v_self->animations = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->animations);
  __Pyx_DECREF(__pyx_v_self->animations);
  __pyx_v_self->animations = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":859
 *         object movements
 *         object animations
 *         list qualifiers             # <<<<<<<<<<<<<<
 *         int identifier
 *         tuple backColour
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->qualifiers);
  __pyx_r = __pyx_v_self->qualifiers;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 859, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->qualifiers);
  __Pyx_DECREF(__pyx_v_self->qualifiers);
  __pyx_v_self->qualifiers = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.qualifiers.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->qualifiers);
  __Pyx_DECREF(__pyx_v_self->qualifiers);
  __pyx_v_self->qualifiers = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":860
 *         object animations
 *         list qualifiers
 *         int identifier             # <<<<<<<<<<<<<<
 *         tuple backColour
 *         object values
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->identifier); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 860, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.identifier.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_value); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 860, __pyx_L1_error)
  __pyx_v_self->identifier = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.identifier.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":861
 *         list qualifiers
 *         int identifier
 *         tuple backColour             # <<<<<<<<<<<<<<
 *         object values
 *         object strings
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->backColour);
  __pyx_r = __pyx_v_self->backColour;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyTuple_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 861, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->backColour);
  __Pyx_DECREF(__pyx_v_self->backColour);
  __pyx_v_self->backColour = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.backColour.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->backColour);
  __Pyx_DECREF(__pyx_v_self->backColour);
  __pyx_v_self->backColour = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":862
 *         int identifier
 *         tuple backColour
 *         object values             # <<<<<<<<<<<<<<
 *         object strings
 *         object text
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->values);
  __pyx_r = __pyx_v_self->values;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->values);
  __Pyx_DECREF(__pyx_v_self->values);
  __pyx_v_self->values = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->values);
  __Pyx_DECREF(__pyx_v_self->values);
  __pyx_v_self->values = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":863
 *         tuple backColour
 *         object values
 *         object strings             # <<<<<<<<<<<<<<
 *         object text
 *         object subApplication
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->strings);
  __pyx_r = __pyx_v_self->strings;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->strings);
  __Pyx_DECREF(__pyx_v_self->strings);
  __pyx_v_self->strings = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->strings);
  __Pyx_DECREF(__pyx_v_self->strings);
  __pyx_v_self->strings = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":864
 *         object values
 *         object strings
 *         object text             # <<<<<<<<<<<<<<
 *         object subApplication
 *         object rtf
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->text);
  __pyx_r = __pyx_v_self->text;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->text);
  __Pyx_DECREF(__pyx_v_self->text);
  __pyx_v_self->text = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->text);
  __Pyx_DECREF(__pyx_v_self->text);
  __pyx_v_self->text = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":865
 *         object strings
 *         object text
 *         object subApplication             # <<<<<<<<<<<<<<
 *         object rtf
 *         object counters
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->subApplication);
  __pyx_r = __pyx_v_self->subApplication;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->subApplication);
  __Pyx_DECREF(__pyx_v_self->subApplication);
  __pyx_v_self->subApplication = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->subApplication);
  __Pyx_DECREF(__pyx_v_self->subApplication);
  __pyx_v_self->subApplication = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":866
 *         object text
 *         object subApplication
 *         object rtf             # <<<<<<<<<<<<<<
 *         object counters
 *         object counter
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->rtf);
  __pyx_r = __pyx_v_self->rtf;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->rtf);
  __Pyx_DECREF(__pyx_v_self->rtf);
  __pyx_v_self->rtf = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->rtf);
  __Pyx_DECREF(__pyx_v_self->rtf);
  __pyx_v_self->rtf = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":867
 *         object subApplication
 *         object rtf
 *         object counters             # <<<<<<<<<<<<<<
 *         object counter
 *         object extensionVersion
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->counters);
  __pyx_r = __pyx_v_self->counters;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->counters);
  __Pyx_DECREF(__pyx_v_self->counters);
  __pyx_v_self->counters = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->counters);
  __Pyx_DECREF(__pyx_v_self->counters);
  __pyx_v_self->counters = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":868
 *         object rtf
 *         object counters
 *         object counter             # <<<<<<<<<<<<<<
 *         object extensionVersion
 *         object extensionId
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->counter);
  __pyx_r = __pyx_v_self->counter;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->counter);
  __Pyx_DECREF(__pyx_v_self->counter);
  __pyx_v_self->counter = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->counter);
  __Pyx_DECREF(__pyx_v_self->counter);
  __pyx_v_self->counter = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":869
 *         object counters
 *         object counter
 *         object extensionVersion             # <<<<<<<<<<<<<<
 *         object extensionId
 *         object extensionPrivate
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->extensionVersion);
  __pyx_r = __pyx_v_self->extensionVersion;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->extensionVersion);
  __Pyx_DECREF(__pyx_v_self->extensionVersion);
  __pyx_v_self->extensionVersion = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->extensionVersion);
  __Pyx_DECREF(__pyx_v_self->extensionVersion);
  __pyx_v_self->extensionVersion = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":870
 *         object counter
 *         object extensionVersion
 *         object extensionId             # <<<<<<<<<<<<<<
 *         object extensionPrivate
 *         object extensionData
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->extensionId);
  __pyx_r = __pyx_v_self->extensionId;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->extensionId);
  __Pyx_DECREF(__pyx_v_self->extensionId);
  __pyx_v_self->extensionId = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->extensionId);
  __Pyx_DECREF(__pyx_v_self->extensionId);
  __pyx_v_self->extensionId = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":871
 *         object extensionVersion
 *         object extensionId
 *         object extensionPrivate             # <<<<<<<<<<<<<<
 *         object extensionData
 *         object fadeIn
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->extensionPrivate);
  __pyx_r = __pyx_v_self->extensionPrivate;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->extensionPrivate);
  __Pyx_DECREF(__pyx_v_self->extensionPrivate);
  __pyx_v_self->extensionPrivate = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->extensionPrivate);
  __Pyx_DECREF(__pyx_v_self->extensionPrivate);
  __pyx_v_self->extensionPrivate = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":872
 *         object extensionId
 *         object extensionPrivate
 *         object extensionData             # <<<<<<<<<<<<<<
 *         object fadeIn
 *         object fadeOut
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->extensionData);
  __pyx_r = __pyx_v_self->extensionData;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->extensionData);
  __Pyx_DECREF(__pyx_v_self->extensionData);
  __pyx_v_self->extensionData = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->extensionData);
  __Pyx_DECREF(__pyx_v_self->extensionData);
  __pyx_v_self->extensionData = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":873
 *         object extensionPrivate
 *         object extensionData
 *         object fadeIn             # <<<<<<<<<<<<<<
 *         object fadeOut
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->fadeIn);
  __pyx_r = __pyx_v_self->fadeIn;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->fadeIn);
  __Pyx_DECREF(__pyx_v_self->fadeIn);
  __pyx_v_self->fadeIn = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->fadeIn);
  __Pyx_DECREF(__pyx_v_self->fadeIn);
  __pyx_v_self->fadeIn = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "mmfparser/data/chunkloaders/objects.pyx":874
 *         object extensionData
 *         object fadeIn
 *         object fadeOut             # <<<<<<<<<<<<<<
 * 
 *     cpdef initialize(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut___get__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut___get__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->fadeOut);
  __pyx_r = __pyx_v_self->fadeOut;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_2__set__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_2__set__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->fadeOut);
  __Pyx_DECREF(__pyx_v_self->fadeOut);
  __pyx_v_self->fadeOut = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_4__del__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_4__del__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->fadeOut);
  __Pyx_DECREF(__pyx_v_self->fadeOut);
  __pyx_v_self->fadeOut = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8__reduce_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8__reduce_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.animations, self.backColour, self.counter, self.counters, self.extensionData, self.extensionId, self.extensionPrivate, self.extensionVersion, self.fadeIn, self.fadeOut, self.flags, self.identifier, self.movements, self.newFlags, self.parent, self.preferences, self.qualifiers, self.rtf, self.settings, self.strings, self.subApplication, self.text, self.values, self.version)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->identifier); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->version); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(24); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_self->animations);
  __Pyx_GIVEREF(__pyx_v_self->animations);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_self->animations);
  __Pyx_INCREF(__pyx_v_self->backColour);
  __Pyx_GIVEREF(__pyx_v_self->backColour);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_self->backColour);
  __Pyx_INCREF(__pyx_v_self->counter);
  __Pyx_GIVEREF(__pyx_v_self->counter);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_self->counter);
  __Pyx_INCREF(__pyx_v_self->counters);
  __Pyx_GIVEREF(__pyx_v_self->counters);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_v_self->counters);
  __Pyx_INCREF(__pyx_v_self->extensionData);
  __Pyx_GIVEREF(__pyx_v_self->extensionData);
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_v_self->extensionData);
  __Pyx_INCREF(__pyx_v_self->extensionId);
  __Pyx_GIVEREF(__pyx_v_self->extensionId);
  PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_v_self->extensionId);
  __Pyx_INCREF(__pyx_v_self->extensionPrivate);
  __Pyx_GIVEREF(__pyx_v_self->extensionPrivate);
  PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_v_self->extensionPrivate);
  __Pyx_INCREF(__pyx_v_self->extensionVersion);
  __Pyx_GIVEREF(__pyx_v_self->extensionVersion);
  PyTuple_SET_ITEM(__pyx_t_3, 7, __pyx_v_self->extensionVersion);
  __Pyx_INCREF(__pyx_v_self->fadeIn);
  __Pyx_GIVEREF(__pyx_v_self->fadeIn);
  PyTuple_SET_ITEM(__pyx_t_3, 8, __pyx_v_self->fadeIn);
  __Pyx_INCREF(__pyx_v_self->fadeOut);
  __Pyx_GIVEREF(__pyx_v_self->fadeOut);
  PyTuple_SET_ITEM(__pyx_t_3, 9, __pyx_v_self->fadeOut);
  __Pyx_INCREF(__pyx_v_self->flags);
  __Pyx_GIVEREF(__pyx_v_self->flags);
  PyTuple_SET_ITEM(__pyx_t_3, 10, __pyx_v_self->flags);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 11, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->movements);
  __Pyx_GIVEREF(__pyx_v_self->movements);
  PyTuple_SET_ITEM(__pyx_t_3, 12, __pyx_v_self->movements);
  __Pyx_INCREF(__pyx_v_self->newFlags);
  __Pyx_GIVEREF(__pyx_v_self->newFlags);
  PyTuple_SET_ITEM(__pyx_t_3, 13, __pyx_v_self->newFlags);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->__pyx_base.parent));
  PyTuple_SET_ITEM(__pyx_t_3, 14, ((PyObject *)__pyx_v_self->__pyx_base.parent));
  __Pyx_INCREF(__pyx_v_self->preferences);
  __Pyx_GIVEREF(__pyx_v_self->preferences);
  PyTuple_SET_ITEM(__pyx_t_3, 15, __pyx_v_self->preferences);
  __Pyx_INCREF(__pyx_v_self->qualifiers);
  __Pyx_GIVEREF(__pyx_v_self->qualifiers);
  PyTuple_SET_ITEM(__pyx_t_3, 16, __pyx_v_self->qualifiers);
  __Pyx_INCREF(__pyx_v_self->rtf);
  __Pyx_GIVEREF(__pyx_v_self->rtf);
  PyTuple_SET_ITEM(__pyx_t_3, 17, __pyx_v_self->rtf);
  __Pyx_INCREF(__pyx_v_self->__pyx_base.settings);
  __Pyx_GIVEREF(__pyx_v_self->__pyx_base.settings);
  PyTuple_SET_ITEM(__pyx_t_3, 18, __pyx_v_self->__pyx_base.settings);
  __Pyx_INCREF(__pyx_v_self->strings);
  __Pyx_GIVEREF(__pyx_v_self->strings);
  PyTuple_SET_ITEM(__pyx_t_3, 19, __pyx_v_self->strings);
  __Pyx_INCREF(__pyx_v_self->subApplication);
  __Pyx_GIVEREF(__pyx_v_self->subApplication);
  PyTuple_SET_ITEM(__pyx_t_3, 20, __pyx_v_self->subApplication);
  __Pyx_INCREF(__pyx_v_self->text);
  __Pyx_GIVEREF(__pyx_v_self->text);
  PyTuple_SET_ITEM(__pyx_t_3, 21, __pyx_v_self->text);
  __Pyx_INCREF(__pyx_v_self->values);
  __Pyx_GIVEREF(__pyx_v_self->values);
  PyTuple_SET_ITEM(__pyx_t_3, 22, __pyx_v_self->values);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 23, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.animations, self.backColour, self.counter, self.counters, self.extensionData, self.extensionId, self.extensionPrivate, self.extensionVersion, self.fadeIn, self.fadeOut, self.flags, self.identifier, self.movements, self.newFlags, self.parent, self.preferences, self.qualifiers, self.rtf, self.settings, self.strings, self.subApplication, self.text, self.values, self.version)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_3 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v__dict = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "(tree fragment)":7
 *     state = (self.animations, self.backColour, self.counter, self.counters, self.extensionData, self.extensionId, self.extensionPrivate, self.extensionVersion, self.fadeIn, self.fadeOut, self.flags, self.identifier, self.movements, self.newFlags, self.parent, self.preferences, self.qualifiers, self.rtf, self.settings, self.strings, self.subApplication, self.text, self.values, self.version)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_4 = (__pyx_v__dict != Py_None);
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v__dict);
    __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.animations is not None or self.backColour is not None or self.counter is not None or self.counters is not None or self.extensionData is not None or self.extensionId is not None or self.extensionPrivate is not None or self.extensionVersion is not None or self.fadeIn is not None or self.fadeOut is not None or self.flags is not None or self.movements is not None or self.newFlags is not None or self.parent is not None or self.preferences is not None or self.qualifiers is not None or self.rtf is not None or self.settings is not None or self.strings is not None or self.subApplication is not None or self.text is not None or self.values is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.animations, self.backColour, self.counter, self.counters, self.extensionData, self.extensionId, self.extensionPrivate, self.extensionVersion, self.fadeIn, self.fadeOut, self.flags, self.identifier, self.movements, self.newFlags, self.parent, self.preferences, self.qualifiers, self.rtf, self.settings, self.strings, self.subApplication, self.text, self.values, self.version)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.animations is not None or self.backColour is not None or self.counter is not None or self.counters is not None or self.extensionData is not None or self.extensionId is not None or self.extensionPrivate is not None or self.extensionVersion is not None or self.fadeIn is not None or self.fadeOut is not None or self.flags is not None or self.movements is not None or self.newFlags is not None or self.parent is not None or self.preferences is not None or self.qualifiers is not None or self.rtf is not None or self.settings is not None or self.strings is not None or self.subApplication is not None or self.text is not None or self.values is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, None), state
 */
  /*else*/ {
    __pyx_t_4 = (__pyx_v_self->animations != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->backColour != ((PyObject*)Py_None));
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->counter != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->counters != Py_None);
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->extensionData != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->extensionId != Py_None);
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->extensionPrivate != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->extensionVersion != Py_None);
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->fadeIn != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->fadeOut != Py_None);
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->flags != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->movements != Py_None);
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->newFlags != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (((PyObject *)__pyx_v_self->__pyx_base.parent) != Py_None);
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->preferences != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->qualifiers != ((PyObject*)Py_None));
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->rtf != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->__pyx_base.settings != ((PyObject*)Py_None));
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->strings != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->subApplication != Py_None);
    __pyx_t_4 = (__pyx_t_6 != 0);
    if (!__pyx_t_4) {
    } else {
      __pyx_t_5 = __pyx_t_4;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_4 = (__pyx_v_self->text != Py_None);
    __pyx_t_6 = (__pyx_t_4 != 0);
    if (!__pyx_t_6) {
    } else {
      __pyx_t_5 = __pyx_t_6;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_6 = (__pyx_v_self->values != Py_None);
    __pyx_t_4 = (__pyx_t_6 != 0);
    __pyx_t_5 = __pyx_t_4;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_5;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.animations is not None or self.backColour is not None or self.counter is not None or self.counters is not None or self.extensionData is not None or self.extensionId is not None or self.extensionPrivate is not None or self.extensionVersion is not None or self.fadeIn is not None or self.fadeOut is not None or self.flags is not None or self.movements is not None or self.newFlags is not None or self.parent is not None or self.preferences is not None or self.qualifiers is not None or self.rtf is not None or self.settings is not None or self.strings is not None or self.subApplication is not None or self.text is not None or self.values is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, None), state
 *     else:
 */
  __pyx_t_5 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_5) {

    /* "(tree fragment)":13
 *         use_setstate = self.animations is not None or self.backColour is not None or self.counter is not None or self.counters is not None or self.extensionData is not None or self.extensionId is not None or self.extensionPrivate is not None or self.extensionVersion is not None or self.fadeIn is not None or self.fadeOut is not None or self.flags is not None or self.movements is not None or self.newFlags is not None or self.parent is not None or self.preferences is not None or self.qualifiers is not None or self.rtf is not None or self.settings is not None or self.strings is not None or self.subApplication is not None or self.text is not None or self.values is not None
 *     if use_setstate:
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_pyx_unpickle_ObjectCommon); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_64137841);
    __Pyx_GIVEREF(__pyx_int_64137841);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_64137841);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_3, 2, Py_None);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.animations is not None or self.backColour is not None or self.counter is not None or self.counters is not None or self.extensionData is not None or self.extensionId is not None or self.extensionPrivate is not None or self.extensionVersion is not None or self.fadeIn is not None or self.fadeOut is not None or self.flags is not None or self.movements is not None or self.newFlags is not None or self.parent is not None or self.preferences is not None or self.qualifiers is not None or self.rtf is not None or self.settings is not None or self.strings is not None or self.subApplication is not None or self.text is not None or self.values is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, None), state
 *     else:
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_ObjectCommon__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_pyx_unpickle_ObjectCommon); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_64137841);
    __Pyx_GIVEREF(__pyx_int_64137841);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_64137841);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_state);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __pyx_t_1 = 0;
    __pyx_t_3 = 0;
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_ObjectCommon__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10__setstate_cython__(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10__setstate_cython__(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_ObjectCommon__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_ObjectCommon__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_ObjectCommon, (type(self), 0x3d2aa71, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_ObjectCommon__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.ObjectCommon.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_AlterableValues(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_3__pyx_unpickle_AlterableValues(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_3__pyx_unpickle_AlterableValues = {"__pyx_unpickle_AlterableValues", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_3__pyx_unpickle_AlterableValues, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_3__pyx_unpickle_AlterableValues(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_AlterableValues (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AlterableValues", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AlterableValues", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_AlterableValues") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AlterableValues", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AlterableValues", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_2__pyx_unpickle_AlterableValues(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_2__pyx_unpickle_AlterableValues(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_AlterableValues", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xac3d087, 0xc36e81c, 0xef027a8):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__2, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xac3d087, 0xc36e81c, 0xef027a8):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AlterableValues.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xac3d087, 0xc36e81c, 0xef027a8):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = AlterableValues.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xac3d087, 0xc36e81c, 0xef027a8):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AlterableValues.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AlterableValues__set_state(<AlterableValues> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableValues), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AlterableValues.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_AlterableValues__set_state(<AlterableValues> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = AlterableValues.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AlterableValues__set_state(<AlterableValues> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_AlterableValues__set_state(AlterableValues __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AlterableValues__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AlterableValues.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_AlterableValues__set_state(<AlterableValues> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AlterableValues__set_state(<AlterableValues> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_AlterableValues__set_state(AlterableValues __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_AlterableValues(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AlterableValues", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_AlterableValues__set_state(<AlterableValues> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AlterableValues__set_state(AlterableValues __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AlterableValues__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_AlterableValues__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_AlterableValues__set_state(AlterableValues __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[3])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->items);
  __Pyx_DECREF(__pyx_v___pyx_result->items);
  __pyx_v___pyx_result->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_AlterableValues__set_state(AlterableValues __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[3])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_4 = ((__pyx_t_3 > 3) != 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = (__pyx_t_4 != 0);
  __pyx_t_2 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[3])             # <<<<<<<<<<<<<<
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_AlterableValues__set_state(AlterableValues __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[3])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_AlterableValues__set_state(<AlterableValues> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AlterableValues__set_state(AlterableValues __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AlterableValues__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_AlterableStrings(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5__pyx_unpickle_AlterableStrings(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_5__pyx_unpickle_AlterableStrings = {"__pyx_unpickle_AlterableStrings", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5__pyx_unpickle_AlterableStrings, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5__pyx_unpickle_AlterableStrings(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_AlterableStrings (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AlterableStrings", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AlterableStrings", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_AlterableStrings") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AlterableStrings", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AlterableStrings", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4__pyx_unpickle_AlterableStrings(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_4__pyx_unpickle_AlterableStrings(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_AlterableStrings", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xac3d087, 0xc36e81c, 0xef027a8):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__2, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xac3d087, 0xc36e81c, 0xef027a8):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AlterableStrings.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xac3d087, 0xc36e81c, 0xef027a8):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = AlterableStrings.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xac3d087, 0xc36e81c, 0xef027a8):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AlterableStrings.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AlterableStrings__set_state(<AlterableStrings> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AlterableStrings.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_AlterableStrings__set_state(<AlterableStrings> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = AlterableStrings.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AlterableStrings__set_state(<AlterableStrings> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_AlterableStrings__set_state(AlterableStrings __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AlterableStrings__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AlterableStrings.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_AlterableStrings__set_state(<AlterableStrings> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AlterableStrings__set_state(<AlterableStrings> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_AlterableStrings__set_state(AlterableStrings __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_AlterableStrings(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AlterableStrings", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_AlterableStrings__set_state(<AlterableStrings> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AlterableStrings__set_state(AlterableStrings __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AlterableStrings__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_AlterableStrings__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_AlterableStrings__set_state(AlterableStrings __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[3])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->items);
  __Pyx_DECREF(__pyx_v___pyx_result->items);
  __pyx_v___pyx_result->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_AlterableStrings__set_state(AlterableStrings __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[3])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_4 = ((__pyx_t_3 > 3) != 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = (__pyx_t_4 != 0);
  __pyx_t_2 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[3])             # <<<<<<<<<<<<<<
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_AlterableStrings__set_state(AlterableStrings __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[3])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_AlterableStrings__set_state(<AlterableStrings> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AlterableStrings__set_state(AlterableStrings __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AlterableStrings__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_Shape(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7__pyx_unpickle_Shape(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_7__pyx_unpickle_Shape = {"__pyx_unpickle_Shape", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7__pyx_unpickle_Shape, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7__pyx_unpickle_Shape(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_Shape (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Shape", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Shape", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_Shape") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Shape", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Shape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_6__pyx_unpickle_Shape(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_6__pyx_unpickle_Shape(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Shape", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xd172a1b, 0x9ec7f4f, 0xe670cae):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd172a1b, 0x9ec7f4f, 0xe670cae) = (borderColor, borderSize, color1, color2, fillType, gradientFlags, image, lineFlags, parent, settings, shape))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__3, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xd172a1b, 0x9ec7f4f, 0xe670cae):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd172a1b, 0x9ec7f4f, 0xe670cae) = (borderColor, borderSize, color1, color2, fillType, gradientFlags, image, lineFlags, parent, settings, shape))" % __pyx_checksum)
 *     __pyx_result = Shape.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xd172a1b, 0x9ec7f4f, 0xe670cae):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd172a1b, 0x9ec7f4f, 0xe670cae) = (borderColor, borderSize, color1, color2, fillType, gradientFlags, image, lineFlags, parent, settings, shape))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = Shape.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_2, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xd172a1b, 0x9ec7f4f, 0xe670cae):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd172a1b, 0x9ec7f4f, 0xe670cae) = (borderColor, borderSize, color1, color2, fillType, gradientFlags, image, lineFlags, parent, settings, shape))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd172a1b, 0x9ec7f4f, 0xe670cae) = (borderColor, borderSize, color1, color2, fillType, gradientFlags, image, lineFlags, parent, settings, shape))" % __pyx_checksum)
 *     __pyx_result = Shape.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Shape__set_state(<Shape> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd172a1b, 0x9ec7f4f, 0xe670cae) = (borderColor, borderSize, color1, color2, fillType, gradientFlags, image, lineFlags, parent, settings, shape))" % __pyx_checksum)
 *     __pyx_result = Shape.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Shape__set_state(<Shape> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = Shape.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Shape__set_state(<Shape> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_Shape__set_state(Shape __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Shape__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd172a1b, 0x9ec7f4f, 0xe670cae) = (borderColor, borderSize, color1, color2, fillType, gradientFlags, image, lineFlags, parent, settings, shape))" % __pyx_checksum)
 *     __pyx_result = Shape.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Shape__set_state(<Shape> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Shape__set_state(<Shape> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_Shape__set_state(Shape __pyx_result, tuple __pyx_state):
 *     __pyx_result.borderColor = __pyx_state[0]; __pyx_result.borderSize = __pyx_state[1]; __pyx_result.color1 = __pyx_state[2]; __pyx_result.color2 = __pyx_state[3]; __pyx_result.fillType = __pyx_state[4]; __pyx_result.gradientFlags = __pyx_state[5]; __pyx_result.image = __pyx_state[6]; __pyx_result.lineFlags = __pyx_state[7]; __pyx_result.parent = __pyx_state[8]; __pyx_result.settings = __pyx_state[9]; __pyx_result.shape = __pyx_state[10]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Shape(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Shape", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_Shape__set_state(<Shape> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Shape__set_state(Shape __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.borderColor = __pyx_state[0]; __pyx_result.borderSize = __pyx_state[1]; __pyx_result.color1 = __pyx_state[2]; __pyx_result.color2 = __pyx_state[3]; __pyx_result.fillType = __pyx_state[4]; __pyx_result.gradientFlags = __pyx_state[5]; __pyx_result.image = __pyx_state[6]; __pyx_result.lineFlags = __pyx_state[7]; __pyx_result.parent = __pyx_state[8]; __pyx_result.settings = __pyx_state[9]; __pyx_result.shape = __pyx_state[10]
 *     if len(__pyx_state) > 11 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Shape__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Shape__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_Shape__set_state(Shape __pyx_result, tuple __pyx_state):
 *     __pyx_result.borderColor = __pyx_state[0]; __pyx_result.borderSize = __pyx_state[1]; __pyx_result.color1 = __pyx_state[2]; __pyx_result.color2 = __pyx_state[3]; __pyx_result.fillType = __pyx_state[4]; __pyx_result.gradientFlags = __pyx_state[5]; __pyx_result.image = __pyx_state[6]; __pyx_result.lineFlags = __pyx_state[7]; __pyx_result.parent = __pyx_state[8]; __pyx_result.settings = __pyx_state[9]; __pyx_result.shape = __pyx_state[10]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 11 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[11])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->borderColor);
  __Pyx_DECREF(__pyx_v___pyx_result->borderColor);
  __pyx_v___pyx_result->borderColor = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->borderSize = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->color1);
  __Pyx_DECREF(__pyx_v___pyx_result->color1);
  __pyx_v___pyx_result->color1 = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->color2);
  __Pyx_DECREF(__pyx_v___pyx_result->color2);
  __pyx_v___pyx_result->color2 = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->fillType = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->gradientFlags = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->image = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->lineFlags);
  __Pyx_DECREF(__pyx_v___pyx_result->lineFlags);
  __pyx_v___pyx_result->lineFlags = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 10, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->shape = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_Shape__set_state(Shape __pyx_result, tuple __pyx_state):
 *     __pyx_result.borderColor = __pyx_state[0]; __pyx_result.borderSize = __pyx_state[1]; __pyx_result.color1 = __pyx_state[2]; __pyx_result.color2 = __pyx_state[3]; __pyx_result.fillType = __pyx_state[4]; __pyx_result.gradientFlags = __pyx_state[5]; __pyx_result.image = __pyx_state[6]; __pyx_result.lineFlags = __pyx_state[7]; __pyx_result.parent = __pyx_state[8]; __pyx_result.settings = __pyx_state[9]; __pyx_result.shape = __pyx_state[10]
 *     if len(__pyx_state) > 11 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[11])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 11) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.borderColor = __pyx_state[0]; __pyx_result.borderSize = __pyx_state[1]; __pyx_result.color1 = __pyx_state[2]; __pyx_result.color2 = __pyx_state[3]; __pyx_result.fillType = __pyx_state[4]; __pyx_result.gradientFlags = __pyx_state[5]; __pyx_result.image = __pyx_state[6]; __pyx_result.lineFlags = __pyx_state[7]; __pyx_result.parent = __pyx_state[8]; __pyx_result.settings = __pyx_state[9]; __pyx_result.shape = __pyx_state[10]
 *     if len(__pyx_state) > 11 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[11])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 11, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_Shape__set_state(Shape __pyx_result, tuple __pyx_state):
 *     __pyx_result.borderColor = __pyx_state[0]; __pyx_result.borderSize = __pyx_state[1]; __pyx_result.color1 = __pyx_state[2]; __pyx_result.color2 = __pyx_state[3]; __pyx_result.fillType = __pyx_state[4]; __pyx_result.gradientFlags = __pyx_state[5]; __pyx_result.image = __pyx_state[6]; __pyx_result.lineFlags = __pyx_state[7]; __pyx_result.parent = __pyx_state[8]; __pyx_result.settings = __pyx_state[9]; __pyx_result.shape = __pyx_state[10]
 *     if len(__pyx_state) > 11 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[11])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_Shape__set_state(<Shape> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Shape__set_state(Shape __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.borderColor = __pyx_state[0]; __pyx_result.borderSize = __pyx_state[1]; __pyx_result.color1 = __pyx_state[2]; __pyx_result.color2 = __pyx_state[3]; __pyx_result.fillType = __pyx_state[4]; __pyx_result.gradientFlags = __pyx_state[5]; __pyx_result.image = __pyx_state[6]; __pyx_result.lineFlags = __pyx_state[7]; __pyx_result.parent = __pyx_state[8]; __pyx_result.settings = __pyx_state[9]; __pyx_result.shape = __pyx_state[10]
 *     if len(__pyx_state) > 11 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Shape__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle__Background(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9__pyx_unpickle__Background(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_9__pyx_unpickle__Background = {"__pyx_unpickle__Background", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9__pyx_unpickle__Background, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9__pyx_unpickle__Background(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle__Background (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle__Background", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle__Background", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle__Background") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle__Background", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle__Background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8__pyx_unpickle__Background(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_8__pyx_unpickle__Background(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle__Background", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xb6a31ef, 0xa020ac5, 0xf3ec034):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb6a31ef, 0xa020ac5, 0xf3ec034) = (parent, settings))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__4, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xb6a31ef, 0xa020ac5, 0xf3ec034):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb6a31ef, 0xa020ac5, 0xf3ec034) = (parent, settings))" % __pyx_checksum)
 *     __pyx_result = _Background.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xb6a31ef, 0xa020ac5, 0xf3ec034):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb6a31ef, 0xa020ac5, 0xf3ec034) = (parent, settings))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = _Background.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xb6a31ef, 0xa020ac5, 0xf3ec034):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb6a31ef, 0xa020ac5, 0xf3ec034) = (parent, settings))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb6a31ef, 0xa020ac5, 0xf3ec034) = (parent, settings))" % __pyx_checksum)
 *     __pyx_result = _Background.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle__Background__set_state(<_Background> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects__Background), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb6a31ef, 0xa020ac5, 0xf3ec034) = (parent, settings))" % __pyx_checksum)
 *     __pyx_result = _Background.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle__Background__set_state(<_Background> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = _Background.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle__Background__set_state(<_Background> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle__Background__set_state(_Background __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle__Background__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb6a31ef, 0xa020ac5, 0xf3ec034) = (parent, settings))" % __pyx_checksum)
 *     __pyx_result = _Background.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle__Background__set_state(<_Background> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle__Background__set_state(<_Background> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle__Background__set_state(_Background __pyx_result, tuple __pyx_state):
 *     __pyx_result.parent = __pyx_state[0]; __pyx_result.settings = __pyx_state[1]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle__Background(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle__Background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle__Background__set_state(<_Background> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle__Background__set_state(_Background __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.parent = __pyx_state[0]; __pyx_result.settings = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle__Background__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle__Background__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle__Background__set_state(_Background __pyx_result, tuple __pyx_state):
 *     __pyx_result.parent = __pyx_state[0]; __pyx_result.settings = __pyx_state[1]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[2])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle__Background__set_state(_Background __pyx_result, tuple __pyx_state):
 *     __pyx_result.parent = __pyx_state[0]; __pyx_result.settings = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[2])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_4 = ((__pyx_t_3 > 2) != 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = (__pyx_t_4 != 0);
  __pyx_t_2 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result.parent = __pyx_state[0]; __pyx_result.settings = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[2])             # <<<<<<<<<<<<<<
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle__Background__set_state(_Background __pyx_result, tuple __pyx_state):
 *     __pyx_result.parent = __pyx_state[0]; __pyx_result.settings = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[2])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle__Background__set_state(<_Background> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle__Background__set_state(_Background __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.parent = __pyx_state[0]; __pyx_result.settings = __pyx_state[1]
 *     if len(__pyx_state) > 2 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle__Background__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_QuickBackdrop(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11__pyx_unpickle_QuickBackdrop(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_11__pyx_unpickle_QuickBackdrop = {"__pyx_unpickle_QuickBackdrop", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11__pyx_unpickle_QuickBackdrop, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11__pyx_unpickle_QuickBackdrop(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_QuickBackdrop (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_QuickBackdrop", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_QuickBackdrop", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_QuickBackdrop") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_QuickBackdrop", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_QuickBackdrop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_10__pyx_unpickle_QuickBackdrop(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_10__pyx_unpickle_QuickBackdrop(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_QuickBackdrop", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x1b1299c, 0x2dd4423, 0x1151f38):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1b1299c, 0x2dd4423, 0x1151f38) = (collisionMode, height, obstacleType, parent, settings, shape, width))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__5, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x1b1299c, 0x2dd4423, 0x1151f38):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1b1299c, 0x2dd4423, 0x1151f38) = (collisionMode, height, obstacleType, parent, settings, shape, width))" % __pyx_checksum)
 *     __pyx_result = QuickBackdrop.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x1b1299c, 0x2dd4423, 0x1151f38):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1b1299c, 0x2dd4423, 0x1151f38) = (collisionMode, height, obstacleType, parent, settings, shape, width))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = QuickBackdrop.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_4, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x1b1299c, 0x2dd4423, 0x1151f38):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1b1299c, 0x2dd4423, 0x1151f38) = (collisionMode, height, obstacleType, parent, settings, shape, width))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1b1299c, 0x2dd4423, 0x1151f38) = (collisionMode, height, obstacleType, parent, settings, shape, width))" % __pyx_checksum)
 *     __pyx_result = QuickBackdrop.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_QuickBackdrop__set_state(<QuickBackdrop> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1b1299c, 0x2dd4423, 0x1151f38) = (collisionMode, height, obstacleType, parent, settings, shape, width))" % __pyx_checksum)
 *     __pyx_result = QuickBackdrop.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_QuickBackdrop__set_state(<QuickBackdrop> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = QuickBackdrop.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_QuickBackdrop__set_state(<QuickBackdrop> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_QuickBackdrop__set_state(QuickBackdrop __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_QuickBackdrop__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1b1299c, 0x2dd4423, 0x1151f38) = (collisionMode, height, obstacleType, parent, settings, shape, width))" % __pyx_checksum)
 *     __pyx_result = QuickBackdrop.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_QuickBackdrop__set_state(<QuickBackdrop> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_QuickBackdrop__set_state(<QuickBackdrop> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_QuickBackdrop__set_state(QuickBackdrop __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.obstacleType = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.shape = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_QuickBackdrop(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_QuickBackdrop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_QuickBackdrop__set_state(<QuickBackdrop> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_QuickBackdrop__set_state(QuickBackdrop __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.obstacleType = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.shape = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_QuickBackdrop__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_QuickBackdrop__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_QuickBackdrop__set_state(QuickBackdrop __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.obstacleType = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.shape = __pyx_state[5]; __pyx_result.width = __pyx_state[6]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[7])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->collisionMode = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->height = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->obstacleType = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->shape);
  __Pyx_DECREF(__pyx_v___pyx_result->shape);
  __pyx_v___pyx_result->shape = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->width = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_QuickBackdrop__set_state(QuickBackdrop __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.obstacleType = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.shape = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[7])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 7) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.obstacleType = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.shape = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[7])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_QuickBackdrop__set_state(QuickBackdrop __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.obstacleType = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.shape = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[7])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_QuickBackdrop__set_state(<QuickBackdrop> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_QuickBackdrop__set_state(QuickBackdrop __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.obstacleType = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.shape = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_QuickBackdrop__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_Backdrop(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13__pyx_unpickle_Backdrop(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_13__pyx_unpickle_Backdrop = {"__pyx_unpickle_Backdrop", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13__pyx_unpickle_Backdrop, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13__pyx_unpickle_Backdrop(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_Backdrop (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Backdrop", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Backdrop", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_Backdrop") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Backdrop", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Backdrop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12__pyx_unpickle_Backdrop(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_12__pyx_unpickle_Backdrop(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Backdrop", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x96fb5c9, 0x74c6bf0, 0x03e2edf):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x96fb5c9, 0x74c6bf0, 0x03e2edf) = (collisionMode, height, image, obstacleType, parent, settings, width))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__6, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x96fb5c9, 0x74c6bf0, 0x03e2edf):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x96fb5c9, 0x74c6bf0, 0x03e2edf) = (collisionMode, height, image, obstacleType, parent, settings, width))" % __pyx_checksum)
 *     __pyx_result = Backdrop.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x96fb5c9, 0x74c6bf0, 0x03e2edf):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x96fb5c9, 0x74c6bf0, 0x03e2edf) = (collisionMode, height, image, obstacleType, parent, settings, width))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = Backdrop.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_5, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x96fb5c9, 0x74c6bf0, 0x03e2edf):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x96fb5c9, 0x74c6bf0, 0x03e2edf) = (collisionMode, height, image, obstacleType, parent, settings, width))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x96fb5c9, 0x74c6bf0, 0x03e2edf) = (collisionMode, height, image, obstacleType, parent, settings, width))" % __pyx_checksum)
 *     __pyx_result = Backdrop.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Backdrop__set_state(<Backdrop> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Backdrop), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x96fb5c9, 0x74c6bf0, 0x03e2edf) = (collisionMode, height, image, obstacleType, parent, settings, width))" % __pyx_checksum)
 *     __pyx_result = Backdrop.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Backdrop__set_state(<Backdrop> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = Backdrop.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Backdrop__set_state(<Backdrop> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_Backdrop__set_state(Backdrop __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Backdrop__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x96fb5c9, 0x74c6bf0, 0x03e2edf) = (collisionMode, height, image, obstacleType, parent, settings, width))" % __pyx_checksum)
 *     __pyx_result = Backdrop.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Backdrop__set_state(<Backdrop> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Backdrop__set_state(<Backdrop> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_Backdrop__set_state(Backdrop __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.image = __pyx_state[2]; __pyx_result.obstacleType = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Backdrop(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Backdrop", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_Backdrop__set_state(<Backdrop> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Backdrop__set_state(Backdrop __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.image = __pyx_state[2]; __pyx_result.obstacleType = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Backdrop__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Backdrop__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_Backdrop__set_state(Backdrop __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.image = __pyx_state[2]; __pyx_result.obstacleType = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.width = __pyx_state[6]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[7])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->collisionMode = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->height = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->image = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->obstacleType = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->width = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_Backdrop__set_state(Backdrop __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.image = __pyx_state[2]; __pyx_result.obstacleType = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[7])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 7) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.image = __pyx_state[2]; __pyx_result.obstacleType = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[7])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_Backdrop__set_state(Backdrop __pyx_result, tuple __pyx_state):
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.image = __pyx_state[2]; __pyx_result.obstacleType = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[7])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_Backdrop__set_state(<Backdrop> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Backdrop__set_state(Backdrop __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.image = __pyx_state[2]; __pyx_result.obstacleType = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Backdrop__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_AnimationDirection(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15__pyx_unpickle_AnimationDirection(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_15__pyx_unpickle_AnimationDirection = {"__pyx_unpickle_AnimationDirection", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15__pyx_unpickle_AnimationDirection, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15__pyx_unpickle_AnimationDirection(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_AnimationDirection (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AnimationDirection", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AnimationDirection", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_AnimationDirection") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AnimationDirection", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AnimationDirection", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14__pyx_unpickle_AnimationDirection(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_14__pyx_unpickle_AnimationDirection(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_AnimationDirection", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x495eeed, 0x2875f86, 0xd569d74):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x495eeed, 0x2875f86, 0xd569d74) = (backTo, frames, hasSingle, maxSpeed, minSpeed, parent, repeat, settings))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__7, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x495eeed, 0x2875f86, 0xd569d74):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x495eeed, 0x2875f86, 0xd569d74) = (backTo, frames, hasSingle, maxSpeed, minSpeed, parent, repeat, settings))" % __pyx_checksum)
 *     __pyx_result = AnimationDirection.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x495eeed, 0x2875f86, 0xd569d74):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x495eeed, 0x2875f86, 0xd569d74) = (backTo, frames, hasSingle, maxSpeed, minSpeed, parent, repeat, settings))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = AnimationDirection.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_6, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x495eeed, 0x2875f86, 0xd569d74):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x495eeed, 0x2875f86, 0xd569d74) = (backTo, frames, hasSingle, maxSpeed, minSpeed, parent, repeat, settings))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x495eeed, 0x2875f86, 0xd569d74) = (backTo, frames, hasSingle, maxSpeed, minSpeed, parent, repeat, settings))" % __pyx_checksum)
 *     __pyx_result = AnimationDirection.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AnimationDirection__set_state(<AnimationDirection> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x495eeed, 0x2875f86, 0xd569d74) = (backTo, frames, hasSingle, maxSpeed, minSpeed, parent, repeat, settings))" % __pyx_checksum)
 *     __pyx_result = AnimationDirection.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_AnimationDirection__set_state(<AnimationDirection> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = AnimationDirection.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AnimationDirection__set_state(<AnimationDirection> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationDirection__set_state(AnimationDirection __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AnimationDirection__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x495eeed, 0x2875f86, 0xd569d74) = (backTo, frames, hasSingle, maxSpeed, minSpeed, parent, repeat, settings))" % __pyx_checksum)
 *     __pyx_result = AnimationDirection.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_AnimationDirection__set_state(<AnimationDirection> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AnimationDirection__set_state(<AnimationDirection> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_AnimationDirection__set_state(AnimationDirection __pyx_result, tuple __pyx_state):
 *     __pyx_result.backTo = __pyx_state[0]; __pyx_result.frames = __pyx_state[1]; __pyx_result.hasSingle = __pyx_state[2]; __pyx_result.maxSpeed = __pyx_state[3]; __pyx_result.minSpeed = __pyx_state[4]; __pyx_result.parent = __pyx_state[5]; __pyx_result.repeat = __pyx_state[6]; __pyx_result.settings = __pyx_state[7]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_AnimationDirection(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AnimationDirection", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_AnimationDirection__set_state(<AnimationDirection> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationDirection__set_state(AnimationDirection __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.backTo = __pyx_state[0]; __pyx_result.frames = __pyx_state[1]; __pyx_result.hasSingle = __pyx_state[2]; __pyx_result.maxSpeed = __pyx_state[3]; __pyx_result.minSpeed = __pyx_state[4]; __pyx_result.parent = __pyx_state[5]; __pyx_result.repeat = __pyx_state[6]; __pyx_result.settings = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AnimationDirection__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_AnimationDirection__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationDirection__set_state(AnimationDirection __pyx_result, tuple __pyx_state):
 *     __pyx_result.backTo = __pyx_state[0]; __pyx_result.frames = __pyx_state[1]; __pyx_result.hasSingle = __pyx_state[2]; __pyx_result.maxSpeed = __pyx_state[3]; __pyx_result.minSpeed = __pyx_state[4]; __pyx_result.parent = __pyx_state[5]; __pyx_result.repeat = __pyx_state[6]; __pyx_result.settings = __pyx_state[7]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->backTo = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->frames);
  __Pyx_DECREF(__pyx_v___pyx_result->frames);
  __pyx_v___pyx_result->frames = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->hasSingle = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->maxSpeed = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->minSpeed = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->repeat = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_AnimationDirection__set_state(AnimationDirection __pyx_result, tuple __pyx_state):
 *     __pyx_result.backTo = __pyx_state[0]; __pyx_result.frames = __pyx_state[1]; __pyx_result.hasSingle = __pyx_state[2]; __pyx_result.maxSpeed = __pyx_state[3]; __pyx_result.minSpeed = __pyx_state[4]; __pyx_result.parent = __pyx_state[5]; __pyx_result.repeat = __pyx_state[6]; __pyx_result.settings = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 8) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.backTo = __pyx_state[0]; __pyx_result.frames = __pyx_state[1]; __pyx_result.hasSingle = __pyx_state[2]; __pyx_result.maxSpeed = __pyx_state[3]; __pyx_result.minSpeed = __pyx_state[4]; __pyx_result.parent = __pyx_state[5]; __pyx_result.repeat = __pyx_state[6]; __pyx_result.settings = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_AnimationDirection__set_state(AnimationDirection __pyx_result, tuple __pyx_state):
 *     __pyx_result.backTo = __pyx_state[0]; __pyx_result.frames = __pyx_state[1]; __pyx_result.hasSingle = __pyx_state[2]; __pyx_result.maxSpeed = __pyx_state[3]; __pyx_result.minSpeed = __pyx_state[4]; __pyx_result.parent = __pyx_state[5]; __pyx_result.repeat = __pyx_state[6]; __pyx_result.settings = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_AnimationDirection__set_state(<AnimationDirection> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationDirection__set_state(AnimationDirection __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.backTo = __pyx_state[0]; __pyx_result.frames = __pyx_state[1]; __pyx_result.hasSingle = __pyx_state[2]; __pyx_result.maxSpeed = __pyx_state[3]; __pyx_result.minSpeed = __pyx_state[4]; __pyx_result.parent = __pyx_state[5]; __pyx_result.repeat = __pyx_state[6]; __pyx_result.settings = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AnimationDirection__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_Animation(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_17__pyx_unpickle_Animation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_17__pyx_unpickle_Animation = {"__pyx_unpickle_Animation", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_17__pyx_unpickle_Animation, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_17__pyx_unpickle_Animation(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_Animation (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Animation", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Animation", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_Animation") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Animation", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Animation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16__pyx_unpickle_Animation(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_16__pyx_unpickle_Animation(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Animation", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x1f239e1, 0x93a14e1, 0x6de3be1):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1f239e1, 0x93a14e1, 0x6de3be1) = (directions, index, loadedDirections, parent, settings))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__8, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x1f239e1, 0x93a14e1, 0x6de3be1):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1f239e1, 0x93a14e1, 0x6de3be1) = (directions, index, loadedDirections, parent, settings))" % __pyx_checksum)
 *     __pyx_result = Animation.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x1f239e1, 0x93a14e1, 0x6de3be1):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1f239e1, 0x93a14e1, 0x6de3be1) = (directions, index, loadedDirections, parent, settings))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = Animation.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_7, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x1f239e1, 0x93a14e1, 0x6de3be1):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1f239e1, 0x93a14e1, 0x6de3be1) = (directions, index, loadedDirections, parent, settings))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1f239e1, 0x93a14e1, 0x6de3be1) = (directions, index, loadedDirections, parent, settings))" % __pyx_checksum)
 *     __pyx_result = Animation.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Animation__set_state(<Animation> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Animation), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1f239e1, 0x93a14e1, 0x6de3be1) = (directions, index, loadedDirections, parent, settings))" % __pyx_checksum)
 *     __pyx_result = Animation.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Animation__set_state(<Animation> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = Animation.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Animation__set_state(<Animation> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_Animation__set_state(Animation __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Animation__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x1f239e1, 0x93a14e1, 0x6de3be1) = (directions, index, loadedDirections, parent, settings))" % __pyx_checksum)
 *     __pyx_result = Animation.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Animation__set_state(<Animation> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Animation__set_state(<Animation> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_Animation__set_state(Animation __pyx_result, tuple __pyx_state):
 *     __pyx_result.directions = __pyx_state[0]; __pyx_result.index = __pyx_state[1]; __pyx_result.loadedDirections = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Animation(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Animation", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_Animation__set_state(<Animation> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Animation__set_state(Animation __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.directions = __pyx_state[0]; __pyx_result.index = __pyx_state[1]; __pyx_result.loadedDirections = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Animation__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Animation__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_Animation__set_state(Animation __pyx_result, tuple __pyx_state):
 *     __pyx_result.directions = __pyx_state[0]; __pyx_result.index = __pyx_state[1]; __pyx_result.loadedDirections = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[5])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->directions);
  __Pyx_DECREF(__pyx_v___pyx_result->directions);
  __pyx_v___pyx_result->directions = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->index = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->loadedDirections);
  __Pyx_DECREF(__pyx_v___pyx_result->loadedDirections);
  __pyx_v___pyx_result->loadedDirections = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_Animation__set_state(Animation __pyx_result, tuple __pyx_state):
 *     __pyx_result.directions = __pyx_state[0]; __pyx_result.index = __pyx_state[1]; __pyx_result.loadedDirections = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[5])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 5) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.directions = __pyx_state[0]; __pyx_result.index = __pyx_state[1]; __pyx_result.loadedDirections = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[5])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_Animation__set_state(Animation __pyx_result, tuple __pyx_state):
 *     __pyx_result.directions = __pyx_state[0]; __pyx_result.index = __pyx_state[1]; __pyx_result.loadedDirections = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[5])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_Animation__set_state(<Animation> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Animation__set_state(Animation __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.directions = __pyx_state[0]; __pyx_result.index = __pyx_state[1]; __pyx_result.loadedDirections = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Animation__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_AnimationHeader(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_19__pyx_unpickle_AnimationHeader(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_19__pyx_unpickle_AnimationHeader = {"__pyx_unpickle_AnimationHeader", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_19__pyx_unpickle_AnimationHeader, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_19__pyx_unpickle_AnimationHeader(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_AnimationHeader (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AnimationHeader", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AnimationHeader", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_AnimationHeader") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_AnimationHeader", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AnimationHeader", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18__pyx_unpickle_AnimationHeader(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_18__pyx_unpickle_AnimationHeader(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_AnimationHeader", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x46f45fa, 0x59e88da, 0xf46d8cc):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x46f45fa, 0x59e88da, 0xf46d8cc) = (items, loadedAnimations, parent, settings))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__9, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x46f45fa, 0x59e88da, 0xf46d8cc):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x46f45fa, 0x59e88da, 0xf46d8cc) = (items, loadedAnimations, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AnimationHeader.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x46f45fa, 0x59e88da, 0xf46d8cc):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x46f45fa, 0x59e88da, 0xf46d8cc) = (items, loadedAnimations, parent, settings))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = AnimationHeader.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_8, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x46f45fa, 0x59e88da, 0xf46d8cc):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x46f45fa, 0x59e88da, 0xf46d8cc) = (items, loadedAnimations, parent, settings))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x46f45fa, 0x59e88da, 0xf46d8cc) = (items, loadedAnimations, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AnimationHeader.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AnimationHeader__set_state(<AnimationHeader> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x46f45fa, 0x59e88da, 0xf46d8cc) = (items, loadedAnimations, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AnimationHeader.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_AnimationHeader__set_state(<AnimationHeader> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = AnimationHeader.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AnimationHeader__set_state(<AnimationHeader> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationHeader__set_state(AnimationHeader __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AnimationHeader__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x46f45fa, 0x59e88da, 0xf46d8cc) = (items, loadedAnimations, parent, settings))" % __pyx_checksum)
 *     __pyx_result = AnimationHeader.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_AnimationHeader__set_state(<AnimationHeader> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_AnimationHeader__set_state(<AnimationHeader> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_AnimationHeader__set_state(AnimationHeader __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.loadedAnimations = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_AnimationHeader(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AnimationHeader", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_AnimationHeader__set_state(<AnimationHeader> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationHeader__set_state(AnimationHeader __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.loadedAnimations = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]
 *     if len(__pyx_state) > 4 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_AnimationHeader__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_AnimationHeader__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationHeader__set_state(AnimationHeader __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.loadedAnimations = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 4 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[4])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->items);
  __Pyx_DECREF(__pyx_v___pyx_result->items);
  __pyx_v___pyx_result->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->loadedAnimations);
  __Pyx_DECREF(__pyx_v___pyx_result->loadedAnimations);
  __pyx_v___pyx_result->loadedAnimations = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_AnimationHeader__set_state(AnimationHeader __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.loadedAnimations = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]
 *     if len(__pyx_state) > 4 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[4])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_4 = ((__pyx_t_3 > 4) != 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = (__pyx_t_4 != 0);
  __pyx_t_2 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.loadedAnimations = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]
 *     if len(__pyx_state) > 4 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[4])             # <<<<<<<<<<<<<<
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_AnimationHeader__set_state(AnimationHeader __pyx_result, tuple __pyx_state):
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.loadedAnimations = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]
 *     if len(__pyx_state) > 4 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[4])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_AnimationHeader__set_state(<AnimationHeader> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationHeader__set_state(AnimationHeader __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.loadedAnimations = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]
 *     if len(__pyx_state) > 4 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_AnimationHeader__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_Counters(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_21__pyx_unpickle_Counters(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_21__pyx_unpickle_Counters = {"__pyx_unpickle_Counters", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_21__pyx_unpickle_Counters, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_21__pyx_unpickle_Counters(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_Counters (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Counters", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Counters", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_Counters") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Counters", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Counters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_20__pyx_unpickle_Counters(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_20__pyx_unpickle_Counters(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Counters", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x370f5a3, 0x72f9b51, 0xdbbd62e):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x370f5a3, 0x72f9b51, 0xdbbd62e) = (addNulls, decimals, displayType, flags, floatDigits, font, formatFloat, formatFloats, frames, height, integerDigits, inverse, parent, player, settings, shape, useDecimals, width))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__10, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x370f5a3, 0x72f9b51, 0xdbbd62e):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x370f5a3, 0x72f9b51, 0xdbbd62e) = (addNulls, decimals, displayType, flags, floatDigits, font, formatFloat, formatFloats, frames, height, integerDigits, inverse, parent, player, settings, shape, useDecimals, width))" % __pyx_checksum)
 *     __pyx_result = Counters.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x370f5a3, 0x72f9b51, 0xdbbd62e):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x370f5a3, 0x72f9b51, 0xdbbd62e) = (addNulls, decimals, displayType, flags, floatDigits, font, formatFloat, formatFloats, frames, height, integerDigits, inverse, parent, player, settings, shape, useDecimals, width))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = Counters.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_9, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x370f5a3, 0x72f9b51, 0xdbbd62e):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x370f5a3, 0x72f9b51, 0xdbbd62e) = (addNulls, decimals, displayType, flags, floatDigits, font, formatFloat, formatFloats, frames, height, integerDigits, inverse, parent, player, settings, shape, useDecimals, width))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x370f5a3, 0x72f9b51, 0xdbbd62e) = (addNulls, decimals, displayType, flags, floatDigits, font, formatFloat, formatFloats, frames, height, integerDigits, inverse, parent, player, settings, shape, useDecimals, width))" % __pyx_checksum)
 *     __pyx_result = Counters.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Counters__set_state(<Counters> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counters), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x370f5a3, 0x72f9b51, 0xdbbd62e) = (addNulls, decimals, displayType, flags, floatDigits, font, formatFloat, formatFloats, frames, height, integerDigits, inverse, parent, player, settings, shape, useDecimals, width))" % __pyx_checksum)
 *     __pyx_result = Counters.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Counters__set_state(<Counters> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = Counters.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Counters__set_state(<Counters> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_Counters__set_state(Counters __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Counters__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x370f5a3, 0x72f9b51, 0xdbbd62e) = (addNulls, decimals, displayType, flags, floatDigits, font, formatFloat, formatFloats, frames, height, integerDigits, inverse, parent, player, settings, shape, useDecimals, width))" % __pyx_checksum)
 *     __pyx_result = Counters.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Counters__set_state(<Counters> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Counters__set_state(<Counters> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_Counters__set_state(Counters __pyx_result, tuple __pyx_state):
 *     __pyx_result.addNulls = __pyx_state[0]; __pyx_result.decimals = __pyx_state[1]; __pyx_result.displayType = __pyx_state[2]; __pyx_result.flags = __pyx_state[3]; __pyx_result.floatDigits = __pyx_state[4]; __pyx_result.font = __pyx_state[5]; __pyx_result.formatFloat = __pyx_state[6]; __pyx_result.formatFloats = __pyx_state[7]; __pyx_result.frames = __pyx_state[8]; __pyx_result.height = __pyx_state[9]; __pyx_result.integerDigits = __pyx_state[10]; __pyx_result.inverse = __pyx_state[11]; __pyx_result.parent = __pyx_state[12]; __pyx_result.player = __pyx_state[13]; __pyx_result.settings = __pyx_state[14]; __pyx_result.shape = __pyx_state[15]; __pyx_result.useDecimals = __pyx_state[16]; __pyx_result.width = __pyx_state[17]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Counters(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Counters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_Counters__set_state(<Counters> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Counters__set_state(Counters __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.addNulls = __pyx_state[0]; __pyx_result.decimals = __pyx_state[1]; __pyx_result.displayType = __pyx_state[2]; __pyx_result.flags = __pyx_state[3]; __pyx_result.floatDigits = __pyx_state[4]; __pyx_result.font = __pyx_state[5]; __pyx_result.formatFloat = __pyx_state[6]; __pyx_result.formatFloats = __pyx_state[7]; __pyx_result.frames = __pyx_state[8]; __pyx_result.height = __pyx_state[9]; __pyx_result.integerDigits = __pyx_state[10]; __pyx_result.inverse = __pyx_state[11]; __pyx_result.parent = __pyx_state[12]; __pyx_result.player = __pyx_state[13]; __pyx_result.settings = __pyx_state[14]; __pyx_result.shape = __pyx_state[15]; __pyx_result.useDecimals = __pyx_state[16]; __pyx_result.width = __pyx_state[17]
 *     if len(__pyx_state) > 18 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Counters__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Counters__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_Counters__set_state(Counters __pyx_result, tuple __pyx_state):
 *     __pyx_result.addNulls = __pyx_state[0]; __pyx_result.decimals = __pyx_state[1]; __pyx_result.displayType = __pyx_state[2]; __pyx_result.flags = __pyx_state[3]; __pyx_result.floatDigits = __pyx_state[4]; __pyx_result.font = __pyx_state[5]; __pyx_result.formatFloat = __pyx_state[6]; __pyx_result.formatFloats = __pyx_state[7]; __pyx_result.frames = __pyx_state[8]; __pyx_result.height = __pyx_state[9]; __pyx_result.integerDigits = __pyx_state[10]; __pyx_result.inverse = __pyx_state[11]; __pyx_result.parent = __pyx_state[12]; __pyx_result.player = __pyx_state[13]; __pyx_result.settings = __pyx_state[14]; __pyx_result.shape = __pyx_state[15]; __pyx_result.useDecimals = __pyx_state[16]; __pyx_result.width = __pyx_state[17]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 18 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[18])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->addNulls = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->decimals = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->displayType = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->flags = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->floatDigits = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->font = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->formatFloat = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->formatFloats = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->frames);
  __Pyx_DECREF(__pyx_v___pyx_result->frames);
  __pyx_v___pyx_result->frames = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->height = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 10, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->integerDigits = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 11, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->inverse = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 12, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 13, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->player = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 14, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 15, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->shape);
  __Pyx_DECREF(__pyx_v___pyx_result->shape);
  __pyx_v___pyx_result->shape = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 16, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->useDecimals = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 17, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->width = __pyx_t_3;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_Counters__set_state(Counters __pyx_result, tuple __pyx_state):
 *     __pyx_result.addNulls = __pyx_state[0]; __pyx_result.decimals = __pyx_state[1]; __pyx_result.displayType = __pyx_state[2]; __pyx_result.flags = __pyx_state[3]; __pyx_result.floatDigits = __pyx_state[4]; __pyx_result.font = __pyx_state[5]; __pyx_result.formatFloat = __pyx_state[6]; __pyx_result.formatFloats = __pyx_state[7]; __pyx_result.frames = __pyx_state[8]; __pyx_result.height = __pyx_state[9]; __pyx_result.integerDigits = __pyx_state[10]; __pyx_result.inverse = __pyx_state[11]; __pyx_result.parent = __pyx_state[12]; __pyx_result.player = __pyx_state[13]; __pyx_result.settings = __pyx_state[14]; __pyx_result.shape = __pyx_state[15]; __pyx_result.useDecimals = __pyx_state[16]; __pyx_result.width = __pyx_state[17]
 *     if len(__pyx_state) > 18 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[18])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 18) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_2 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_2 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result.addNulls = __pyx_state[0]; __pyx_result.decimals = __pyx_state[1]; __pyx_result.displayType = __pyx_state[2]; __pyx_result.flags = __pyx_state[3]; __pyx_result.floatDigits = __pyx_state[4]; __pyx_result.font = __pyx_state[5]; __pyx_result.formatFloat = __pyx_state[6]; __pyx_result.formatFloats = __pyx_state[7]; __pyx_result.frames = __pyx_state[8]; __pyx_result.height = __pyx_state[9]; __pyx_result.integerDigits = __pyx_state[10]; __pyx_result.inverse = __pyx_state[11]; __pyx_result.parent = __pyx_state[12]; __pyx_result.player = __pyx_state[13]; __pyx_result.settings = __pyx_state[14]; __pyx_result.shape = __pyx_state[15]; __pyx_result.useDecimals = __pyx_state[16]; __pyx_result.width = __pyx_state[17]
 *     if len(__pyx_state) > 18 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[18])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 18, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_Counters__set_state(Counters __pyx_result, tuple __pyx_state):
 *     __pyx_result.addNulls = __pyx_state[0]; __pyx_result.decimals = __pyx_state[1]; __pyx_result.displayType = __pyx_state[2]; __pyx_result.flags = __pyx_state[3]; __pyx_result.floatDigits = __pyx_state[4]; __pyx_result.font = __pyx_state[5]; __pyx_result.formatFloat = __pyx_state[6]; __pyx_result.formatFloats = __pyx_state[7]; __pyx_result.frames = __pyx_state[8]; __pyx_result.height = __pyx_state[9]; __pyx_result.integerDigits = __pyx_state[10]; __pyx_result.inverse = __pyx_state[11]; __pyx_result.parent = __pyx_state[12]; __pyx_result.player = __pyx_state[13]; __pyx_result.settings = __pyx_state[14]; __pyx_result.shape = __pyx_state[15]; __pyx_result.useDecimals = __pyx_state[16]; __pyx_result.width = __pyx_state[17]
 *     if len(__pyx_state) > 18 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[18])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_Counters__set_state(<Counters> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Counters__set_state(Counters __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.addNulls = __pyx_state[0]; __pyx_result.decimals = __pyx_state[1]; __pyx_result.displayType = __pyx_state[2]; __pyx_result.flags = __pyx_state[3]; __pyx_result.floatDigits = __pyx_state[4]; __pyx_result.font = __pyx_state[5]; __pyx_result.formatFloat = __pyx_state[6]; __pyx_result.formatFloats = __pyx_state[7]; __pyx_result.frames = __pyx_state[8]; __pyx_result.height = __pyx_state[9]; __pyx_result.integerDigits = __pyx_state[10]; __pyx_result.inverse = __pyx_state[11]; __pyx_result.parent = __pyx_state[12]; __pyx_result.player = __pyx_state[13]; __pyx_result.settings = __pyx_state[14]; __pyx_result.shape = __pyx_state[15]; __pyx_result.useDecimals = __pyx_state[16]; __pyx_result.width = __pyx_state[17]
 *     if len(__pyx_state) > 18 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Counters__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_Paragraph(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_23__pyx_unpickle_Paragraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_23__pyx_unpickle_Paragraph = {"__pyx_unpickle_Paragraph", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_23__pyx_unpickle_Paragraph, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_23__pyx_unpickle_Paragraph(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_Paragraph (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Paragraph", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Paragraph", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_Paragraph") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Paragraph", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Paragraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_22__pyx_unpickle_Paragraph(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_22__pyx_unpickle_Paragraph(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Paragraph", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x653b896, 0x95af037, 0x9d7686e):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x653b896, 0x95af037, 0x9d7686e) = (color, flags, font, parent, settings, value))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__11, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x653b896, 0x95af037, 0x9d7686e):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x653b896, 0x95af037, 0x9d7686e) = (color, flags, font, parent, settings, value))" % __pyx_checksum)
 *     __pyx_result = Paragraph.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x653b896, 0x95af037, 0x9d7686e):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x653b896, 0x95af037, 0x9d7686e) = (color, flags, font, parent, settings, value))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = Paragraph.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_10, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x653b896, 0x95af037, 0x9d7686e):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x653b896, 0x95af037, 0x9d7686e) = (color, flags, font, parent, settings, value))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x653b896, 0x95af037, 0x9d7686e) = (color, flags, font, parent, settings, value))" % __pyx_checksum)
 *     __pyx_result = Paragraph.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Paragraph__set_state(<Paragraph> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Paragraph), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x653b896, 0x95af037, 0x9d7686e) = (color, flags, font, parent, settings, value))" % __pyx_checksum)
 *     __pyx_result = Paragraph.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Paragraph__set_state(<Paragraph> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = Paragraph.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Paragraph__set_state(<Paragraph> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_Paragraph__set_state(Paragraph __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Paragraph__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x653b896, 0x95af037, 0x9d7686e) = (color, flags, font, parent, settings, value))" % __pyx_checksum)
 *     __pyx_result = Paragraph.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Paragraph__set_state(<Paragraph> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Paragraph__set_state(<Paragraph> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_Paragraph__set_state(Paragraph __pyx_result, tuple __pyx_state):
 *     __pyx_result.color = __pyx_state[0]; __pyx_result.flags = __pyx_state[1]; __pyx_result.font = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Paragraph(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Paragraph", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_Paragraph__set_state(<Paragraph> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Paragraph__set_state(Paragraph __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.color = __pyx_state[0]; __pyx_result.flags = __pyx_state[1]; __pyx_result.font = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Paragraph__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Paragraph__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_Paragraph__set_state(Paragraph __pyx_result, tuple __pyx_state):
 *     __pyx_result.color = __pyx_state[0]; __pyx_result.flags = __pyx_state[1]; __pyx_result.font = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->color);
  __Pyx_DECREF(__pyx_v___pyx_result->color);
  __pyx_v___pyx_result->color = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->flags);
  __Pyx_DECREF(__pyx_v___pyx_result->flags);
  __pyx_v___pyx_result->flags = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->font = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyBytes_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->value);
  __Pyx_DECREF(__pyx_v___pyx_result->value);
  __pyx_v___pyx_result->value = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_Paragraph__set_state(Paragraph __pyx_result, tuple __pyx_state):
 *     __pyx_result.color = __pyx_state[0]; __pyx_result.flags = __pyx_state[1]; __pyx_result.font = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 6) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.color = __pyx_state[0]; __pyx_result.flags = __pyx_state[1]; __pyx_result.font = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[6])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_Paragraph__set_state(Paragraph __pyx_result, tuple __pyx_state):
 *     __pyx_result.color = __pyx_state[0]; __pyx_result.flags = __pyx_state[1]; __pyx_result.font = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[6])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_Paragraph__set_state(<Paragraph> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Paragraph__set_state(Paragraph __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.color = __pyx_state[0]; __pyx_result.flags = __pyx_state[1]; __pyx_result.font = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Paragraph__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_Text(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_25__pyx_unpickle_Text(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_25__pyx_unpickle_Text = {"__pyx_unpickle_Text", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_25__pyx_unpickle_Text, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_25__pyx_unpickle_Text(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_Text (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Text", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Text", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_Text") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Text", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Text", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_24__pyx_unpickle_Text(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_24__pyx_unpickle_Text(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Text", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x4c8d0f0, 0x54e3da4, 0x6a4421c):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x4c8d0f0, 0x54e3da4, 0x6a4421c) = (height, items, parent, settings, width))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__12, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x4c8d0f0, 0x54e3da4, 0x6a4421c):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x4c8d0f0, 0x54e3da4, 0x6a4421c) = (height, items, parent, settings, width))" % __pyx_checksum)
 *     __pyx_result = Text.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x4c8d0f0, 0x54e3da4, 0x6a4421c):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x4c8d0f0, 0x54e3da4, 0x6a4421c) = (height, items, parent, settings, width))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = Text.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_11, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x4c8d0f0, 0x54e3da4, 0x6a4421c):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x4c8d0f0, 0x54e3da4, 0x6a4421c) = (height, items, parent, settings, width))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x4c8d0f0, 0x54e3da4, 0x6a4421c) = (height, items, parent, settings, width))" % __pyx_checksum)
 *     __pyx_result = Text.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Text__set_state(<Text> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Text), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x4c8d0f0, 0x54e3da4, 0x6a4421c) = (height, items, parent, settings, width))" % __pyx_checksum)
 *     __pyx_result = Text.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Text__set_state(<Text> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = Text.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Text__set_state(<Text> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_Text__set_state(Text __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Text__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x4c8d0f0, 0x54e3da4, 0x6a4421c) = (height, items, parent, settings, width))" % __pyx_checksum)
 *     __pyx_result = Text.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Text__set_state(<Text> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Text__set_state(<Text> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_Text__set_state(Text __pyx_result, tuple __pyx_state):
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.items = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]; __pyx_result.width = __pyx_state[4]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Text(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Text", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_Text__set_state(<Text> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Text__set_state(Text __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.items = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]; __pyx_result.width = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Text__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Text__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_Text__set_state(Text __pyx_result, tuple __pyx_state):
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.items = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]; __pyx_result.width = __pyx_state[4]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[5])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->height = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->items);
  __Pyx_DECREF(__pyx_v___pyx_result->items);
  __pyx_v___pyx_result->items = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->width = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_Text__set_state(Text __pyx_result, tuple __pyx_state):
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.items = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]; __pyx_result.width = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[5])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 5) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.items = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]; __pyx_result.width = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[5])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_Text__set_state(Text __pyx_result, tuple __pyx_state):
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.items = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]; __pyx_result.width = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[5])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_Text__set_state(<Text> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Text__set_state(Text __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.items = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]; __pyx_result.width = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Text__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_RTFObject(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_27__pyx_unpickle_RTFObject(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_27__pyx_unpickle_RTFObject = {"__pyx_unpickle_RTFObject", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_27__pyx_unpickle_RTFObject, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_27__pyx_unpickle_RTFObject(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_RTFObject (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_RTFObject", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_RTFObject", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_RTFObject") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_RTFObject", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_RTFObject", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_26__pyx_unpickle_RTFObject(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_26__pyx_unpickle_RTFObject(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_RTFObject", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x6d5924e, 0x479af0f, 0xb80938b):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x6d5924e, 0x479af0f, 0xb80938b) = (backColor, height, options, parent, settings, value, version, width))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__13, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x6d5924e, 0x479af0f, 0xb80938b):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x6d5924e, 0x479af0f, 0xb80938b) = (backColor, height, options, parent, settings, value, version, width))" % __pyx_checksum)
 *     __pyx_result = RTFObject.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x6d5924e, 0x479af0f, 0xb80938b):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x6d5924e, 0x479af0f, 0xb80938b) = (backColor, height, options, parent, settings, value, version, width))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = RTFObject.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_12, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x6d5924e, 0x479af0f, 0xb80938b):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x6d5924e, 0x479af0f, 0xb80938b) = (backColor, height, options, parent, settings, value, version, width))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x6d5924e, 0x479af0f, 0xb80938b) = (backColor, height, options, parent, settings, value, version, width))" % __pyx_checksum)
 *     __pyx_result = RTFObject.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_RTFObject__set_state(<RTFObject> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_RTFObject), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x6d5924e, 0x479af0f, 0xb80938b) = (backColor, height, options, parent, settings, value, version, width))" % __pyx_checksum)
 *     __pyx_result = RTFObject.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_RTFObject__set_state(<RTFObject> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = RTFObject.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_RTFObject__set_state(<RTFObject> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_RTFObject__set_state(RTFObject __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_RTFObject__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x6d5924e, 0x479af0f, 0xb80938b) = (backColor, height, options, parent, settings, value, version, width))" % __pyx_checksum)
 *     __pyx_result = RTFObject.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_RTFObject__set_state(<RTFObject> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_RTFObject__set_state(<RTFObject> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_RTFObject__set_state(RTFObject __pyx_result, tuple __pyx_state):
 *     __pyx_result.backColor = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.options = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]; __pyx_result.version = __pyx_state[6]; __pyx_result.width = __pyx_state[7]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_RTFObject(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_RTFObject", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_RTFObject__set_state(<RTFObject> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_RTFObject__set_state(RTFObject __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.backColor = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.options = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]; __pyx_result.version = __pyx_state[6]; __pyx_result.width = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_RTFObject__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_RTFObject__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_RTFObject__set_state(RTFObject __pyx_result, tuple __pyx_state):
 *     __pyx_result.backColor = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.options = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]; __pyx_result.version = __pyx_state[6]; __pyx_result.width = __pyx_state[7]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyTuple_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->backColor);
  __Pyx_DECREF(__pyx_v___pyx_result->backColor);
  __pyx_v___pyx_result->backColor = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->height = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->options);
  __Pyx_DECREF(__pyx_v___pyx_result->options);
  __pyx_v___pyx_result->options = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyBytes_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->value);
  __Pyx_DECREF(__pyx_v___pyx_result->value);
  __pyx_v___pyx_result->value = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->version = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->width = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_RTFObject__set_state(RTFObject __pyx_result, tuple __pyx_state):
 *     __pyx_result.backColor = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.options = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]; __pyx_result.version = __pyx_state[6]; __pyx_result.width = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 8) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.backColor = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.options = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]; __pyx_result.version = __pyx_state[6]; __pyx_result.width = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_RTFObject__set_state(RTFObject __pyx_result, tuple __pyx_state):
 *     __pyx_result.backColor = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.options = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]; __pyx_result.version = __pyx_state[6]; __pyx_result.width = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_RTFObject__set_state(<RTFObject> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_RTFObject__set_state(RTFObject __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.backColor = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.options = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]; __pyx_result.version = __pyx_state[6]; __pyx_result.width = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_RTFObject__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_SubApplication(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_29__pyx_unpickle_SubApplication(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_29__pyx_unpickle_SubApplication = {"__pyx_unpickle_SubApplication", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_29__pyx_unpickle_SubApplication, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_29__pyx_unpickle_SubApplication(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_SubApplication (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_SubApplication", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_SubApplication", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_SubApplication") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_SubApplication", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_SubApplication", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_28__pyx_unpickle_SubApplication(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_28__pyx_unpickle_SubApplication(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_SubApplication", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x027ea54, 0xa092419, 0x9d603d2):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x027ea54, 0xa092419, 0x9d603d2) = (height, iconOffset, name, options, parent, settings, startFrame, version, width))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__14, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x027ea54, 0xa092419, 0x9d603d2):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x027ea54, 0xa092419, 0x9d603d2) = (height, iconOffset, name, options, parent, settings, startFrame, version, width))" % __pyx_checksum)
 *     __pyx_result = SubApplication.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x027ea54, 0xa092419, 0x9d603d2):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x027ea54, 0xa092419, 0x9d603d2) = (height, iconOffset, name, options, parent, settings, startFrame, version, width))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = SubApplication.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_13, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x027ea54, 0xa092419, 0x9d603d2):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x027ea54, 0xa092419, 0x9d603d2) = (height, iconOffset, name, options, parent, settings, startFrame, version, width))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x027ea54, 0xa092419, 0x9d603d2) = (height, iconOffset, name, options, parent, settings, startFrame, version, width))" % __pyx_checksum)
 *     __pyx_result = SubApplication.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_SubApplication__set_state(<SubApplication> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_SubApplication), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x027ea54, 0xa092419, 0x9d603d2) = (height, iconOffset, name, options, parent, settings, startFrame, version, width))" % __pyx_checksum)
 *     __pyx_result = SubApplication.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_SubApplication__set_state(<SubApplication> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = SubApplication.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_SubApplication__set_state(<SubApplication> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_SubApplication__set_state(SubApplication __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_SubApplication__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x027ea54, 0xa092419, 0x9d603d2) = (height, iconOffset, name, options, parent, settings, startFrame, version, width))" % __pyx_checksum)
 *     __pyx_result = SubApplication.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_SubApplication__set_state(<SubApplication> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_SubApplication__set_state(<SubApplication> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_SubApplication__set_state(SubApplication __pyx_result, tuple __pyx_state):
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.iconOffset = __pyx_state[1]; __pyx_result.name = __pyx_state[2]; __pyx_result.options = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.startFrame = __pyx_state[6]; __pyx_result.version = __pyx_state[7]; __pyx_result.width = __pyx_state[8]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_SubApplication(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_SubApplication", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_SubApplication__set_state(<SubApplication> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_SubApplication__set_state(SubApplication __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.iconOffset = __pyx_state[1]; __pyx_result.name = __pyx_state[2]; __pyx_result.options = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.startFrame = __pyx_state[6]; __pyx_result.version = __pyx_state[7]; __pyx_result.width = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_SubApplication__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_SubApplication__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_SubApplication__set_state(SubApplication __pyx_result, tuple __pyx_state):
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.iconOffset = __pyx_state[1]; __pyx_result.name = __pyx_state[2]; __pyx_result.options = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.startFrame = __pyx_state[6]; __pyx_result.version = __pyx_state[7]; __pyx_result.width = __pyx_state[8]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->height = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->iconOffset = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyBytes_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->name);
  __Pyx_DECREF(__pyx_v___pyx_result->name);
  __pyx_v___pyx_result->name = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->options);
  __Pyx_DECREF(__pyx_v___pyx_result->options);
  __pyx_v___pyx_result->options = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->startFrame = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->version = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->width = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_SubApplication__set_state(SubApplication __pyx_result, tuple __pyx_state):
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.iconOffset = __pyx_state[1]; __pyx_result.name = __pyx_state[2]; __pyx_result.options = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.startFrame = __pyx_state[6]; __pyx_result.version = __pyx_state[7]; __pyx_result.width = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 9) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.iconOffset = __pyx_state[1]; __pyx_result.name = __pyx_state[2]; __pyx_result.options = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.startFrame = __pyx_state[6]; __pyx_result.version = __pyx_state[7]; __pyx_result.width = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[9])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_SubApplication__set_state(SubApplication __pyx_result, tuple __pyx_state):
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.iconOffset = __pyx_state[1]; __pyx_result.name = __pyx_state[2]; __pyx_result.options = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.startFrame = __pyx_state[6]; __pyx_result.version = __pyx_state[7]; __pyx_result.width = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[9])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_SubApplication__set_state(<SubApplication> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_SubApplication__set_state(SubApplication __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.height = __pyx_state[0]; __pyx_result.iconOffset = __pyx_state[1]; __pyx_result.name = __pyx_state[2]; __pyx_result.options = __pyx_state[3]; __pyx_result.parent = __pyx_state[4]; __pyx_result.settings = __pyx_state[5]; __pyx_result.startFrame = __pyx_state[6]; __pyx_result.version = __pyx_state[7]; __pyx_result.width = __pyx_state[8]
 *     if len(__pyx_state) > 9 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_SubApplication__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_Counter(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_31__pyx_unpickle_Counter(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_31__pyx_unpickle_Counter = {"__pyx_unpickle_Counter", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_31__pyx_unpickle_Counter, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_31__pyx_unpickle_Counter(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_Counter (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Counter", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Counter", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_Counter") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Counter", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Counter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_30__pyx_unpickle_Counter(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_30__pyx_unpickle_Counter(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Counter", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x105b14b, 0xb146145, 0xfee8776):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x105b14b, 0xb146145, 0xfee8776) = (initial, maximum, minimum, parent, settings))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__15, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x105b14b, 0xb146145, 0xfee8776):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x105b14b, 0xb146145, 0xfee8776) = (initial, maximum, minimum, parent, settings))" % __pyx_checksum)
 *     __pyx_result = Counter.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x105b14b, 0xb146145, 0xfee8776):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x105b14b, 0xb146145, 0xfee8776) = (initial, maximum, minimum, parent, settings))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = Counter.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_14, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x105b14b, 0xb146145, 0xfee8776):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x105b14b, 0xb146145, 0xfee8776) = (initial, maximum, minimum, parent, settings))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x105b14b, 0xb146145, 0xfee8776) = (initial, maximum, minimum, parent, settings))" % __pyx_checksum)
 *     __pyx_result = Counter.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Counter__set_state(<Counter> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counter), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x105b14b, 0xb146145, 0xfee8776) = (initial, maximum, minimum, parent, settings))" % __pyx_checksum)
 *     __pyx_result = Counter.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Counter__set_state(<Counter> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = Counter.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Counter__set_state(<Counter> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_Counter__set_state(Counter __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Counter__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x105b14b, 0xb146145, 0xfee8776) = (initial, maximum, minimum, parent, settings))" % __pyx_checksum)
 *     __pyx_result = Counter.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Counter__set_state(<Counter> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Counter__set_state(<Counter> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_Counter__set_state(Counter __pyx_result, tuple __pyx_state):
 *     __pyx_result.initial = __pyx_state[0]; __pyx_result.maximum = __pyx_state[1]; __pyx_result.minimum = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Counter(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Counter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_Counter__set_state(<Counter> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Counter__set_state(Counter __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.initial = __pyx_state[0]; __pyx_result.maximum = __pyx_state[1]; __pyx_result.minimum = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_Counter__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Counter__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_Counter__set_state(Counter __pyx_result, tuple __pyx_state):
 *     __pyx_result.initial = __pyx_state[0]; __pyx_result.maximum = __pyx_state[1]; __pyx_result.minimum = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[5])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->initial = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->maximum = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->minimum = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_Counter__set_state(Counter __pyx_result, tuple __pyx_state):
 *     __pyx_result.initial = __pyx_state[0]; __pyx_result.maximum = __pyx_state[1]; __pyx_result.minimum = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[5])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 5) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.initial = __pyx_state[0]; __pyx_result.maximum = __pyx_state[1]; __pyx_result.minimum = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[5])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_Counter__set_state(Counter __pyx_result, tuple __pyx_state):
 *     __pyx_result.initial = __pyx_state[0]; __pyx_result.maximum = __pyx_state[1]; __pyx_result.minimum = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[5])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_Counter__set_state(<Counter> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Counter__set_state(Counter __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.initial = __pyx_state[0]; __pyx_result.maximum = __pyx_state[1]; __pyx_result.minimum = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_Counter__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_ObjectCommon(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_33__pyx_unpickle_ObjectCommon(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_33__pyx_unpickle_ObjectCommon = {"__pyx_unpickle_ObjectCommon", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_33__pyx_unpickle_ObjectCommon, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_33__pyx_unpickle_ObjectCommon(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_ObjectCommon (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_ObjectCommon", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_ObjectCommon", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_ObjectCommon") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_ObjectCommon", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_ObjectCommon", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9mmfparser_4data_12chunkloaders_7objects_32__pyx_unpickle_ObjectCommon(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_9mmfparser_4data_12chunkloaders_7objects_32__pyx_unpickle_ObjectCommon(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_ObjectCommon", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x3d2aa71, 0xb6da4cc, 0x7b59b43):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x3d2aa71, 0xb6da4cc, 0x7b59b43) = (animations, backColour, counter, counters, extensionData, extensionId, extensionPrivate, extensionVersion, fadeIn, fadeOut, flags, identifier, movements, newFlags, parent, preferences, qualifiers, rtf, settings, strings, subApplication, text, values, version))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__16, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x3d2aa71, 0xb6da4cc, 0x7b59b43):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x3d2aa71, 0xb6da4cc, 0x7b59b43) = (animations, backColour, counter, counters, extensionData, extensionId, extensionPrivate, extensionVersion, fadeIn, fadeOut, flags, identifier, movements, newFlags, parent, preferences, qualifiers, rtf, settings, strings, subApplication, text, values, version))" % __pyx_checksum)
 *     __pyx_result = ObjectCommon.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, -1); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x3d2aa71, 0xb6da4cc, 0x7b59b43):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x3d2aa71, 0xb6da4cc, 0x7b59b43) = (animations, backColour, counter, counters, extensionData, extensionId, extensionPrivate, extensionVersion, fadeIn, fadeOut, flags, identifier, movements, newFlags, parent, preferences, qualifiers, rtf, settings, strings, subApplication, text, values, version))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = ObjectCommon.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_15, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x3d2aa71, 0xb6da4cc, 0x7b59b43):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x3d2aa71, 0xb6da4cc, 0x7b59b43) = (animations, backColour, counter, counters, extensionData, extensionId, extensionPrivate, extensionVersion, fadeIn, fadeOut, flags, identifier, movements, newFlags, parent, preferences, qualifiers, rtf, settings, strings, subApplication, text, values, version))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x3d2aa71, 0xb6da4cc, 0x7b59b43) = (animations, backColour, counter, counters, extensionData, extensionId, extensionPrivate, extensionVersion, fadeIn, fadeOut, flags, identifier, movements, newFlags, parent, preferences, qualifiers, rtf, settings, strings, subApplication, text, values, version))" % __pyx_checksum)
 *     __pyx_result = ObjectCommon.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_ObjectCommon__set_state(<ObjectCommon> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon), __pyx_n_s_new_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x3d2aa71, 0xb6da4cc, 0x7b59b43) = (animations, backColour, counter, counters, extensionData, extensionId, extensionPrivate, extensionVersion, fadeIn, fadeOut, flags, identifier, movements, newFlags, parent, preferences, qualifiers, rtf, settings, strings, subApplication, text, values, version))" % __pyx_checksum)
 *     __pyx_result = ObjectCommon.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_ObjectCommon__set_state(<ObjectCommon> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = ObjectCommon.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_ObjectCommon__set_state(<ObjectCommon> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_ObjectCommon__set_state(ObjectCommon __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_ObjectCommon__set_state(((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x3d2aa71, 0xb6da4cc, 0x7b59b43) = (animations, backColour, counter, counters, extensionData, extensionId, extensionPrivate, extensionVersion, fadeIn, fadeOut, flags, identifier, movements, newFlags, parent, preferences, qualifiers, rtf, settings, strings, subApplication, text, values, version))" % __pyx_checksum)
 *     __pyx_result = ObjectCommon.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_ObjectCommon__set_state(<ObjectCommon> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_ObjectCommon__set_state(<ObjectCommon> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_ObjectCommon__set_state(ObjectCommon __pyx_result, tuple __pyx_state):
 *     __pyx_result.animations = __pyx_state[0]; __pyx_result.backColour = __pyx_state[1]; __pyx_result.counter = __pyx_state[2]; __pyx_result.counters = __pyx_state[3]; __pyx_result.extensionData = __pyx_state[4]; __pyx_result.extensionId = __pyx_state[5]; __pyx_result.extensionPrivate = __pyx_state[6]; __pyx_result.extensionVersion = __pyx_state[7]; __pyx_result.fadeIn = __pyx_state[8]; __pyx_result.fadeOut = __pyx_state[9]; __pyx_result.flags = __pyx_state[10]; __pyx_result.identifier = __pyx_state[11]; __pyx_result.movements = __pyx_state[12]; __pyx_result.newFlags = __pyx_state[13]; __pyx_result.parent = __pyx_state[14]; __pyx_result.preferences = __pyx_state[15]; __pyx_result.qualifiers = __pyx_state[16]; __pyx_result.rtf = __pyx_state[17]; __pyx_result.settings = __pyx_state[18]; __pyx_result.strings = __pyx_state[19]; __pyx_result.subApplication = __pyx_state[20]; __pyx_result.text = __pyx_state[21]; __pyx_result.values = __pyx_state[22]; __pyx_result.version = __pyx_state[23]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_ObjectCommon(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_ObjectCommon", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_ObjectCommon__set_state(<ObjectCommon> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_ObjectCommon__set_state(ObjectCommon __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.animations = __pyx_state[0]; __pyx_result.backColour = __pyx_state[1]; __pyx_result.counter = __pyx_state[2]; __pyx_result.counters = __pyx_state[3]; __pyx_result.extensionData = __pyx_state[4]; __pyx_result.extensionId = __pyx_state[5]; __pyx_result.extensionPrivate = __pyx_state[6]; __pyx_result.extensionVersion = __pyx_state[7]; __pyx_result.fadeIn = __pyx_state[8]; __pyx_result.fadeOut = __pyx_state[9]; __pyx_result.flags = __pyx_state[10]; __pyx_result.identifier = __pyx_state[11]; __pyx_result.movements = __pyx_state[12]; __pyx_result.newFlags = __pyx_state[13]; __pyx_result.parent = __pyx_state[14]; __pyx_result.preferences = __pyx_state[15]; __pyx_result.qualifiers = __pyx_state[16]; __pyx_result.rtf = __pyx_state[17]; __pyx_result.settings = __pyx_state[18]; __pyx_result.strings = __pyx_state[19]; __pyx_result.subApplication = __pyx_state[20]; __pyx_result.text = __pyx_state[21]; __pyx_result.values = __pyx_state[22]; __pyx_result.version = __pyx_state[23]
 *     if len(__pyx_state) > 24 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_9mmfparser_4data_12chunkloaders_7objects___pyx_unpickle_ObjectCommon__set_state(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_ObjectCommon__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_ObjectCommon__set_state(ObjectCommon __pyx_result, tuple __pyx_state):
 *     __pyx_result.animations = __pyx_state[0]; __pyx_result.backColour = __pyx_state[1]; __pyx_result.counter = __pyx_state[2]; __pyx_result.counters = __pyx_state[3]; __pyx_result.extensionData = __pyx_state[4]; __pyx_result.extensionId = __pyx_state[5]; __pyx_result.extensionPrivate = __pyx_state[6]; __pyx_result.extensionVersion = __pyx_state[7]; __pyx_result.fadeIn = __pyx_state[8]; __pyx_result.fadeOut = __pyx_state[9]; __pyx_result.flags = __pyx_state[10]; __pyx_result.identifier = __pyx_state[11]; __pyx_result.movements = __pyx_state[12]; __pyx_result.newFlags = __pyx_state[13]; __pyx_result.parent = __pyx_state[14]; __pyx_result.preferences = __pyx_state[15]; __pyx_result.qualifiers = __pyx_state[16]; __pyx_result.rtf = __pyx_state[17]; __pyx_result.settings = __pyx_state[18]; __pyx_result.strings = __pyx_state[19]; __pyx_result.subApplication = __pyx_state[20]; __pyx_result.text = __pyx_state[21]; __pyx_result.values = __pyx_state[22]; __pyx_result.version = __pyx_state[23]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 24 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[24])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->animations);
  __Pyx_DECREF(__pyx_v___pyx_result->animations);
  __pyx_v___pyx_result->animations = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyTuple_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->backColour);
  __Pyx_DECREF(__pyx_v___pyx_result->backColour);
  __pyx_v___pyx_result->backColour = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->counter);
  __Pyx_DECREF(__pyx_v___pyx_result->counter);
  __pyx_v___pyx_result->counter = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->counters);
  __Pyx_DECREF(__pyx_v___pyx_result->counters);
  __pyx_v___pyx_result->counters = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->extensionData);
  __Pyx_DECREF(__pyx_v___pyx_result->extensionData);
  __pyx_v___pyx_result->extensionData = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->extensionId);
  __Pyx_DECREF(__pyx_v___pyx_result->extensionId);
  __pyx_v___pyx_result->extensionId = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->extensionPrivate);
  __Pyx_DECREF(__pyx_v___pyx_result->extensionPrivate);
  __pyx_v___pyx_result->extensionPrivate = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->extensionVersion);
  __Pyx_DECREF(__pyx_v___pyx_result->extensionVersion);
  __pyx_v___pyx_result->extensionVersion = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->fadeIn);
  __Pyx_DECREF(__pyx_v___pyx_result->fadeIn);
  __pyx_v___pyx_result->fadeIn = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 9, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->fadeOut);
  __Pyx_DECREF(__pyx_v___pyx_result->fadeOut);
  __pyx_v___pyx_result->fadeOut = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 10, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->flags);
  __Pyx_DECREF(__pyx_v___pyx_result->flags);
  __pyx_v___pyx_result->flags = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 11, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->identifier = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 12, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->movements);
  __Pyx_DECREF(__pyx_v___pyx_result->movements);
  __pyx_v___pyx_result->movements = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 13, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->newFlags);
  __Pyx_DECREF(__pyx_v___pyx_result->newFlags);
  __pyx_v___pyx_result->newFlags = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 14, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_9mmfparser_6loader_DataLoader))))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.parent);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->__pyx_base.parent));
  __pyx_v___pyx_result->__pyx_base.parent = ((struct __pyx_obj_9mmfparser_6loader_DataLoader *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 15, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->preferences);
  __Pyx_DECREF(__pyx_v___pyx_result->preferences);
  __pyx_v___pyx_result->preferences = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 16, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->qualifiers);
  __Pyx_DECREF(__pyx_v___pyx_result->qualifiers);
  __pyx_v___pyx_result->qualifiers = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 17, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->rtf);
  __Pyx_DECREF(__pyx_v___pyx_result->rtf);
  __pyx_v___pyx_result->rtf = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 18, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||((void)PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->__pyx_base.settings);
  __Pyx_DECREF(__pyx_v___pyx_result->__pyx_base.settings);
  __pyx_v___pyx_result->__pyx_base.settings = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 19, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->strings);
  __Pyx_DECREF(__pyx_v___pyx_result->strings);
  __pyx_v___pyx_result->strings = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 20, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->subApplication);
  __Pyx_DECREF(__pyx_v___pyx_result->subApplication);
  __pyx_v___pyx_result->subApplication = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 21, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->text);
  __Pyx_DECREF(__pyx_v___pyx_result->text);
  __pyx_v___pyx_result->text = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 22, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->values);
  __Pyx_DECREF(__pyx_v___pyx_result->values);
  __pyx_v___pyx_result->values = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 23, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->version = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_ObjectCommon__set_state(ObjectCommon __pyx_result, tuple __pyx_state):
 *     __pyx_result.animations = __pyx_state[0]; __pyx_result.backColour = __pyx_state[1]; __pyx_result.counter = __pyx_state[2]; __pyx_result.counters = __pyx_state[3]; __pyx_result.extensionData = __pyx_state[4]; __pyx_result.extensionId = __pyx_state[5]; __pyx_result.extensionPrivate = __pyx_state[6]; __pyx_result.extensionVersion = __pyx_state[7]; __pyx_result.fadeIn = __pyx_state[8]; __pyx_result.fadeOut = __pyx_state[9]; __pyx_result.flags = __pyx_state[10]; __pyx_result.identifier = __pyx_state[11]; __pyx_result.movements = __pyx_state[12]; __pyx_result.newFlags = __pyx_state[13]; __pyx_result.parent = __pyx_state[14]; __pyx_result.preferences = __pyx_state[15]; __pyx_result.qualifiers = __pyx_state[16]; __pyx_result.rtf = __pyx_state[17]; __pyx_result.settings = __pyx_state[18]; __pyx_result.strings = __pyx_state[19]; __pyx_result.subApplication = __pyx_state[20]; __pyx_result.text = __pyx_state[21]; __pyx_result.values = __pyx_state[22]; __pyx_result.version = __pyx_state[23]
 *     if len(__pyx_state) > 24 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[24])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_4 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_4 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_5 = ((__pyx_t_4 > 24) != 0);
  if (__pyx_t_5) {
  } else {
    __pyx_t_3 = __pyx_t_5;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_5 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_5 != 0);
  __pyx_t_3 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "(tree fragment)":14
 *     __pyx_result.animations = __pyx_state[0]; __pyx_result.backColour = __pyx_state[1]; __pyx_result.counter = __pyx_state[2]; __pyx_result.counters = __pyx_state[3]; __pyx_result.extensionData = __pyx_state[4]; __pyx_result.extensionId = __pyx_state[5]; __pyx_result.extensionPrivate = __pyx_state[6]; __pyx_result.extensionVersion = __pyx_state[7]; __pyx_result.fadeIn = __pyx_state[8]; __pyx_result.fadeOut = __pyx_state[9]; __pyx_result.flags = __pyx_state[10]; __pyx_result.identifier = __pyx_state[11]; __pyx_result.movements = __pyx_state[12]; __pyx_result.newFlags = __pyx_state[13]; __pyx_result.parent = __pyx_state[14]; __pyx_result.preferences = __pyx_state[15]; __pyx_result.qualifiers = __pyx_state[16]; __pyx_result.rtf = __pyx_state[17]; __pyx_result.settings = __pyx_state[18]; __pyx_result.strings = __pyx_state[19]; __pyx_result.subApplication = __pyx_state[20]; __pyx_result.text = __pyx_state[21]; __pyx_result.values = __pyx_state[22]; __pyx_result.version = __pyx_state[23]
 *     if len(__pyx_state) > 24 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[24])             # <<<<<<<<<<<<<<
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_update); if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_7 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 24, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_9, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_ObjectCommon__set_state(ObjectCommon __pyx_result, tuple __pyx_state):
 *     __pyx_result.animations = __pyx_state[0]; __pyx_result.backColour = __pyx_state[1]; __pyx_result.counter = __pyx_state[2]; __pyx_result.counters = __pyx_state[3]; __pyx_result.extensionData = __pyx_state[4]; __pyx_result.extensionId = __pyx_state[5]; __pyx_result.extensionPrivate = __pyx_state[6]; __pyx_result.extensionVersion = __pyx_state[7]; __pyx_result.fadeIn = __pyx_state[8]; __pyx_result.fadeOut = __pyx_state[9]; __pyx_result.flags = __pyx_state[10]; __pyx_result.identifier = __pyx_state[11]; __pyx_result.movements = __pyx_state[12]; __pyx_result.newFlags = __pyx_state[13]; __pyx_result.parent = __pyx_state[14]; __pyx_result.preferences = __pyx_state[15]; __pyx_result.qualifiers = __pyx_state[16]; __pyx_result.rtf = __pyx_state[17]; __pyx_result.settings = __pyx_state[18]; __pyx_result.strings = __pyx_state[19]; __pyx_result.subApplication = __pyx_state[20]; __pyx_result.text = __pyx_state[21]; __pyx_result.values = __pyx_state[22]; __pyx_result.version = __pyx_state[23]
 *     if len(__pyx_state) > 24 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[24])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_ObjectCommon__set_state(<ObjectCommon> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_ObjectCommon__set_state(ObjectCommon __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.animations = __pyx_state[0]; __pyx_result.backColour = __pyx_state[1]; __pyx_result.counter = __pyx_state[2]; __pyx_result.counters = __pyx_state[3]; __pyx_result.extensionData = __pyx_state[4]; __pyx_result.extensionId = __pyx_state[5]; __pyx_result.extensionPrivate = __pyx_state[6]; __pyx_result.extensionVersion = __pyx_state[7]; __pyx_result.fadeIn = __pyx_state[8]; __pyx_result.fadeOut = __pyx_state[9]; __pyx_result.flags = __pyx_state[10]; __pyx_result.identifier = __pyx_state[11]; __pyx_result.movements = __pyx_state[12]; __pyx_result.newFlags = __pyx_state[13]; __pyx_result.parent = __pyx_state[14]; __pyx_result.preferences = __pyx_state[15]; __pyx_result.qualifiers = __pyx_state[16]; __pyx_result.rtf = __pyx_state[17]; __pyx_result.settings = __pyx_state[18]; __pyx_result.strings = __pyx_state[19]; __pyx_result.subApplication = __pyx_state[20]; __pyx_result.text = __pyx_state[21]; __pyx_result.values = __pyx_state[22]; __pyx_result.version = __pyx_state[23]
 *     if len(__pyx_state) > 24 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("mmfparser.data.chunkloaders.objects.__pyx_unpickle_ObjectCommon__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AlterableValues __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AlterableValues;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AlterableValues(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AlterableValues;
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AlterableValues(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->items);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AlterableValues);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AlterableValues(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AlterableValues)); if (e) return e;
  if (p->items) {
    e = (*v)(p->items, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AlterableValues(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AlterableValues);
  tmp = ((PyObject*)p->items);
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_items(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_items(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5items_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_AlterableValues[] = {
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_1read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_3write, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_AlterableValues[] = {
  {(char *)"items", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_items, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_items, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.AlterableValues", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableValues), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AlterableValues, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AlterableValues, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AlterableValues, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_AlterableValues, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_AlterableValues, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AlterableValues, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings;
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->items);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings)); if (e) return e;
  if (p->items) {
    e = (*v)(p->items, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings);
  tmp = ((PyObject*)p->items);
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_items(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_items(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5items_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_3read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_5write, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings[] = {
  {(char *)"items", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_items, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_items, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.AlterableStrings", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Shape __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Shape;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Shape(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Shape;
  p->borderColor = Py_None; Py_INCREF(Py_None);
  p->lineFlags = Py_None; Py_INCREF(Py_None);
  p->color1 = Py_None; Py_INCREF(Py_None);
  p->color2 = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Shape(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->borderColor);
  Py_CLEAR(p->lineFlags);
  Py_CLEAR(p->color1);
  Py_CLEAR(p->color2);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Shape);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Shape(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Shape)); if (e) return e;
  if (p->borderColor) {
    e = (*v)(p->borderColor, a); if (e) return e;
  }
  if (p->lineFlags) {
    e = (*v)(p->lineFlags, a); if (e) return e;
  }
  if (p->color1) {
    e = (*v)(p->color1, a); if (e) return e;
  }
  if (p->color2) {
    e = (*v)(p->color2, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Shape(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Shape);
  tmp = ((PyObject*)p->borderColor);
  p->borderColor = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->lineFlags);
  p->lineFlags = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->color1);
  p->color1 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->color2);
  p->color2 = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_borderSize(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_borderSize(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_10borderSize_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_borderColor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_borderColor(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11borderColor_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_shape(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_shape(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5shape_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_fillType(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_fillType(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_8fillType_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_lineFlags(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_lineFlags(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9lineFlags_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_color1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_color1(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color1_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_color2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_color2(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_6color2_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_gradientFlags(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_gradientFlags(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_13gradientFlags_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_image(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_image(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5image_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Shape[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_3read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_5write, METH_O, 0},
  {"getImage", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_7getImage, METH_O, 0},
  {"getGradientType", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_9getGradientType, METH_NOARGS, 0},
  {"getFill", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_11getFill, METH_NOARGS, 0},
  {"getShape", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_13getShape, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_15__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_5Shape_17__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Shape[] = {
  {(char *)"borderSize", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_borderSize, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_borderSize, (char *)0, 0},
  {(char *)"borderColor", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_borderColor, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_borderColor, (char *)0, 0},
  {(char *)"shape", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_shape, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_shape, (char *)0, 0},
  {(char *)"fillType", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_fillType, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_fillType, (char *)0, 0},
  {(char *)"lineFlags", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_lineFlags, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_lineFlags, (char *)0, 0},
  {(char *)"color1", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_color1, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_color1, (char *)0, 0},
  {(char *)"color2", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_color2, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_color2, (char *)0, 0},
  {(char *)"gradientFlags", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_gradientFlags, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_gradientFlags, (char *)0, 0},
  {(char *)"image", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_image, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_5Shape_image, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.Shape", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Shape), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Shape, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Shape, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Shape, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Shape, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Shape, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Shape, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects__Background __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects__Background;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects__Background(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects__Background;
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects__Background(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects__Background);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects__Background(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects__Background)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects__Background(PyObject *o) {
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects__Background);
  return 0;
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects__Background[] = {
  {"getCollisionMode", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_1getCollisionMode, METH_NOARGS, 0},
  {"getObstacleType", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_3getObstacleType, METH_NOARGS, 0},
  {"getImage", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_5getImage, METH_O, 0},
  {"isBackground", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_7isBackground, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_11_Background_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects._Background", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects__Background), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects__Background, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects__Background, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects__Background, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects__Background, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects__Background, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *p;
  PyObject *o = __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects__Background(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop;
  p->shape = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->shape);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects__Background(o);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)o;
  e = __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects__Background(o, v, a); if (e) return e;
  if (p->shape) {
    e = (*v)(p->shape, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop *)o;
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects__Background(o);
  tmp = ((PyObject*)p->shape);
  p->shape = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_obstacleType(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_obstacleType(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_12obstacleType_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_collisionMode(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_collisionMode(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_13collisionMode_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_shape(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_shape(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5shape_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop[] = {
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_1read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_3write, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop[] = {
  {(char *)"obstacleType", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_obstacleType, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_obstacleType, (char *)0, 0},
  {(char *)"collisionMode", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_collisionMode, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_collisionMode, (char *)0, 0},
  {(char *)"width", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_width, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_width, (char *)0, 0},
  {(char *)"height", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_height, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_height, (char *)0, 0},
  {(char *)"shape", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_shape, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_shape, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.QuickBackdrop", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Backdrop __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Backdrop;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Backdrop(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *p;
  PyObject *o = __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects__Background(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Backdrop;
  return o;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_obstacleType(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_obstacleType(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_12obstacleType_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_collisionMode(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_collisionMode(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_13collisionMode_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_image(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_image(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5image_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Backdrop[] = {
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_1read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_3write, METH_O, 0},
  {"getImage", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_5getImage, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Backdrop[] = {
  {(char *)"obstacleType", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_obstacleType, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_obstacleType, (char *)0, 0},
  {(char *)"collisionMode", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_collisionMode, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_collisionMode, (char *)0, 0},
  {(char *)"width", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_width, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_width, (char *)0, 0},
  {(char *)"height", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_height, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_height, (char *)0, 0},
  {(char *)"image", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_image, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_image, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.Backdrop", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Backdrop), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects__Background, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects__Background, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects__Background, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Backdrop, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Backdrop, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Backdrop, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection;
  p->frames = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->frames);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection)); if (e) return e;
  if (p->frames) {
    e = (*v)(p->frames, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection);
  tmp = ((PyObject*)p->frames);
  p->frames = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_frames(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_frames(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6frames_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_minSpeed(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_minSpeed(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8minSpeed_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_maxSpeed(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_maxSpeed(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_8maxSpeed_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_hasSingle(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_hasSingle(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9hasSingle_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_repeat(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_repeat(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6repeat_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_backTo(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_backTo(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_6backTo_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_3read, METH_O, 0},
  {"getImages", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_5getImages, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_7write, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection[] = {
  {(char *)"frames", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_frames, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_frames, (char *)0, 0},
  {(char *)"minSpeed", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_minSpeed, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_minSpeed, (char *)0, 0},
  {(char *)"maxSpeed", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_maxSpeed, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_maxSpeed, (char *)0, 0},
  {(char *)"hasSingle", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_hasSingle, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_hasSingle, (char *)0, 0},
  {(char *)"repeat", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_repeat, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_repeat, (char *)0, 0},
  {(char *)"backTo", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_backTo, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_backTo, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.AnimationDirection", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Animation __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Animation;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Animation(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Animation;
  p->directions = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->loadedDirections = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Animation(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->directions);
  Py_CLEAR(p->loadedDirections);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Animation);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Animation(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Animation)); if (e) return e;
  if (p->directions) {
    e = (*v)(p->directions, a); if (e) return e;
  }
  if (p->loadedDirections) {
    e = (*v)(p->loadedDirections, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Animation(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Animation);
  tmp = ((PyObject*)p->directions);
  p->directions = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->loadedDirections);
  p->loadedDirections = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_index(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_index(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_5index_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_directions(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_directions(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_10directions_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_loadedDirections(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_loadedDirections(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_16loadedDirections_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Animation[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_3read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_5write, METH_O, 0},
  {"getIndex", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_7getIndex, METH_NOARGS, 0},
  {"getName", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_9getName, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Animation_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Animation[] = {
  {(char *)"index", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_index, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_index, (char *)0, 0},
  {(char *)"directions", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_directions, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_directions, (char *)0, 0},
  {(char *)"loadedDirections", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_loadedDirections, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Animation_loadedDirections, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.Animation", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Animation), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Animation, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Animation, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Animation, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Animation, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Animation, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Animation, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader;
  p->loadedAnimations = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->loadedAnimations);
  Py_CLEAR(p->items);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader)); if (e) return e;
  if (p->loadedAnimations) {
    e = (*v)(p->loadedAnimations, a); if (e) return e;
  }
  if (p->items) {
    e = (*v)(p->items, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader);
  tmp = ((PyObject*)p->loadedAnimations);
  p->loadedAnimations = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->items);
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_loadedAnimations(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_loadedAnimations(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_16loadedAnimations_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_items(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_items(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5items_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_3read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_5write, METH_O, 0},
  {"fromName", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_7fromName, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader[] = {
  {(char *)"loadedAnimations", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_loadedAnimations, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_loadedAnimations, (char *)0, 0},
  {(char *)"items", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_items, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_items, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.AnimationHeader", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Counters __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Counters;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Counters(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Counters;
  p->frames = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->shape = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Counters(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->frames);
  Py_CLEAR(p->shape);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Counters);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Counters(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Counters)); if (e) return e;
  if (p->frames) {
    e = (*v)(p->frames, a); if (e) return e;
  }
  if (p->shape) {
    e = (*v)(p->shape, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Counters(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Counters);
  tmp = ((PyObject*)p->frames);
  p->frames = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->shape);
  p->shape = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_player(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_player(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6player_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_displayType(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_displayType(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11displayType_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_flags(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_flags(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5flags_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_inverse(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_inverse(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_7inverse_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_font(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_font(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_4font_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_frames(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_frames(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_6frames_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_shape(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_shape(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5shape_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_integerDigits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_integerDigits(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_13integerDigits_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_formatFloat(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_formatFloat(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11formatFloat_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_formatFloats(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_formatFloats(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_12formatFloats_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_floatDigits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_floatDigits(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11floatDigits_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_useDecimals(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_useDecimals(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11useDecimals_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_decimals(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_decimals(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8decimals_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_addNulls(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_addNulls(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_8addNulls_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Counters[] = {
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_1read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_3write, METH_O, 0},
  {"getFont", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_5getFont, METH_O, 0},
  {"getImage", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_7getImage, METH_VARARGS|METH_KEYWORDS, 0},
  {"getDisplayType", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_9getDisplayType, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_8Counters_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Counters[] = {
  {(char *)"width", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_width, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_width, (char *)0, 0},
  {(char *)"height", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_height, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_height, (char *)0, 0},
  {(char *)"player", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_player, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_player, (char *)0, 0},
  {(char *)"displayType", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_displayType, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_displayType, (char *)0, 0},
  {(char *)"flags", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_flags, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_flags, (char *)0, 0},
  {(char *)"inverse", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_inverse, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_inverse, (char *)0, 0},
  {(char *)"font", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_font, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_font, (char *)0, 0},
  {(char *)"frames", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_frames, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_frames, (char *)0, 0},
  {(char *)"shape", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_shape, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_shape, (char *)0, 0},
  {(char *)"integerDigits", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_integerDigits, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_integerDigits, (char *)0, 0},
  {(char *)"formatFloat", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_formatFloat, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_formatFloat, (char *)0, 0},
  {(char *)"formatFloats", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_formatFloats, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_formatFloats, (char *)0, 0},
  {(char *)"floatDigits", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_floatDigits, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_floatDigits, (char *)0, 0},
  {(char *)"useDecimals", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_useDecimals, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_useDecimals, (char *)0, 0},
  {(char *)"decimals", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_decimals, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_decimals, (char *)0, 0},
  {(char *)"addNulls", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_addNulls, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_8Counters_addNulls, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.Counters", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counters), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Counters, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Counters, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Counters, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Counters, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Counters, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Counters, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Paragraph __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Paragraph;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Paragraph(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Paragraph;
  p->flags = Py_None; Py_INCREF(Py_None);
  p->color = Py_None; Py_INCREF(Py_None);
  p->value = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Paragraph(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->flags);
  Py_CLEAR(p->color);
  Py_CLEAR(p->value);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Paragraph);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Paragraph(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Paragraph)); if (e) return e;
  if (p->flags) {
    e = (*v)(p->flags, a); if (e) return e;
  }
  if (p->color) {
    e = (*v)(p->color, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Paragraph(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Paragraph);
  tmp = ((PyObject*)p->flags);
  p->flags = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->color);
  p->color = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_font(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_font(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_4font_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_flags(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_flags(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5flags_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_color(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_color(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5color_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_value(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_value(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5value_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Paragraph[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_3read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_5write, METH_O, 0},
  {"getFont", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_7getFont, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Paragraph[] = {
  {(char *)"font", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_font, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_font, (char *)0, 0},
  {(char *)"flags", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_flags, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_flags, (char *)0, 0},
  {(char *)"color", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_color, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_color, (char *)0, 0},
  {(char *)"value", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_value, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_value, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.Paragraph", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Paragraph), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Paragraph, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Paragraph, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Paragraph, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Paragraph, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Paragraph, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Paragraph, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Text __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Text;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Text(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Text;
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Text(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->items);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Text);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Text(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Text)); if (e) return e;
  if (p->items) {
    e = (*v)(p->items, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Text(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Text);
  tmp = ((PyObject*)p->items);
  p->items = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_4Text_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5width_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_4Text_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_4Text_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_6height_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_4Text_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_4Text_items(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_4Text_items(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5items_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Text[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_3read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_5write, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_4Text_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Text[] = {
  {(char *)"width", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_4Text_width, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_4Text_width, (char *)0, 0},
  {(char *)"height", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_4Text_height, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_4Text_height, (char *)0, 0},
  {(char *)"items", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_4Text_items, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_4Text_items, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.Text", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Text), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Text, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Text, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Text, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Text, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Text, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Text, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_RTFObject __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_RTFObject;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_RTFObject(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_RTFObject;
  p->options = Py_None; Py_INCREF(Py_None);
  p->backColor = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->value = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_RTFObject(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->options);
  Py_CLEAR(p->backColor);
  Py_CLEAR(p->value);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_RTFObject);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_RTFObject(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_RTFObject)); if (e) return e;
  if (p->options) {
    e = (*v)(p->options, a); if (e) return e;
  }
  if (p->backColor) {
    e = (*v)(p->backColor, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_RTFObject(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_RTFObject);
  tmp = ((PyObject*)p->options);
  p->options = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->backColor);
  p->backColor = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_version(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_version(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7version_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_options(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_options(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7options_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_backColor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_backColor(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9backColor_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_value(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_value(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5value_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_RTFObject[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_3read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_5write, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_RTFObject[] = {
  {(char *)"version", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_version, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_version, (char *)0, 0},
  {(char *)"options", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_options, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_options, (char *)0, 0},
  {(char *)"backColor", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_backColor, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_backColor, (char *)0, 0},
  {(char *)"width", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_width, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_width, (char *)0, 0},
  {(char *)"height", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_height, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_height, (char *)0, 0},
  {(char *)"value", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_value, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_value, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.RTFObject", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_RTFObject), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_RTFObject, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_RTFObject, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_RTFObject, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_RTFObject, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_RTFObject, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_RTFObject, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_SubApplication __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_SubApplication;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_SubApplication(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_SubApplication;
  p->options = Py_None; Py_INCREF(Py_None);
  p->name = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_SubApplication(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->options);
  Py_CLEAR(p->name);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_SubApplication);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_SubApplication(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_SubApplication)); if (e) return e;
  if (p->options) {
    e = (*v)(p->options, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_SubApplication(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_SubApplication);
  tmp = ((PyObject*)p->options);
  p->options = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_width(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_width(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5width_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_height(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_6height_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_version(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_version(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7version_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_startFrame(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_startFrame(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10startFrame_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_options(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_options(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7options_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_iconOffset(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_iconOffset(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_10iconOffset_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_name(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_4name_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_SubApplication[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_3read, METH_O, 0},
  {"getDockedPosition", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_5getDockedPosition, METH_NOARGS, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_7write, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_SubApplication[] = {
  {(char *)"width", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_width, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_width, (char *)0, 0},
  {(char *)"height", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_height, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_height, (char *)0, 0},
  {(char *)"version", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_version, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_version, (char *)0, 0},
  {(char *)"startFrame", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_startFrame, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_startFrame, (char *)0, 0},
  {(char *)"options", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_options, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_options, (char *)0, 0},
  {(char *)"iconOffset", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_iconOffset, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_iconOffset, (char *)0, 0},
  {(char *)"name", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_name, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_name, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.SubApplication", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_SubApplication), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_SubApplication, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_SubApplication, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_SubApplication, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_SubApplication, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_SubApplication, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_SubApplication, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_Counter __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Counter;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Counter(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Counter;
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Counter(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Counter);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Counter(PyObject *o, visitproc v, void *a) {
  int e;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Counter)); if (e) return e;
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Counter(PyObject *o) {
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Counter);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_initial(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_initial(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7initial_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_minimum(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_minimum(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7minimum_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_maximum(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_maximum(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7maximum_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Counter[] = {
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_1read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_3write, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_7Counter_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Counter[] = {
  {(char *)"initial", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_initial, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_initial, (char *)0, 0},
  {(char *)"minimum", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_minimum, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_minimum, (char *)0, 0},
  {(char *)"maximum", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_maximum, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_7Counter_maximum, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.Counter", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_Counter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_Counter, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_Counter, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_Counter, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_Counter, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_Counter, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_Counter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon;

static PyObject *__pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *p;
  PyObject *o = __pyx_ptype_9mmfparser_6loader_DataLoader->tp_new(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon;
  p->newFlags = Py_None; Py_INCREF(Py_None);
  p->flags = Py_None; Py_INCREF(Py_None);
  p->preferences = Py_None; Py_INCREF(Py_None);
  p->movements = Py_None; Py_INCREF(Py_None);
  p->animations = Py_None; Py_INCREF(Py_None);
  p->qualifiers = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->backColour = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->values = Py_None; Py_INCREF(Py_None);
  p->strings = Py_None; Py_INCREF(Py_None);
  p->text = Py_None; Py_INCREF(Py_None);
  p->subApplication = Py_None; Py_INCREF(Py_None);
  p->rtf = Py_None; Py_INCREF(Py_None);
  p->counters = Py_None; Py_INCREF(Py_None);
  p->counter = Py_None; Py_INCREF(Py_None);
  p->extensionVersion = Py_None; Py_INCREF(Py_None);
  p->extensionId = Py_None; Py_INCREF(Py_None);
  p->extensionPrivate = Py_None; Py_INCREF(Py_None);
  p->extensionData = Py_None; Py_INCREF(Py_None);
  p->fadeIn = Py_None; Py_INCREF(Py_None);
  p->fadeOut = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon(PyObject *o) {
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->newFlags);
  Py_CLEAR(p->flags);
  Py_CLEAR(p->preferences);
  Py_CLEAR(p->movements);
  Py_CLEAR(p->animations);
  Py_CLEAR(p->qualifiers);
  Py_CLEAR(p->backColour);
  Py_CLEAR(p->values);
  Py_CLEAR(p->strings);
  Py_CLEAR(p->text);
  Py_CLEAR(p->subApplication);
  Py_CLEAR(p->rtf);
  Py_CLEAR(p->counters);
  Py_CLEAR(p->counter);
  Py_CLEAR(p->extensionVersion);
  Py_CLEAR(p->extensionId);
  Py_CLEAR(p->extensionPrivate);
  Py_CLEAR(p->extensionData);
  Py_CLEAR(p->fadeIn);
  Py_CLEAR(p->fadeOut);
  PyObject_GC_Track(o);
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_dealloc(o); else __Pyx_call_next_tp_dealloc(o, __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon);
}

static int __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)o;
  e = ((likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) ? ((__pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse) ? __pyx_ptype_9mmfparser_6loader_DataLoader->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon)); if (e) return e;
  if (p->newFlags) {
    e = (*v)(p->newFlags, a); if (e) return e;
  }
  if (p->flags) {
    e = (*v)(p->flags, a); if (e) return e;
  }
  if (p->preferences) {
    e = (*v)(p->preferences, a); if (e) return e;
  }
  if (p->movements) {
    e = (*v)(p->movements, a); if (e) return e;
  }
  if (p->animations) {
    e = (*v)(p->animations, a); if (e) return e;
  }
  if (p->qualifiers) {
    e = (*v)(p->qualifiers, a); if (e) return e;
  }
  if (p->backColour) {
    e = (*v)(p->backColour, a); if (e) return e;
  }
  if (p->values) {
    e = (*v)(p->values, a); if (e) return e;
  }
  if (p->strings) {
    e = (*v)(p->strings, a); if (e) return e;
  }
  if (p->text) {
    e = (*v)(p->text, a); if (e) return e;
  }
  if (p->subApplication) {
    e = (*v)(p->subApplication, a); if (e) return e;
  }
  if (p->rtf) {
    e = (*v)(p->rtf, a); if (e) return e;
  }
  if (p->counters) {
    e = (*v)(p->counters, a); if (e) return e;
  }
  if (p->counter) {
    e = (*v)(p->counter, a); if (e) return e;
  }
  if (p->extensionVersion) {
    e = (*v)(p->extensionVersion, a); if (e) return e;
  }
  if (p->extensionId) {
    e = (*v)(p->extensionId, a); if (e) return e;
  }
  if (p->extensionPrivate) {
    e = (*v)(p->extensionPrivate, a); if (e) return e;
  }
  if (p->extensionData) {
    e = (*v)(p->extensionData, a); if (e) return e;
  }
  if (p->fadeIn) {
    e = (*v)(p->fadeIn, a); if (e) return e;
  }
  if (p->fadeOut) {
    e = (*v)(p->fadeOut, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *p = (struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon *)o;
  if (likely(__pyx_ptype_9mmfparser_6loader_DataLoader)) { if (__pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear) __pyx_ptype_9mmfparser_6loader_DataLoader->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon);
  tmp = ((PyObject*)p->newFlags);
  p->newFlags = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->flags);
  p->flags = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->preferences);
  p->preferences = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->movements);
  p->movements = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->animations);
  p->animations = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->qualifiers);
  p->qualifiers = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->backColour);
  p->backColour = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->values);
  p->values = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->strings);
  p->strings = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->text);
  p->text = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->subApplication);
  p->subApplication = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->rtf);
  p->rtf = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->counters);
  p->counters = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->counter);
  p->counter = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->extensionVersion);
  p->extensionVersion = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->extensionId);
  p->extensionId = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->extensionPrivate);
  p->extensionPrivate = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->extensionData);
  p->extensionData = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->fadeIn);
  p->fadeIn = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->fadeOut);
  p->fadeOut = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_newFlags(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_newFlags(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8newFlags_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_flags(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_flags(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5flags_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_preferences(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_preferences(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11preferences_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_version(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_version(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7version_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_movements(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_movements(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9movements_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_animations(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_animations(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10animations_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_qualifiers(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_qualifiers(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10qualifiers_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_identifier(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_identifier(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10identifier_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_backColour(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_backColour(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_10backColour_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_values(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_values(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6values_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_strings(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_strings(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7strings_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_text(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_text(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_4text_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_subApplication(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_subApplication(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_14subApplication_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_rtf(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_rtf(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3rtf_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_counters(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_counters(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_8counters_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_counter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_counter(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7counter_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionVersion(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionVersion(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionVersion_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionId(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11extensionId_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionPrivate(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionPrivate(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_16extensionPrivate_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionData(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionData(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_13extensionData_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_fadeIn(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_fadeIn(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_6fadeIn_5__del__(o);
  }
}

static PyObject *__pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_fadeOut(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_1__get__(o);
}

static int __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_fadeOut(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_3__set__(o, v);
  }
  else {
    return __pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7fadeOut_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon[] = {
  {"initialize", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_1initialize, METH_NOARGS, 0},
  {"read", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_3read, METH_O, 0},
  {"write", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_5write, METH_O, 0},
  {"isBackground", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_7isBackground, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon[] = {
  {(char *)"newFlags", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_newFlags, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_newFlags, (char *)0, 0},
  {(char *)"flags", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_flags, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_flags, (char *)0, 0},
  {(char *)"preferences", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_preferences, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_preferences, (char *)0, 0},
  {(char *)"version", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_version, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_version, (char *)0, 0},
  {(char *)"movements", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_movements, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_movements, (char *)0, 0},
  {(char *)"animations", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_animations, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_animations, (char *)0, 0},
  {(char *)"qualifiers", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_qualifiers, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_qualifiers, (char *)0, 0},
  {(char *)"identifier", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_identifier, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_identifier, (char *)0, 0},
  {(char *)"backColour", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_backColour, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_backColour, (char *)0, 0},
  {(char *)"values", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_values, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_values, (char *)0, 0},
  {(char *)"strings", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_strings, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_strings, (char *)0, 0},
  {(char *)"text", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_text, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_text, (char *)0, 0},
  {(char *)"subApplication", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_subApplication, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_subApplication, (char *)0, 0},
  {(char *)"rtf", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_rtf, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_rtf, (char *)0, 0},
  {(char *)"counters", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_counters, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_counters, (char *)0, 0},
  {(char *)"counter", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_counter, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_counter, (char *)0, 0},
  {(char *)"extensionVersion", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionVersion, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionVersion, (char *)0, 0},
  {(char *)"extensionId", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionId, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionId, (char *)0, 0},
  {(char *)"extensionPrivate", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionPrivate, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionPrivate, (char *)0, 0},
  {(char *)"extensionData", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionData, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_extensionData, (char *)0, 0},
  {(char *)"fadeIn", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_fadeIn, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_fadeIn, (char *)0, 0},
  {(char *)"fadeOut", __pyx_getprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_fadeOut, __pyx_setprop_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_fadeOut, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon = {
  PyVarObject_HEAD_INIT(0, 0)
  "mmfparser.data.chunkloaders.objects.ObjectCommon", /*tp_name*/
  sizeof(struct __pyx_obj_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon, /*tp_traverse*/
  __pyx_tp_clear_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_objects(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_objects},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "objects",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_b_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 0, 0},
  {&__pyx_kp_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 0},
  {&__pyx_kp_s_0, __pyx_k_0, sizeof(__pyx_k_0), 0, 0, 1, 0},
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
  {&__pyx_kp_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 0},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
  {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
  {&__pyx_kp_s_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 0, 1, 0},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
  {&__pyx_n_s_ANIMATION, __pyx_k_ANIMATION, sizeof(__pyx_k_ANIMATION), 0, 0, 1, 1},
  {&__pyx_n_s_ANIMATION_ALTERNATIVES, __pyx_k_ANIMATION_ALTERNATIVES, sizeof(__pyx_k_ANIMATION_ALTERNATIVES), 0, 0, 1, 1},
  {&__pyx_n_s_ANIMATION_NAMES, __pyx_k_ANIMATION_NAMES, sizeof(__pyx_k_ANIMATION_NAMES), 0, 0, 1, 1},
  {&__pyx_n_s_APPEARING, __pyx_k_APPEARING, sizeof(__pyx_k_APPEARING), 0, 0, 1, 1},
  {&__pyx_n_s_AlterableStrings, __pyx_k_AlterableStrings, sizeof(__pyx_k_AlterableStrings), 0, 0, 1, 1},
  {&__pyx_n_s_AlterableValues, __pyx_k_AlterableValues, sizeof(__pyx_k_AlterableValues), 0, 0, 1, 1},
  {&__pyx_n_s_Animation, __pyx_k_Animation, sizeof(__pyx_k_Animation), 0, 0, 1, 1},
  {&__pyx_n_s_AnimationDirection, __pyx_k_AnimationDirection, sizeof(__pyx_k_AnimationDirection), 0, 0, 1, 1},
  {&__pyx_n_s_AnimationHeader, __pyx_k_AnimationHeader, sizeof(__pyx_k_AnimationHeader), 0, 0, 1, 1},
  {&__pyx_n_s_Animations, __pyx_k_Animations, sizeof(__pyx_k_Animations), 0, 0, 1, 1},
  {&__pyx_n_s_Appearing, __pyx_k_Appearing, sizeof(__pyx_k_Appearing), 0, 0, 1, 1},
  {&__pyx_n_s_AppletProblems, __pyx_k_AppletProblems, sizeof(__pyx_k_AppletProblems), 0, 0, 1, 1},
  {&__pyx_n_s_AttributeError, __pyx_k_AttributeError, sizeof(__pyx_k_AttributeError), 0, 0, 1, 1},
  {&__pyx_n_s_AutomaticRotation, __pyx_k_AutomaticRotation, sizeof(__pyx_k_AutomaticRotation), 0, 0, 1, 1},
  {&__pyx_n_s_BOUNCING, __pyx_k_BOUNCING, sizeof(__pyx_k_BOUNCING), 0, 0, 1, 1},
  {&__pyx_n_s_BOX_COLLISION, __pyx_k_BOX_COLLISION, sizeof(__pyx_k_BOX_COLLISION), 0, 0, 1, 1},
  {&__pyx_n_s_BackEffects, __pyx_k_BackEffects, sizeof(__pyx_k_BackEffects), 0, 0, 1, 1},
  {&__pyx_n_s_Backdrop, __pyx_k_Backdrop, sizeof(__pyx_k_Backdrop), 0, 0, 1, 1},
  {&__pyx_n_s_Background, __pyx_k_Background, sizeof(__pyx_k_Background), 0, 0, 1, 1},
  {&__pyx_n_s_Background_2, __pyx_k_Background_2, sizeof(__pyx_k_Background_2), 0, 0, 1, 1},
  {&__pyx_n_s_Backsave, __pyx_k_Backsave, sizeof(__pyx_k_Backsave), 0, 0, 1, 1},
  {&__pyx_n_s_BitDict, __pyx_k_BitDict, sizeof(__pyx_k_BitDict), 0, 0, 1, 1},
  {&__pyx_n_s_Border, __pyx_k_Border, sizeof(__pyx_k_Border), 0, 0, 1, 1},
  {&__pyx_n_s_Bottom, __pyx_k_Bottom, sizeof(__pyx_k_Bottom), 0, 0, 1, 1},
  {&__pyx_n_s_BottomAligned, __pyx_k_BottomAligned, sizeof(__pyx_k_BottomAligned), 0, 0, 1, 1},
  {&__pyx_n_s_Bouncing, __pyx_k_Bouncing, sizeof(__pyx_k_Bouncing), 0, 0, 1, 1},
  {&__pyx_n_s_Box, __pyx_k_Box, sizeof(__pyx_k_Box), 0, 0, 1, 1},
  {&__pyx_n_s_CLIMBING, __pyx_k_CLIMBING, sizeof(__pyx_k_CLIMBING), 0, 0, 1, 1},
  {&__pyx_n_s_COLLISION_MODES, __pyx_k_COLLISION_MODES, sizeof(__pyx_k_COLLISION_MODES), 0, 0, 1, 1},
  {&__pyx_n_s_COUNTER, __pyx_k_COUNTER, sizeof(__pyx_k_COUNTER), 0, 0, 1, 1},
  {&__pyx_n_s_COUNTER_FRAMES, __pyx_k_COUNTER_FRAMES, sizeof(__pyx_k_COUNTER_FRAMES), 0, 0, 1, 1},
  {&__pyx_n_s_CROUCH_DOWN, __pyx_k_CROUCH_DOWN, sizeof(__pyx_k_CROUCH_DOWN), 0, 0, 1, 1},
  {&__pyx_n_s_Caption, __pyx_k_Caption, sizeof(__pyx_k_Caption), 0, 0, 1, 1},
  {&__pyx_n_s_Climbing, __pyx_k_Climbing, sizeof(__pyx_k_Climbing), 0, 0, 1, 1},
  {&__pyx_n_s_ClipSiblings, __pyx_k_ClipSiblings, sizeof(__pyx_k_ClipSiblings), 0, 0, 1, 1},
  {&__pyx_n_s_CollisionBox, __pyx_k_CollisionBox, sizeof(__pyx_k_CollisionBox), 0, 0, 1, 1},
  {&__pyx_n_s_Correct, __pyx_k_Correct, sizeof(__pyx_k_Correct), 0, 0, 1, 1},
  {&__pyx_n_s_Counter, __pyx_k_Counter, sizeof(__pyx_k_Counter), 0, 0, 1, 1},
  {&__pyx_n_s_Counters, __pyx_k_Counters, sizeof(__pyx_k_Counters), 0, 0, 1, 1},
  {&__pyx_kp_s_Crouch_down, __pyx_k_Crouch_down, sizeof(__pyx_k_Crouch_down), 0, 0, 1, 0},
  {&__pyx_n_s_CustomableSize, __pyx_k_CustomableSize, sizeof(__pyx_k_CustomableSize), 0, 0, 1, 1},
  {&__pyx_n_s_DISAPPEARING, __pyx_k_DISAPPEARING, sizeof(__pyx_k_DISAPPEARING), 0, 0, 1, 1},
  {&__pyx_n_s_DISPLAY_NAMES, __pyx_k_DISPLAY_NAMES, sizeof(__pyx_k_DISPLAY_NAMES), 0, 0, 1, 1},
  {&__pyx_n_s_DOCK_POSITIONS, __pyx_k_DOCK_POSITIONS, sizeof(__pyx_k_DOCK_POSITIONS), 0, 0, 1, 1},
  {&__pyx_n_s_DialogFrame, __pyx_k_DialogFrame, sizeof(__pyx_k_DialogFrame), 0, 0, 1, 1},
  {&__pyx_n_s_DisableClose, __pyx_k_DisableClose, sizeof(__pyx_k_DisableClose), 0, 0, 1, 1},
  {&__pyx_n_s_Disappearing, __pyx_k_Disappearing, sizeof(__pyx_k_Disappearing), 0, 0, 1, 1},
  {&__pyx_n_s_DisplayInFront, __pyx_k_DisplayInFront, sizeof(__pyx_k_DisplayInFront), 0, 0, 1, 1},
  {&__pyx_n_s_DoNotCreateAtStart, __pyx_k_DoNotCreateAtStart, sizeof(__pyx_k_DoNotCreateAtStart), 0, 0, 1, 1},
  {&__pyx_n_s_DoNotSaveBackground, __pyx_k_DoNotSaveBackground, sizeof(__pyx_k_DoNotSaveBackground), 0, 0, 1, 1},
  {&__pyx_n_s_Docked, __pyx_k_Docked, sizeof(__pyx_k_Docked), 0, 0, 1, 1},
  {&__pyx_n_s_Docked1, __pyx_k_Docked1, sizeof(__pyx_k_Docked1), 0, 0, 1, 1},
  {&__pyx_n_s_Docked2, __pyx_k_Docked2, sizeof(__pyx_k_Docked2), 0, 0, 1, 1},
  {&__pyx_n_s_ELLIPSE_SHAPE, __pyx_k_ELLIPSE_SHAPE, sizeof(__pyx_k_ELLIPSE_SHAPE), 0, 0, 1, 1},
  {&__pyx_n_s_Ellipse, __pyx_k_Ellipse, sizeof(__pyx_k_Ellipse), 0, 0, 1, 1},
  {&__pyx_n_s_FALLING, __pyx_k_FALLING, sizeof(__pyx_k_FALLING), 0, 0, 1, 1},
  {&__pyx_n_s_FILL_TYPES, __pyx_k_FILL_TYPES, sizeof(__pyx_k_FILL_TYPES), 0, 0, 1, 1},
  {&__pyx_n_s_FINE_COLLISION, __pyx_k_FINE_COLLISION, sizeof(__pyx_k_FINE_COLLISION), 0, 0, 1, 1},
  {&__pyx_n_s_FadeIn, __pyx_k_FadeIn, sizeof(__pyx_k_FadeIn), 0, 0, 1, 1},
  {&__pyx_n_s_FadeOut, __pyx_k_FadeOut, sizeof(__pyx_k_FadeOut), 0, 0, 1, 1},
  {&__pyx_n_s_FakeCollisions, __pyx_k_FakeCollisions, sizeof(__pyx_k_FakeCollisions), 0, 0, 1, 1},
  {&__pyx_n_s_FakeSprite, __pyx_k_FakeSprite, sizeof(__pyx_k_FakeSprite), 0, 0, 1, 1},
  {&__pyx_n_s_Falling, __pyx_k_Falling, sizeof(__pyx_k_Falling), 0, 0, 1, 1},
  {&__pyx_n_s_Fine, __pyx_k_Fine, sizeof(__pyx_k_Fine), 0, 0, 1, 1},
  {&__pyx_n_s_FineCollisions, __pyx_k_FineCollisions, sizeof(__pyx_k_FineCollisions), 0, 0, 1, 1},
  {&__pyx_n_s_GRADIENT_FILL, __pyx_k_GRADIENT_FILL, sizeof(__pyx_k_GRADIENT_FILL), 0, 0, 1, 1},
  {&__pyx_n_s_GRADIENT_TYPES, __pyx_k_GRADIENT_TYPES, sizeof(__pyx_k_GRADIENT_TYPES), 0, 0, 1, 1},
  {&__pyx_n_s_Global, __pyx_k_Global, sizeof(__pyx_k_Global), 0, 0, 1, 1},
  {&__pyx_n_s_Gradient, __pyx_k_Gradient, sizeof(__pyx_k_Gradient), 0, 0, 1, 1},
  {&__pyx_n_s_HAS_SINGLE_SPEED, __pyx_k_HAS_SINGLE_SPEED, sizeof(__pyx_k_HAS_SINGLE_SPEED), 0, 0, 1, 1},
  {&__pyx_n_s_HIDDEN, __pyx_k_HIDDEN, sizeof(__pyx_k_HIDDEN), 0, 0, 1, 1},
  {&__pyx_n_s_HORIZONTAL_BAR, __pyx_k_HORIZONTAL_BAR, sizeof(__pyx_k_HORIZONTAL_BAR), 0, 0, 1, 1},
  {&__pyx_n_s_HORIZONTAL_GRADIENT, __pyx_k_HORIZONTAL_GRADIENT, sizeof(__pyx_k_HORIZONTAL_GRADIENT), 0, 0, 1, 1},
  {&__pyx_n_s_Hidden, __pyx_k_Hidden, sizeof(__pyx_k_Hidden), 0, 0, 1, 1},
  {&__pyx_n_s_HideOnClose, __pyx_k_HideOnClose, sizeof(__pyx_k_HideOnClose), 0, 0, 1, 1},
  {&__pyx_n_s_Horizontal, __pyx_k_Horizontal, sizeof(__pyx_k_Horizontal), 0, 0, 1, 1},
  {&__pyx_n_s_HorizontalBar, __pyx_k_HorizontalBar, sizeof(__pyx_k_HorizontalBar), 0, 0, 1, 1},
  {&__pyx_n_s_HorizontalCenter, __pyx_k_HorizontalCenter, sizeof(__pyx_k_HorizontalCenter), 0, 0, 1, 1},
  {&__pyx_n_s_HorizontalSlider, __pyx_k_HorizontalSlider, sizeof(__pyx_k_HorizontalSlider), 0, 0, 1, 1},
  {&__pyx_n_s_INVALID_FONT, __pyx_k_INVALID_FONT, sizeof(__pyx_k_INVALID_FONT), 0, 0, 1, 1},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_k_Incompatible_checksums_0x_x_vs_0, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_10, __pyx_k_Incompatible_checksums_0x_x_vs_0_10, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_10), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_11, __pyx_k_Incompatible_checksums_0x_x_vs_0_11, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_11), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_12, __pyx_k_Incompatible_checksums_0x_x_vs_0_12, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_12), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_13, __pyx_k_Incompatible_checksums_0x_x_vs_0_13, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_13), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_14, __pyx_k_Incompatible_checksums_0x_x_vs_0_14, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_14), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_15, __pyx_k_Incompatible_checksums_0x_x_vs_0_15, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_15), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_2, __pyx_k_Incompatible_checksums_0x_x_vs_0_2, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_3, __pyx_k_Incompatible_checksums_0x_x_vs_0_3, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_3), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_4, __pyx_k_Incompatible_checksums_0x_x_vs_0_4, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_4), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_5, __pyx_k_Incompatible_checksums_0x_x_vs_0_5, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_5), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_6, __pyx_k_Incompatible_checksums_0x_x_vs_0_6, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_6), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_7, __pyx_k_Incompatible_checksums_0x_x_vs_0_7, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_7), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_8, __pyx_k_Incompatible_checksums_0x_x_vs_0_8, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_8), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_9, __pyx_k_Incompatible_checksums_0x_x_vs_0_9, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_9), 0, 0, 1, 0},
  {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
  {&__pyx_n_s_InkEffects, __pyx_k_InkEffects, sizeof(__pyx_k_InkEffects), 0, 0, 1, 1},
  {&__pyx_n_s_Internal, __pyx_k_Internal, sizeof(__pyx_k_Internal), 0, 0, 1, 1},
  {&__pyx_n_s_InternalBacksave, __pyx_k_InternalBacksave, sizeof(__pyx_k_InternalBacksave), 0, 0, 1, 1},
  {&__pyx_n_s_InvalidFont, __pyx_k_InvalidFont, sizeof(__pyx_k_InvalidFont), 0, 0, 1, 1},
  {&__pyx_n_s_InverseX, __pyx_k_InverseX, sizeof(__pyx_k_InverseX), 0, 0, 1, 1},
  {&__pyx_n_s_InverseY, __pyx_k_InverseY, sizeof(__pyx_k_InverseY), 0, 0, 1, 1},
  {&__pyx_n_s_JUMPING, __pyx_k_JUMPING, sizeof(__pyx_k_JUMPING), 0, 0, 1, 1},
  {&__pyx_n_s_Jumping, __pyx_k_Jumping, sizeof(__pyx_k_Jumping), 0, 0, 1, 1},
  {&__pyx_n_s_KeyError, __pyx_k_KeyError, sizeof(__pyx_k_KeyError), 0, 0, 1, 1},
  {&__pyx_n_s_Kill, __pyx_k_Kill, sizeof(__pyx_k_Kill), 0, 0, 1, 1},
  {&__pyx_n_s_LADDER_OBSTACLE, __pyx_k_LADDER_OBSTACLE, sizeof(__pyx_k_LADDER_OBSTACLE), 0, 0, 1, 1},
  {&__pyx_n_s_LINE_SHAPE, __pyx_k_LINE_SHAPE, sizeof(__pyx_k_LINE_SHAPE), 0, 0, 1, 1},
  {&__pyx_n_s_LIVES, __pyx_k_LIVES, sizeof(__pyx_k_LIVES), 0, 0, 1, 1},
  {&__pyx_n_s_Ladder, __pyx_k_Ladder, sizeof(__pyx_k_Ladder), 0, 0, 1, 1},
  {&__pyx_n_s_Left, __pyx_k_Left, sizeof(__pyx_k_Left), 0, 0, 1, 1},
  {&__pyx_n_s_Line, __pyx_k_Line, sizeof(__pyx_k_Line), 0, 0, 1, 1},
  {&__pyx_n_s_LoadOnCall, __pyx_k_LoadOnCall, sizeof(__pyx_k_LoadOnCall), 0, 0, 1, 1},
  {&__pyx_n_s_MDIChild, __pyx_k_MDIChild, sizeof(__pyx_k_MDIChild), 0, 0, 1, 1},
  {&__pyx_n_s_MOTIF_FILL, __pyx_k_MOTIF_FILL, sizeof(__pyx_k_MOTIF_FILL), 0, 0, 1, 1},
  {&__pyx_n_s_ManualSleep, __pyx_k_ManualSleep, sizeof(__pyx_k_ManualSleep), 0, 0, 1, 1},
  {&__pyx_n_s_Modal, __pyx_k_Modal, sizeof(__pyx_k_Modal), 0, 0, 1, 1},
  {&__pyx_n_s_Motif, __pyx_k_Motif, sizeof(__pyx_k_Motif), 0, 0, 1, 1},
  {&__pyx_n_s_Movements, __pyx_k_Movements, sizeof(__pyx_k_Movements), 0, 0, 1, 1},
  {&__pyx_n_s_NEW_OBJECT_FLAGS, __pyx_k_NEW_OBJECT_FLAGS, sizeof(__pyx_k_NEW_OBJECT_FLAGS), 0, 0, 1, 1},
  {&__pyx_n_s_NONE_FILL, __pyx_k_NONE_FILL, sizeof(__pyx_k_NONE_FILL), 0, 0, 1, 1},
  {&__pyx_n_s_NONE_OBSTACLE, __pyx_k_NONE_OBSTACLE, sizeof(__pyx_k_NONE_OBSTACLE), 0, 0, 1, 1},
  {&__pyx_n_s_NUMBERS, __pyx_k_NUMBERS, sizeof(__pyx_k_NUMBERS), 0, 0, 1, 1},
  {&__pyx_n_s_NeverKill, __pyx_k_NeverKill, sizeof(__pyx_k_NeverKill), 0, 0, 1, 1},
  {&__pyx_n_s_NeverSleep, __pyx_k_NeverSleep, sizeof(__pyx_k_NeverSleep), 0, 0, 1, 1},
  {&__pyx_n_s_None, __pyx_k_None, sizeof(__pyx_k_None), 0, 0, 1, 1},
  {&__pyx_n_s_Numbers, __pyx_k_Numbers, sizeof(__pyx_k_Numbers), 0, 0, 1, 1},
  {&__pyx_n_s_OBJECT_FLAGS, __pyx_k_OBJECT_FLAGS, sizeof(__pyx_k_OBJECT_FLAGS), 0, 0, 1, 1},
  {&__pyx_n_s_OBJECT_PREFERENCES, __pyx_k_OBJECT_PREFERENCES, sizeof(__pyx_k_OBJECT_PREFERENCES), 0, 0, 1, 1},
  {&__pyx_n_s_OBSTACLE_TYPES, __pyx_k_OBSTACLE_TYPES, sizeof(__pyx_k_OBSTACLE_TYPES), 0, 0, 1, 1},
  {&__pyx_n_s_ObjectCommon, __pyx_k_ObjectCommon, sizeof(__pyx_k_ObjectCommon), 0, 0, 1, 1},
  {&__pyx_n_s_ObstaclePlatform, __pyx_k_ObstaclePlatform, sizeof(__pyx_k_ObstaclePlatform), 0, 0, 1, 1},
  {&__pyx_n_s_ObstacleSolid, __pyx_k_ObstacleSolid, sizeof(__pyx_k_ObstacleSolid), 0, 0, 1, 1},
  {&__pyx_n_s_PARAGRAPH_FLAGS, __pyx_k_PARAGRAPH_FLAGS, sizeof(__pyx_k_PARAGRAPH_FLAGS), 0, 0, 1, 1},
  {&__pyx_n_s_PLATFORM_OBSTACLE, __pyx_k_PLATFORM_OBSTACLE, sizeof(__pyx_k_PLATFORM_OBSTACLE), 0, 0, 1, 1},
  {&__pyx_n_s_Paragraph, __pyx_k_Paragraph, sizeof(__pyx_k_Paragraph), 0, 0, 1, 1},
  {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_Platform, __pyx_k_Platform, sizeof(__pyx_k_Platform), 0, 0, 1, 1},
  {&__pyx_n_s_Popup, __pyx_k_Popup, sizeof(__pyx_k_Popup), 0, 0, 1, 1},
  {&__pyx_n_s_QUESTION, __pyx_k_QUESTION, sizeof(__pyx_k_QUESTION), 0, 0, 1, 1},
  {&__pyx_n_s_QuickBackdrop, __pyx_k_QuickBackdrop, sizeof(__pyx_k_QuickBackdrop), 0, 0, 1, 1},
  {&__pyx_n_s_QuickDisplay, __pyx_k_QuickDisplay, sizeof(__pyx_k_QuickDisplay), 0, 0, 1, 1},
  {&__pyx_n_s_RECTANGLE_SHAPE, __pyx_k_RECTANGLE_SHAPE, sizeof(__pyx_k_RECTANGLE_SHAPE), 0, 0, 1, 1},
  {&__pyx_n_s_RTF, __pyx_k_RTF, sizeof(__pyx_k_RTF), 0, 0, 1, 1},
  {&__pyx_n_s_RTFObject, __pyx_k_RTFObject, sizeof(__pyx_k_RTFObject), 0, 0, 1, 1},
  {&__pyx_n_s_RTF_FLAGS, __pyx_k_RTF_FLAGS, sizeof(__pyx_k_RTF_FLAGS), 0, 0, 1, 1},
  {&__pyx_n_s_RUNNING, __pyx_k_RUNNING, sizeof(__pyx_k_RUNNING), 0, 0, 1, 1},
  {&__pyx_n_s_Rectangle, __pyx_k_Rectangle, sizeof(__pyx_k_Rectangle), 0, 0, 1, 1},
  {&__pyx_n_s_Relief, __pyx_k_Relief, sizeof(__pyx_k_Relief), 0, 0, 1, 1},
  {&__pyx_n_s_Reopen, __pyx_k_Reopen, sizeof(__pyx_k_Reopen), 0, 0, 1, 1},
  {&__pyx_n_s_Resizable, __pyx_k_Resizable, sizeof(__pyx_k_Resizable), 0, 0, 1, 1},
  {&__pyx_n_s_Right, __pyx_k_Right, sizeof(__pyx_k_Right), 0, 0, 1, 1},
  {&__pyx_n_s_RightAligned, __pyx_k_RightAligned, sizeof(__pyx_k_RightAligned), 0, 0, 1, 1},
  {&__pyx_n_s_RunBeforeFadeIn, __pyx_k_RunBeforeFadeIn, sizeof(__pyx_k_RunBeforeFadeIn), 0, 0, 1, 1},
  {&__pyx_n_s_RunEvenIfNotActive, __pyx_k_RunEvenIfNotActive, sizeof(__pyx_k_RunEvenIfNotActive), 0, 0, 1, 1},
  {&__pyx_n_s_Running, __pyx_k_Running, sizeof(__pyx_k_Running), 0, 0, 1, 1},
  {&__pyx_n_s_SCORE, __pyx_k_SCORE, sizeof(__pyx_k_SCORE), 0, 0, 1, 1},
  {&__pyx_n_s_SHAPE_FLAGS, __pyx_k_SHAPE_FLAGS, sizeof(__pyx_k_SHAPE_FLAGS), 0, 0, 1, 1},
  {&__pyx_n_s_SHAPE_TYPES, __pyx_k_SHAPE_TYPES, sizeof(__pyx_k_SHAPE_TYPES), 0, 0, 1, 1},
  {&__pyx_n_s_SHOOTING, __pyx_k_SHOOTING, sizeof(__pyx_k_SHOOTING), 0, 0, 1, 1},
  {&__pyx_n_s_SOLID_FILL, __pyx_k_SOLID_FILL, sizeof(__pyx_k_SOLID_FILL), 0, 0, 1, 1},
  {&__pyx_n_s_SOLID_OBSTACLE, __pyx_k_SOLID_OBSTACLE, sizeof(__pyx_k_SOLID_OBSTACLE), 0, 0, 1, 1},
  {&__pyx_n_s_STAND_UP, __pyx_k_STAND_UP, sizeof(__pyx_k_STAND_UP), 0, 0, 1, 1},
  {&__pyx_n_s_STOPPED, __pyx_k_STOPPED, sizeof(__pyx_k_STOPPED), 0, 0, 1, 1},
  {&__pyx_n_s_SUBAPPLICATION, __pyx_k_SUBAPPLICATION, sizeof(__pyx_k_SUBAPPLICATION), 0, 0, 1, 1},
  {&__pyx_n_s_SUBAPPLICATION_FLAGS, __pyx_k_SUBAPPLICATION_FLAGS, sizeof(__pyx_k_SUBAPPLICATION_FLAGS), 0, 0, 1, 1},
  {&__pyx_n_s_ScrollingIndependant, __pyx_k_ScrollingIndependant, sizeof(__pyx_k_ScrollingIndependant), 0, 0, 1, 1},
  {&__pyx_n_s_Shape, __pyx_k_Shape, sizeof(__pyx_k_Shape), 0, 0, 1, 1},
  {&__pyx_n_s_ShareGlobals, __pyx_k_ShareGlobals, sizeof(__pyx_k_ShareGlobals), 0, 0, 1, 1},
  {&__pyx_n_s_ShareLives, __pyx_k_ShareLives, sizeof(__pyx_k_ShareLives), 0, 0, 1, 1},
  {&__pyx_n_s_SharePlayerControls, __pyx_k_SharePlayerControls, sizeof(__pyx_k_SharePlayerControls), 0, 0, 1, 1},
  {&__pyx_n_s_ShareScores, __pyx_k_ShareScores, sizeof(__pyx_k_ShareScores), 0, 0, 1, 1},
  {&__pyx_n_s_Shooting, __pyx_k_Shooting, sizeof(__pyx_k_Shooting), 0, 0, 1, 1},
  {&__pyx_n_s_Sleep, __pyx_k_Sleep, sizeof(__pyx_k_Sleep), 0, 0, 1, 1},
  {&__pyx_n_s_Solid, __pyx_k_Solid, sizeof(__pyx_k_Solid), 0, 0, 1, 1},
  {&__pyx_n_s_SolidBackground, __pyx_k_SolidBackground, sizeof(__pyx_k_SolidBackground), 0, 0, 1, 1},
  {&__pyx_n_s_Sprites, __pyx_k_Sprites, sizeof(__pyx_k_Sprites), 0, 0, 1, 1},
  {&__pyx_kp_s_Stand_up, __pyx_k_Stand_up, sizeof(__pyx_k_Stand_up), 0, 0, 1, 0},
  {&__pyx_n_s_Stopped, __pyx_k_Stopped, sizeof(__pyx_k_Stopped), 0, 0, 1, 1},
  {&__pyx_n_s_Stretch, __pyx_k_Stretch, sizeof(__pyx_k_Stretch), 0, 0, 1, 1},
  {&__pyx_n_s_SubApplication, __pyx_k_SubApplication, sizeof(__pyx_k_SubApplication), 0, 0, 1, 1},
  {&__pyx_n_s_SystemMenu, __pyx_k_SystemMenu, sizeof(__pyx_k_SystemMenu), 0, 0, 1, 1},
  {&__pyx_n_s_TEXT, __pyx_k_TEXT, sizeof(__pyx_k_TEXT), 0, 0, 1, 1},
  {&__pyx_n_s_TEXT_COUNTER, __pyx_k_TEXT_COUNTER, sizeof(__pyx_k_TEXT_COUNTER), 0, 0, 1, 1},
  {&__pyx_n_s_TRANSPARENT_OBSTACLE, __pyx_k_TRANSPARENT_OBSTACLE, sizeof(__pyx_k_TRANSPARENT_OBSTACLE), 0, 0, 1, 1},
  {&__pyx_n_s_TabStop, __pyx_k_TabStop, sizeof(__pyx_k_TabStop), 0, 0, 1, 1},
  {&__pyx_n_s_Text, __pyx_k_Text, sizeof(__pyx_k_Text), 0, 0, 1, 1},
  {&__pyx_n_s_ToolCaption, __pyx_k_ToolCaption, sizeof(__pyx_k_ToolCaption), 0, 0, 1, 1},
  {&__pyx_n_s_Top, __pyx_k_Top, sizeof(__pyx_k_Top), 0, 0, 1, 1},
  {&__pyx_n_s_Transitions, __pyx_k_Transitions, sizeof(__pyx_k_Transitions), 0, 0, 1, 1},
  {&__pyx_n_s_Transparent, __pyx_k_Transparent, sizeof(__pyx_k_Transparent), 0, 0, 1, 1},
  {&__pyx_kp_s_User_defined_1, __pyx_k_User_defined_1, sizeof(__pyx_k_User_defined_1), 0, 0, 1, 0},
  {&__pyx_kp_s_User_defined_2, __pyx_k_User_defined_2, sizeof(__pyx_k_User_defined_2), 0, 0, 1, 0},
  {&__pyx_kp_s_User_defined_3, __pyx_k_User_defined_3, sizeof(__pyx_k_User_defined_3), 0, 0, 1, 0},
  {&__pyx_kp_s_User_defined_4, __pyx_k_User_defined_4, sizeof(__pyx_k_User_defined_4), 0, 0, 1, 0},
  {&__pyx_kp_s_User_defined_s, __pyx_k_User_defined_s, sizeof(__pyx_k_User_defined_s), 0, 0, 1, 0},
  {&__pyx_n_s_VERTICAL_BAR, __pyx_k_VERTICAL_BAR, sizeof(__pyx_k_VERTICAL_BAR), 0, 0, 1, 1},
  {&__pyx_n_s_VERTICAL_GRADIENT, __pyx_k_VERTICAL_GRADIENT, sizeof(__pyx_k_VERTICAL_GRADIENT), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_n_s_Values, __pyx_k_Values, sizeof(__pyx_k_Values), 0, 0, 1, 1},
  {&__pyx_n_s_Vertical, __pyx_k_Vertical, sizeof(__pyx_k_Vertical), 0, 0, 1, 1},
  {&__pyx_n_s_VerticalBar, __pyx_k_VerticalBar, sizeof(__pyx_k_VerticalBar), 0, 0, 1, 1},
  {&__pyx_n_s_VerticalCenter, __pyx_k_VerticalCenter, sizeof(__pyx_k_VerticalCenter), 0, 0, 1, 1},
  {&__pyx_n_s_VerticalSlider, __pyx_k_VerticalSlider, sizeof(__pyx_k_VerticalSlider), 0, 0, 1, 1},
  {&__pyx_n_s_VisibleAtStart, __pyx_k_VisibleAtStart, sizeof(__pyx_k_VisibleAtStart), 0, 0, 1, 1},
  {&__pyx_n_s_WALKING, __pyx_k_WALKING, sizeof(__pyx_k_WALKING), 0, 0, 1, 1},
  {&__pyx_n_s_Walking, __pyx_k_Walking, sizeof(__pyx_k_Walking), 0, 0, 1, 1},
  {&__pyx_n_s_WindowProc, __pyx_k_WindowProc, sizeof(__pyx_k_WindowProc), 0, 0, 1, 1},
  {&__pyx_kp_s__20, __pyx_k__20, sizeof(__pyx_k__20), 0, 0, 1, 0},
  {&__pyx_kp_s__21, __pyx_k__21, sizeof(__pyx_k__21), 0, 0, 1, 0},
  {&__pyx_kp_s__22, __pyx_k__22, sizeof(__pyx_k__22), 0, 0, 1, 0},
  {&__pyx_n_s_all, __pyx_k_all, sizeof(__pyx_k_all), 0, 0, 1, 1},
  {&__pyx_n_s_alternative, __pyx_k_alternative, sizeof(__pyx_k_alternative), 0, 0, 1, 1},
  {&__pyx_n_s_animationDict, __pyx_k_animationDict, sizeof(__pyx_k_animationDict), 0, 0, 1, 1},
  {&__pyx_n_s_build, __pyx_k_build, sizeof(__pyx_k_build), 0, 0, 1, 1},
  {&__pyx_n_s_byteflag, __pyx_k_byteflag, sizeof(__pyx_k_byteflag), 0, 0, 1, 1},
  {&__pyx_n_s_checkDefault, __pyx_k_checkDefault, sizeof(__pyx_k_checkDefault), 0, 0, 1, 1},
  {&__pyx_n_s_checksum, __pyx_k_checksum, sizeof(__pyx_k_checksum), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_collisionMode, __pyx_k_collisionMode, sizeof(__pyx_k_collisionMode), 0, 0, 1, 1},
  {&__pyx_n_s_compat, __pyx_k_compat, sizeof(__pyx_k_compat), 0, 0, 1, 1},
  {&__pyx_n_s_copy, __pyx_k_copy, sizeof(__pyx_k_copy), 0, 0, 1, 1},
  {&__pyx_n_s_count, __pyx_k_count, sizeof(__pyx_k_count), 0, 0, 1, 1},
  {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
  {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
  {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
  {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
  {&__pyx_n_s_fromHandle, __pyx_k_fromHandle, sizeof(__pyx_k_fromHandle), 0, 0, 1, 1},
  {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
  {&__pyx_n_s_getClosestAnimation, __pyx_k_getClosestAnimation, sizeof(__pyx_k_getClosestAnimation), 0, 0, 1, 1},
  {&__pyx_n_s_getFlag, __pyx_k_getFlag, sizeof(__pyx_k_getFlag), 0, 0, 1, 1},
  {&__pyx_n_s_getFlags, __pyx_k_getFlags, sizeof(__pyx_k_getFlags), 0, 0, 1, 1},
  {&__pyx_n_s_getIndex, __pyx_k_getIndex, sizeof(__pyx_k_getIndex), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_n_s_handle, __pyx_k_handle, sizeof(__pyx_k_handle), 0, 0, 1, 1},
  {&__pyx_n_s_height, __pyx_k_height, sizeof(__pyx_k_height), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_image, __pyx_k_image, sizeof(__pyx_k_image), 0, 0, 1, 1},
  {&__pyx_n_s_images, __pyx_k_images, sizeof(__pyx_k_images), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
  {&__pyx_n_s_initialize, __pyx_k_initialize, sizeof(__pyx_k_initialize), 0, 0, 1, 1},
  {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_max, __pyx_k_max, sizeof(__pyx_k_max), 0, 0, 1, 1},
  {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser, __pyx_k_mmfparser, sizeof(__pyx_k_mmfparser), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_bitdict, __pyx_k_mmfparser_bitdict, sizeof(__pyx_k_mmfparser_bitdict), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_bytereader, __pyx_k_mmfparser_bytereader, sizeof(__pyx_k_mmfparser_bytereader), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_data_chunkloaders_move, __pyx_k_mmfparser_data_chunkloaders_move, sizeof(__pyx_k_mmfparser_data_chunkloaders_move), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_data_chunkloaders_obje, __pyx_k_mmfparser_data_chunkloaders_obje, sizeof(__pyx_k_mmfparser_data_chunkloaders_obje), 0, 0, 1, 1},
  {&__pyx_kp_s_mmfparser_data_chunkloaders_obje_2, __pyx_k_mmfparser_data_chunkloaders_obje_2, sizeof(__pyx_k_mmfparser_data_chunkloaders_obje_2), 0, 0, 1, 0},
  {&__pyx_n_s_mmfparser_data_chunkloaders_obje_3, __pyx_k_mmfparser_data_chunkloaders_obje_3, sizeof(__pyx_k_mmfparser_data_chunkloaders_obje_3), 0, 0, 1, 1},
  {&__pyx_n_s_mmfparser_data_chunkloaders_tran, __pyx_k_mmfparser_data_chunkloaders_tran, sizeof(__pyx_k_mmfparser_data_chunkloaders_tran), 0, 0, 1, 1},
  {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_n_s_new_2, __pyx_k_new_2, sizeof(__pyx_k_new_2), 0, 0, 1, 1},
  {&__pyx_kp_s_no_animation_could_be_found_for, __pyx_k_no_animation_could_be_found_for, sizeof(__pyx_k_no_animation_could_be_found_for), 0, 0, 1, 0},
  {&__pyx_n_s_object, __pyx_k_object, sizeof(__pyx_k_object), 0, 0, 1, 1},
  {&__pyx_n_s_objectType, __pyx_k_objectType, sizeof(__pyx_k_objectType), 0, 0, 1, 1},
  {&__pyx_n_s_obstacleType, __pyx_k_obstacleType, sizeof(__pyx_k_obstacleType), 0, 0, 1, 1},
  {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
  {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_checksum, __pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_result, __pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_type, __pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_AlterableStrings, __pyx_k_pyx_unpickle_AlterableStrings, sizeof(__pyx_k_pyx_unpickle_AlterableStrings), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_AlterableValues, __pyx_k_pyx_unpickle_AlterableValues, sizeof(__pyx_k_pyx_unpickle_AlterableValues), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_Animation, __pyx_k_pyx_unpickle_Animation, sizeof(__pyx_k_pyx_unpickle_Animation), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_AnimationDirectio, __pyx_k_pyx_unpickle_AnimationDirectio, sizeof(__pyx_k_pyx_unpickle_AnimationDirectio), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_AnimationHeader, __pyx_k_pyx_unpickle_AnimationHeader, sizeof(__pyx_k_pyx_unpickle_AnimationHeader), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_Backdrop, __pyx_k_pyx_unpickle_Backdrop, sizeof(__pyx_k_pyx_unpickle_Backdrop), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_Counter, __pyx_k_pyx_unpickle_Counter, sizeof(__pyx_k_pyx_unpickle_Counter), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_Counters, __pyx_k_pyx_unpickle_Counters, sizeof(__pyx_k_pyx_unpickle_Counters), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_ObjectCommon, __pyx_k_pyx_unpickle_ObjectCommon, sizeof(__pyx_k_pyx_unpickle_ObjectCommon), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_Paragraph, __pyx_k_pyx_unpickle_Paragraph, sizeof(__pyx_k_pyx_unpickle_Paragraph), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_QuickBackdrop, __pyx_k_pyx_unpickle_QuickBackdrop, sizeof(__pyx_k_pyx_unpickle_QuickBackdrop), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_RTFObject, __pyx_k_pyx_unpickle_RTFObject, sizeof(__pyx_k_pyx_unpickle_RTFObject), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_Shape, __pyx_k_pyx_unpickle_Shape, sizeof(__pyx_k_pyx_unpickle_Shape), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_SubApplication, __pyx_k_pyx_unpickle_SubApplication, sizeof(__pyx_k_pyx_unpickle_SubApplication), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_Text, __pyx_k_pyx_unpickle_Text, sizeof(__pyx_k_pyx_unpickle_Text), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle__Background, __pyx_k_pyx_unpickle__Background, sizeof(__pyx_k_pyx_unpickle__Background), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_references, __pyx_k_references, sizeof(__pyx_k_references), 0, 0, 1, 1},
  {&__pyx_n_s_setFlags, __pyx_k_setFlags, sizeof(__pyx_k_setFlags), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
  {&__pyx_n_s_width, __pyx_k_width, sizeof(__pyx_k_width), 0, 0, 1, 1},
  {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
  {&__pyx_n_s_writeByte, __pyx_k_writeByte, sizeof(__pyx_k_writeByte), 0, 0, 1, 1},
  {&__pyx_n_s_writeColor, __pyx_k_writeColor, sizeof(__pyx_k_writeColor), 0, 0, 1, 1},
  {&__pyx_n_s_writeInt, __pyx_k_writeInt, sizeof(__pyx_k_writeInt), 0, 0, 1, 1},
  {&__pyx_n_s_writeReader, __pyx_k_writeReader, sizeof(__pyx_k_writeReader), 0, 0, 1, 1},
  {&__pyx_n_s_writeShort, __pyx_k_writeShort, sizeof(__pyx_k_writeShort), 0, 0, 1, 1},
  {&__pyx_n_s_writeString, __pyx_k_writeString, sizeof(__pyx_k_writeString), 0, 0, 1, 1},
  {&__pyx_n_s_xrange, __pyx_k_xrange, sizeof(__pyx_k_xrange), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_object = __Pyx_GetBuiltinName(__pyx_n_s_object); if (!__pyx_builtin_object) __PYX_ERR(0, 503, __pyx_L1_error)
  #if PY_MAJOR_VERSION >= 3
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_xrange) __PYX_ERR(0, 48, __pyx_L1_error)
  #else
  __pyx_builtin_xrange = __Pyx_GetBuiltinName(__pyx_n_s_xrange); if (!__pyx_builtin_xrange) __PYX_ERR(0, 48, __pyx_L1_error)
  #endif
  __pyx_builtin_KeyError = __Pyx_GetBuiltinName(__pyx_n_s_KeyError); if (!__pyx_builtin_KeyError) __PYX_ERR(0, 278, __pyx_L1_error)
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(0, 349, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(0, 419, __pyx_L1_error)
  __pyx_builtin_max = __Pyx_GetBuiltinName(__pyx_n_s_max); if (!__pyx_builtin_max) __PYX_ERR(0, 451, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 583, __pyx_L1_error)
  __pyx_builtin_AttributeError = __Pyx_GetBuiltinName(__pyx_n_s_AttributeError); if (!__pyx_builtin_AttributeError) __PYX_ERR(0, 583, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xac3d087, 0xc36e81c, 0xef027a8):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xac3d087, 0xc36e81c, 0xef027a8) = (items, parent, settings))" % __pyx_checksum)
 */
  __pyx_tuple__2 = PyTuple_Pack(3, __pyx_int_180605063, __pyx_int_204924956, __pyx_int_250619816); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);
  __pyx_tuple__3 = PyTuple_Pack(3, __pyx_int_219621915, __pyx_int_166494031, __pyx_int_241634478); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __pyx_tuple__4 = PyTuple_Pack(3, __pyx_int_191508975, __pyx_int_167905989, __pyx_int_255770676); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);
  __pyx_tuple__5 = PyTuple_Pack(3, __pyx_int_28387740, __pyx_int_48055331, __pyx_int_18161464); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);
  __pyx_tuple__6 = PyTuple_Pack(3, __pyx_int_158315977, __pyx_int_122448880, __pyx_int_4075231); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);
  __pyx_tuple__7 = PyTuple_Pack(3, __pyx_int_76934893, __pyx_int_42426246, __pyx_int_223780212); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);
  __pyx_tuple__8 = PyTuple_Pack(3, __pyx_int_32651745, __pyx_int_154801377, __pyx_int_115227617); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);
  __pyx_tuple__9 = PyTuple_Pack(3, __pyx_int_74401274, __pyx_int_94275802, __pyx_int_256301260); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);
  __pyx_tuple__10 = PyTuple_Pack(3, __pyx_int_57734563, __pyx_int_120560465, __pyx_int_230413870); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);
  __pyx_tuple__11 = PyTuple_Pack(3, __pyx_int_106150038, __pyx_int_156954679, __pyx_int_165111918); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);
  __pyx_tuple__12 = PyTuple_Pack(3, __pyx_int_80269552, __pyx_int_89013668, __pyx_int_111428124); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);
  __pyx_tuple__13 = PyTuple_Pack(3, __pyx_int_114659918, __pyx_int_75083535, __pyx_int_192975755); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);
  __pyx_tuple__14 = PyTuple_Pack(3, __pyx_int_2615892, __pyx_int_168371225, __pyx_int_165020626); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);
  __pyx_tuple__15 = PyTuple_Pack(3, __pyx_int_17150283, __pyx_int_185884997, __pyx_int_267290486); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);
  __pyx_tuple__16 = PyTuple_Pack(3, __pyx_int_64137841, __pyx_int_191734988, __pyx_int_129342275); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "mmfparser/data/chunkloaders/objects.pyx":85
 * ]
 * 
 * SHAPE_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'InverseX',
 *     'InverseY'
 */
  __pyx_tuple__17 = PyTuple_Pack(2, __pyx_n_s_InverseX, __pyx_n_s_InverseY); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "mmfparser/data/chunkloaders/objects.pyx":405
 * }
 * 
 * def getClosestAnimation(index, animationDict, count):             # <<<<<<<<<<<<<<
 *     try:
 *         return animationDict[index]
 */
  __pyx_tuple__18 = PyTuple_Pack(5, __pyx_n_s_index, __pyx_n_s_animationDict, __pyx_n_s_count, __pyx_n_s_alternative, __pyx_n_s_i); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);
  __pyx_codeobj__19 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__18, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_mmfparser_data_chunkloaders_obje_2, __pyx_n_s_getClosestAnimation, 405, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__19)) __PYX_ERR(0, 405, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":503
 * ]
 * 
 * class InvalidFont(object):             # <<<<<<<<<<<<<<
 *     handle = None
 *     checksum = None
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_builtin_object); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "mmfparser/data/chunkloaders/objects.pyx":592
 *         return DISPLAY_NAMES[self.displayType]
 * 
 * PARAGRAPH_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'HorizontalCenter',
 *     'RightAligned',
 */
  __pyx_tuple__24 = PyTuple_Pack(10, __pyx_n_s_HorizontalCenter, __pyx_n_s_RightAligned, __pyx_n_s_VerticalCenter, __pyx_n_s_BottomAligned, Py_None, Py_None, Py_None, Py_None, __pyx_n_s_Correct, __pyx_n_s_Relief); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "mmfparser/data/chunkloaders/objects.pyx":667
 *         reader.writeReader(paragraphData)
 * 
 * RTF_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'Transparent',
 *     'VerticalSlider',
 */
  __pyx_tuple__25 = PyTuple_Pack(3, __pyx_n_s_Transparent, __pyx_n_s_VerticalSlider, __pyx_n_s_HorizontalSlider); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "mmfparser/data/chunkloaders/objects.pyx":707
 * 
 * DOCK_POSITIONS = {
 *     (False, False) : 'Left',             # <<<<<<<<<<<<<<
 *     (True, False) : 'Top',
 *     (False, True) : 'Right',
 */
  __pyx_tuple__26 = PyTuple_Pack(2, Py_False, Py_False); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "mmfparser/data/chunkloaders/objects.pyx":708
 * DOCK_POSITIONS = {
 *     (False, False) : 'Left',
 *     (True, False) : 'Top',             # <<<<<<<<<<<<<<
 *     (False, True) : 'Right',
 *     (True, True) : 'Bottom'
 */
  __pyx_tuple__27 = PyTuple_Pack(2, Py_True, Py_False); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 708, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "mmfparser/data/chunkloaders/objects.pyx":709
 *     (False, False) : 'Left',
 *     (True, False) : 'Top',
 *     (False, True) : 'Right',             # <<<<<<<<<<<<<<
 *     (True, True) : 'Bottom'
 * }
 */
  __pyx_tuple__28 = PyTuple_Pack(2, Py_False, Py_True); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "mmfparser/data/chunkloaders/objects.pyx":710
 *     (True, False) : 'Top',
 *     (False, True) : 'Right',
 *     (True, True) : 'Bottom'             # <<<<<<<<<<<<<<
 * }
 * 
 */
  __pyx_tuple__29 = PyTuple_Pack(2, Py_True, Py_True); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 710, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "mmfparser/data/chunkloaders/objects.pyx":713
 * }
 * 
 * SUBAPPLICATION_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'ShareGlobals',
 *     'ShareLives',
 */
  __pyx_tuple__30 = PyTuple_Pack(26, __pyx_n_s_ShareGlobals, __pyx_n_s_ShareLives, __pyx_n_s_ShareScores, Py_None, __pyx_n_s_Stretch, __pyx_n_s_Popup, __pyx_n_s_Caption, __pyx_n_s_ToolCaption, __pyx_n_s_Border, __pyx_n_s_Resizable, __pyx_n_s_SystemMenu, __pyx_n_s_DisableClose, __pyx_n_s_Modal, __pyx_n_s_DialogFrame, __pyx_n_s_Internal, __pyx_n_s_HideOnClose, __pyx_n_s_CustomableSize, Py_None, __pyx_n_s_ClipSiblings, __pyx_n_s_SharePlayerControls, __pyx_n_s_MDIChild, __pyx_n_s_Docked, __pyx_n_s_Docked1, __pyx_n_s_Docked2, __pyx_n_s_Reopen, __pyx_n_s_RunEvenIfNotActive); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 713, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "mmfparser/data/chunkloaders/objects.pyx":803
 * # everything's good now! thanks Villy!
 * 
 * NEW_OBJECT_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'DoNotSaveBackground',
 *     'SolidBackground',
 */
  __pyx_tuple__31 = PyTuple_Pack(7, __pyx_n_s_DoNotSaveBackground, __pyx_n_s_SolidBackground, __pyx_n_s_CollisionBox, __pyx_n_s_VisibleAtStart, __pyx_n_s_ObstacleSolid, __pyx_n_s_ObstaclePlatform, __pyx_n_s_AutomaticRotation); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "mmfparser/data/chunkloaders/objects.pyx":813
 * )
 * 
 * OBJECT_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'DisplayInFront',
 *     'Background',
 */
  __pyx_tuple__32 = PyTuple_Pack(20, __pyx_n_s_DisplayInFront, __pyx_n_s_Background, __pyx_n_s_Backsave, __pyx_n_s_RunBeforeFadeIn, __pyx_n_s_Movements, __pyx_n_s_Animations, __pyx_n_s_TabStop, __pyx_n_s_WindowProc, __pyx_n_s_Values, __pyx_n_s_Sprites, __pyx_n_s_InternalBacksave, __pyx_n_s_ScrollingIndependant, __pyx_n_s_QuickDisplay, __pyx_n_s_NeverKill, __pyx_n_s_NeverSleep, __pyx_n_s_ManualSleep, __pyx_n_s_Text, __pyx_n_s_DoNotCreateAtStart, __pyx_n_s_FakeSprite, __pyx_n_s_FakeCollisions); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "mmfparser/data/chunkloaders/objects.pyx":836
 * )
 * 
 * OBJECT_PREFERENCES = BitDict(             # <<<<<<<<<<<<<<
 *     'Backsave',
 *     'ScrollingIndependant',
 */
  __pyx_tuple__33 = PyTuple_Pack(12, __pyx_n_s_Backsave, __pyx_n_s_ScrollingIndependant, __pyx_n_s_QuickDisplay, __pyx_n_s_Sleep, __pyx_n_s_LoadOnCall, __pyx_n_s_Global, __pyx_n_s_BackEffects, __pyx_n_s_Kill, __pyx_n_s_InkEffects, __pyx_n_s_Transitions, __pyx_n_s_FineCollisions, __pyx_n_s_AppletProblems); if (unlikely(!__pyx_tuple__33)) __PYX_ERR(0, 836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "(tree fragment)":1
 * def __pyx_unpickle_AlterableValues(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_tuple__34 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_AlterableValues, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__36 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);
  __pyx_codeobj__37 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__36, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_AlterableStrings, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__37)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__38 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);
  __pyx_codeobj__39 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__38, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_Shape, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__39)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__40 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);
  __pyx_codeobj__41 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__40, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle__Background, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__41)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__42 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);
  __pyx_codeobj__43 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__42, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_QuickBackdrop, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__43)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__44 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__44, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_Backdrop, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__46 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);
  __pyx_codeobj__47 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__46, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_AnimationDirectio, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__47)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__48 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);
  __pyx_codeobj__49 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__48, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_Animation, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__49)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__50 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__50, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_AnimationHeader, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__52 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__52, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_Counters, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__54 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_Paragraph, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__56 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__56, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_Text, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__58 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_RTFObject, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__60 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_SubApplication, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__62 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);
  __pyx_codeobj__63 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_Counter, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__63)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_tuple__64 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__64, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_ObjectCommon, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyDict_Type_get.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_keys.type = (PyObject*)&PyDict_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_7 = PyInt_FromLong(7); if (unlikely(!__pyx_int_7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_8 = PyInt_FromLong(8); if (unlikely(!__pyx_int_8)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_9 = PyInt_FromLong(9); if (unlikely(!__pyx_int_9)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_11 = PyInt_FromLong(11); if (unlikely(!__pyx_int_11)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_12 = PyInt_FromLong(12); if (unlikely(!__pyx_int_12)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_20 = PyInt_FromLong(20); if (unlikely(!__pyx_int_20)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_284 = PyInt_FromLong(284); if (unlikely(!__pyx_int_284)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2615892 = PyInt_FromLong(2615892L); if (unlikely(!__pyx_int_2615892)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4075231 = PyInt_FromLong(4075231L); if (unlikely(!__pyx_int_4075231)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_17150283 = PyInt_FromLong(17150283L); if (unlikely(!__pyx_int_17150283)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_18161464 = PyInt_FromLong(18161464L); if (unlikely(!__pyx_int_18161464)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_28387740 = PyInt_FromLong(28387740L); if (unlikely(!__pyx_int_28387740)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_32651745 = PyInt_FromLong(32651745L); if (unlikely(!__pyx_int_32651745)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_42426246 = PyInt_FromLong(42426246L); if (unlikely(!__pyx_int_42426246)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_48055331 = PyInt_FromLong(48055331L); if (unlikely(!__pyx_int_48055331)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_57734563 = PyInt_FromLong(57734563L); if (unlikely(!__pyx_int_57734563)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_64137841 = PyInt_FromLong(64137841L); if (unlikely(!__pyx_int_64137841)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_74401274 = PyInt_FromLong(74401274L); if (unlikely(!__pyx_int_74401274)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_75083535 = PyInt_FromLong(75083535L); if (unlikely(!__pyx_int_75083535)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_76934893 = PyInt_FromLong(76934893L); if (unlikely(!__pyx_int_76934893)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_80269552 = PyInt_FromLong(80269552L); if (unlikely(!__pyx_int_80269552)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_89013668 = PyInt_FromLong(89013668L); if (unlikely(!__pyx_int_89013668)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_94275802 = PyInt_FromLong(94275802L); if (unlikely(!__pyx_int_94275802)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_106150038 = PyInt_FromLong(106150038L); if (unlikely(!__pyx_int_106150038)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_111428124 = PyInt_FromLong(111428124L); if (unlikely(!__pyx_int_111428124)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_114659918 = PyInt_FromLong(114659918L); if (unlikely(!__pyx_int_114659918)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_115227617 = PyInt_FromLong(115227617L); if (unlikely(!__pyx_int_115227617)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_120560465 = PyInt_FromLong(120560465L); if (unlikely(!__pyx_int_120560465)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_122448880 = PyInt_FromLong(122448880L); if (unlikely(!__pyx_int_122448880)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_129342275 = PyInt_FromLong(129342275L); if (unlikely(!__pyx_int_129342275)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_154801377 = PyInt_FromLong(154801377L); if (unlikely(!__pyx_int_154801377)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_156954679 = PyInt_FromLong(156954679L); if (unlikely(!__pyx_int_156954679)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_158315977 = PyInt_FromLong(158315977L); if (unlikely(!__pyx_int_158315977)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_165020626 = PyInt_FromLong(165020626L); if (unlikely(!__pyx_int_165020626)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_165111918 = PyInt_FromLong(165111918L); if (unlikely(!__pyx_int_165111918)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_166494031 = PyInt_FromLong(166494031L); if (unlikely(!__pyx_int_166494031)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_167905989 = PyInt_FromLong(167905989L); if (unlikely(!__pyx_int_167905989)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_168371225 = PyInt_FromLong(168371225L); if (unlikely(!__pyx_int_168371225)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_180605063 = PyInt_FromLong(180605063L); if (unlikely(!__pyx_int_180605063)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_185884997 = PyInt_FromLong(185884997L); if (unlikely(!__pyx_int_185884997)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_191508975 = PyInt_FromLong(191508975L); if (unlikely(!__pyx_int_191508975)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_191734988 = PyInt_FromLong(191734988L); if (unlikely(!__pyx_int_191734988)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_192975755 = PyInt_FromLong(192975755L); if (unlikely(!__pyx_int_192975755)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_204924956 = PyInt_FromLong(204924956L); if (unlikely(!__pyx_int_204924956)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_219621915 = PyInt_FromLong(219621915L); if (unlikely(!__pyx_int_219621915)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_223780212 = PyInt_FromLong(223780212L); if (unlikely(!__pyx_int_223780212)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_230413870 = PyInt_FromLong(230413870L); if (unlikely(!__pyx_int_230413870)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_241634478 = PyInt_FromLong(241634478L); if (unlikely(!__pyx_int_241634478)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_250619816 = PyInt_FromLong(250619816L); if (unlikely(!__pyx_int_250619816)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_255770676 = PyInt_FromLong(255770676L); if (unlikely(!__pyx_int_255770676)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_256301260 = PyInt_FromLong(256301260L); if (unlikely(!__pyx_int_256301260)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_267290486 = PyInt_FromLong(267290486L); if (unlikely(!__pyx_int_267290486)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_t_1 = PyImport_ImportModule("mmfparser.loader"); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_9mmfparser_6loader_DataLoader = __Pyx_ImportType_0_29_35(__pyx_t_1, "mmfparser.loader", "DataLoader", sizeof(struct __pyx_obj_9mmfparser_6loader_DataLoader), __PYX_GET_STRUCT_ALIGNMENT_0_29_35(struct __pyx_obj_9mmfparser_6loader_DataLoader),__Pyx_ImportType_CheckSize_Warn_0_29_35); if (!__pyx_ptype_9mmfparser_6loader_DataLoader) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_vtabptr_9mmfparser_6loader_DataLoader = (struct __pyx_vtabstruct_9mmfparser_6loader_DataLoader*)__Pyx_GetVtable(__pyx_ptype_9mmfparser_6loader_DataLoader->tp_dict); if (unlikely(!__pyx_vtabptr_9mmfparser_6loader_DataLoader)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AlterableValues = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AlterableValues;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AlterableValues.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AlterableValues.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AlterableValues_read;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AlterableValues) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_AlterableValues, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableValues = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableValues;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_16AlterableStrings_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_AlterableStrings, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AlterableStrings;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Shape = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Shape;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Shape.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Shape.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_5Shape_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Shape.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_5Shape_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape) < 0) __PYX_ERR(0, 90, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Shape) < 0) __PYX_ERR(0, 90, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Shape, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape) < 0) __PYX_ERR(0, 90, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape) < 0) __PYX_ERR(0, 90, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Shape = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Shape;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects__Background = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects__Background;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects__Background.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background) < 0) __PYX_ERR(0, 171, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects__Background) < 0) __PYX_ERR(0, 171, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Background_2, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background) < 0) __PYX_ERR(0, 171, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background) < 0) __PYX_ERR(0, 171, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects__Background = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects__Background;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop.__pyx_base = *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects__Background;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop.__pyx_base.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_13QuickBackdrop_read;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop.tp_base = __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects__Background;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_QuickBackdrop, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_QuickBackdrop;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Backdrop = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Backdrop;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Backdrop.__pyx_base = *__pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects__Background;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Backdrop.__pyx_base.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_8Backdrop_read;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop.tp_base = __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects__Background;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop) < 0) __PYX_ERR(0, 209, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Backdrop) < 0) __PYX_ERR(0, 209, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Backdrop, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop) < 0) __PYX_ERR(0, 209, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop) < 0) __PYX_ERR(0, 209, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Backdrop = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Backdrop;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_18AnimationDirection_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection) < 0) __PYX_ERR(0, 240, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection) < 0) __PYX_ERR(0, 240, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_AnimationDirection, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection) < 0) __PYX_ERR(0, 240, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection) < 0) __PYX_ERR(0, 240, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationDirection;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Animation = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Animation;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Animation.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Animation.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Animation_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Animation.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Animation_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation) < 0) __PYX_ERR(0, 332, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Animation) < 0) __PYX_ERR(0, 332, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Animation, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation) < 0) __PYX_ERR(0, 332, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation) < 0) __PYX_ERR(0, 332, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Animation = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Animation;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_15AnimationHeader_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader) < 0) __PYX_ERR(0, 422, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader) < 0) __PYX_ERR(0, 422, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_AnimationHeader, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader) < 0) __PYX_ERR(0, 422, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader) < 0) __PYX_ERR(0, 422, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_AnimationHeader;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Counters = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Counters;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Counters.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Counters.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_8Counters_read;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Counters) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Counters, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters) < 0) __PYX_ERR(0, 520, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counters = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counters;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Paragraph = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Paragraph;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Paragraph.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Paragraph.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Paragraph.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9Paragraph_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Paragraph) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Paragraph, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Paragraph = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Paragraph;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Text = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Text;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Text.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Text.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_4Text_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Text.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_4Text_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text) < 0) __PYX_ERR(0, 630, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Text) < 0) __PYX_ERR(0, 630, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Text, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text) < 0) __PYX_ERR(0, 630, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text) < 0) __PYX_ERR(0, 630, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Text = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Text;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_RTFObject = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_RTFObject;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_RTFObject.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_RTFObject.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_RTFObject.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_9RTFObject_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject) < 0) __PYX_ERR(0, 673, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_RTFObject) < 0) __PYX_ERR(0, 673, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_RTFObject, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject) < 0) __PYX_ERR(0, 673, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject) < 0) __PYX_ERR(0, 673, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_RTFObject = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_RTFObject;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_SubApplication = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_SubApplication;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_SubApplication.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_SubApplication.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_SubApplication.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_14SubApplication_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_SubApplication) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_SubApplication, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_SubApplication = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_SubApplication;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Counter = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Counter;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Counter.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_Counter.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_7Counter_read;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter) < 0) __PYX_ERR(0, 782, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_Counter) < 0) __PYX_ERR(0, 782, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Counter, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter) < 0) __PYX_ERR(0, 782, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter) < 0) __PYX_ERR(0, 782, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_Counter = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_Counter;
  __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon = &__pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon.__pyx_base = *__pyx_vtabptr_9mmfparser_6loader_DataLoader;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon.__pyx_base.read = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, struct __pyx_obj_9mmfparser_10bytereader_ByteReader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_read;
  __pyx_vtable_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon.__pyx_base.initialize = (PyObject *(*)(struct __pyx_obj_9mmfparser_6loader_DataLoader *, int __pyx_skip_dispatch))__pyx_f_9mmfparser_4data_12chunkloaders_7objects_12ObjectCommon_initialize;
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon.tp_base = __pyx_ptype_9mmfparser_6loader_DataLoader;
  if (PyType_Ready(&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon) < 0) __PYX_ERR(0, 851, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon.tp_dictoffset && __pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon.tp_dict, __pyx_vtabptr_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon) < 0) __PYX_ERR(0, 851, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ObjectCommon, (PyObject *)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon) < 0) __PYX_ERR(0, 851, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon) < 0) __PYX_ERR(0, 851, __pyx_L1_error)
  __pyx_ptype_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon = &__pyx_type_9mmfparser_4data_12chunkloaders_7objects_ObjectCommon;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule("mmfparser.bytereader"); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_9mmfparser_10bytereader_ByteReader = __Pyx_ImportType_0_29_35(__pyx_t_1, "mmfparser.bytereader", "ByteReader", sizeof(struct __pyx_obj_9mmfparser_10bytereader_ByteReader), __PYX_GET_STRUCT_ALIGNMENT_0_29_35(struct __pyx_obj_9mmfparser_10bytereader_ByteReader),__Pyx_ImportType_CheckSize_Warn_0_29_35); if (!__pyx_ptype_9mmfparser_10bytereader_ByteReader) __PYX_ERR(2, 20, __pyx_L1_error)
  __pyx_vtabptr_9mmfparser_10bytereader_ByteReader = (struct __pyx_vtabstruct_9mmfparser_10bytereader_ByteReader*)__Pyx_GetVtable(__pyx_ptype_9mmfparser_10bytereader_ByteReader->tp_dict); if (unlikely(!__pyx_vtabptr_9mmfparser_10bytereader_ByteReader)) __PYX_ERR(2, 20, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initobjects(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initobjects(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_objects(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_objects(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_objects(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'objects' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_objects(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("objects", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_mmfparser__data__chunkloaders__objects) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name_2, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "mmfparser.data.chunkloaders.objects")) {
      if (unlikely(PyDict_SetItemString(modules, "mmfparser.data.chunkloaders.objects", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely(__Pyx_modinit_type_import_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "mmfparser/data/chunkloaders/objects.pyx":18
 * # along with Anaconda.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * from mmfparser.bytereader import checkDefault             # <<<<<<<<<<<<<<
 * from mmfparser.loader cimport DataLoader
 * from mmfparser import byteflag
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_checkDefault);
  __Pyx_GIVEREF(__pyx_n_s_checkDefault);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_checkDefault);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_mmfparser_bytereader, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_checkDefault); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_checkDefault, __pyx_t_1) < 0) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":20
 * from mmfparser.bytereader import checkDefault
 * from mmfparser.loader cimport DataLoader
 * from mmfparser import byteflag             # <<<<<<<<<<<<<<
 * from mmfparser.bytereader cimport ByteReader
 * from mmfparser.bitdict import BitDict
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_byteflag);
  __Pyx_GIVEREF(__pyx_n_s_byteflag);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_byteflag);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_mmfparser, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_byteflag); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_byteflag, __pyx_t_2) < 0) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":22
 * from mmfparser import byteflag
 * from mmfparser.bytereader cimport ByteReader
 * from mmfparser.bitdict import BitDict             # <<<<<<<<<<<<<<
 * from mmfparser.data.chunkloaders.movement import Movements
 * from mmfparser.data.chunkloaders.transition import FadeIn, FadeOut
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_BitDict);
  __Pyx_GIVEREF(__pyx_n_s_BitDict);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_BitDict);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_mmfparser_bitdict, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_BitDict); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BitDict, __pyx_t_1) < 0) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":23
 * from mmfparser.bytereader cimport ByteReader
 * from mmfparser.bitdict import BitDict
 * from mmfparser.data.chunkloaders.movement import Movements             # <<<<<<<<<<<<<<
 * from mmfparser.data.chunkloaders.transition import FadeIn, FadeOut
 * from mmfparser.data.chunkloaders.objectinfo import (TEXT, QUESTION, SCORE,
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Movements);
  __Pyx_GIVEREF(__pyx_n_s_Movements);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Movements);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_mmfparser_data_chunkloaders_move, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_Movements); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Movements, __pyx_t_2) < 0) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":24
 * from mmfparser.bitdict import BitDict
 * from mmfparser.data.chunkloaders.movement import Movements
 * from mmfparser.data.chunkloaders.transition import FadeIn, FadeOut             # <<<<<<<<<<<<<<
 * from mmfparser.data.chunkloaders.objectinfo import (TEXT, QUESTION, SCORE,
 *     LIVES, COUNTER, RTF, SUBAPPLICATION)
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_FadeIn);
  __Pyx_GIVEREF(__pyx_n_s_FadeIn);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_FadeIn);
  __Pyx_INCREF(__pyx_n_s_FadeOut);
  __Pyx_GIVEREF(__pyx_n_s_FadeOut);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_FadeOut);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_mmfparser_data_chunkloaders_tran, __pyx_t_1, -1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_FadeIn); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FadeIn, __pyx_t_1) < 0) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_FadeOut); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FadeOut, __pyx_t_1) < 0) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":25
 * from mmfparser.data.chunkloaders.movement import Movements
 * from mmfparser.data.chunkloaders.transition import FadeIn, FadeOut
 * from mmfparser.data.chunkloaders.objectinfo import (TEXT, QUESTION, SCORE,             # <<<<<<<<<<<<<<
 *     LIVES, COUNTER, RTF, SUBAPPLICATION)
 * 
 */
  __pyx_t_2 = PyList_New(7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_TEXT);
  __Pyx_GIVEREF(__pyx_n_s_TEXT);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_TEXT);
  __Pyx_INCREF(__pyx_n_s_QUESTION);
  __Pyx_GIVEREF(__pyx_n_s_QUESTION);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_QUESTION);
  __Pyx_INCREF(__pyx_n_s_SCORE);
  __Pyx_GIVEREF(__pyx_n_s_SCORE);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_SCORE);
  __Pyx_INCREF(__pyx_n_s_LIVES);
  __Pyx_GIVEREF(__pyx_n_s_LIVES);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_LIVES);
  __Pyx_INCREF(__pyx_n_s_COUNTER);
  __Pyx_GIVEREF(__pyx_n_s_COUNTER);
  PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_COUNTER);
  __Pyx_INCREF(__pyx_n_s_RTF);
  __Pyx_GIVEREF(__pyx_n_s_RTF);
  PyList_SET_ITEM(__pyx_t_2, 5, __pyx_n_s_RTF);
  __Pyx_INCREF(__pyx_n_s_SUBAPPLICATION);
  __Pyx_GIVEREF(__pyx_n_s_SUBAPPLICATION);
  PyList_SET_ITEM(__pyx_t_2, 6, __pyx_n_s_SUBAPPLICATION);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_mmfparser_data_chunkloaders_obje, __pyx_t_2, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_TEXT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TEXT, __pyx_t_2) < 0) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_QUESTION); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_QUESTION, __pyx_t_2) < 0) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_SCORE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SCORE, __pyx_t_2) < 0) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_LIVES); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LIVES, __pyx_t_2) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_COUNTER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_COUNTER, __pyx_t_2) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_RTF); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RTF, __pyx_t_2) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_SUBAPPLICATION); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SUBAPPLICATION, __pyx_t_2) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":55
 *             reader.writeString(item)
 * 
 * LINE_SHAPE = 1             # <<<<<<<<<<<<<<
 * RECTANGLE_SHAPE = 2
 * ELLIPSE_SHAPE = 3
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LINE_SHAPE, __pyx_int_1) < 0) __PYX_ERR(0, 55, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":56
 * 
 * LINE_SHAPE = 1
 * RECTANGLE_SHAPE = 2             # <<<<<<<<<<<<<<
 * ELLIPSE_SHAPE = 3
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RECTANGLE_SHAPE, __pyx_int_2) < 0) __PYX_ERR(0, 56, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":57
 * LINE_SHAPE = 1
 * RECTANGLE_SHAPE = 2
 * ELLIPSE_SHAPE = 3             # <<<<<<<<<<<<<<
 * 
 * SHAPE_TYPES = {
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ELLIPSE_SHAPE, __pyx_int_3) < 0) __PYX_ERR(0, 57, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":60
 * 
 * SHAPE_TYPES = {
 *     1 : 'Line',             # <<<<<<<<<<<<<<
 *     2 : 'Rectangle',
 *     3 : 'Ellipse'
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_1, __pyx_n_s_Line) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_2, __pyx_n_s_Rectangle) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_1, __pyx_int_3, __pyx_n_s_Ellipse) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SHAPE_TYPES, __pyx_t_1) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":65
 * }
 * 
 * NONE_FILL = 0             # <<<<<<<<<<<<<<
 * SOLID_FILL = 1
 * GRADIENT_FILL = 2
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NONE_FILL, __pyx_int_0) < 0) __PYX_ERR(0, 65, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":66
 * 
 * NONE_FILL = 0
 * SOLID_FILL = 1             # <<<<<<<<<<<<<<
 * GRADIENT_FILL = 2
 * MOTIF_FILL = 3
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SOLID_FILL, __pyx_int_1) < 0) __PYX_ERR(0, 66, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":67
 * NONE_FILL = 0
 * SOLID_FILL = 1
 * GRADIENT_FILL = 2             # <<<<<<<<<<<<<<
 * MOTIF_FILL = 3
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GRADIENT_FILL, __pyx_int_2) < 0) __PYX_ERR(0, 67, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":68
 * SOLID_FILL = 1
 * GRADIENT_FILL = 2
 * MOTIF_FILL = 3             # <<<<<<<<<<<<<<
 * 
 * FILL_TYPES = [
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOTIF_FILL, __pyx_int_3) < 0) __PYX_ERR(0, 68, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":70
 * MOTIF_FILL = 3
 * 
 * FILL_TYPES = [             # <<<<<<<<<<<<<<
 *     'None',
 *     'Solid',
 */
  __pyx_t_1 = PyList_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_None);
  __Pyx_GIVEREF(__pyx_n_s_None);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_None);
  __Pyx_INCREF(__pyx_n_s_Solid);
  __Pyx_GIVEREF(__pyx_n_s_Solid);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_Solid);
  __Pyx_INCREF(__pyx_n_s_Gradient);
  __Pyx_GIVEREF(__pyx_n_s_Gradient);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_Gradient);
  __Pyx_INCREF(__pyx_n_s_Motif);
  __Pyx_GIVEREF(__pyx_n_s_Motif);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_Motif);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FILL_TYPES, __pyx_t_1) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":77
 * ]
 * 
 * HORIZONTAL_GRADIENT = 0             # <<<<<<<<<<<<<<
 * VERTICAL_GRADIENT = 1
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HORIZONTAL_GRADIENT, __pyx_int_0) < 0) __PYX_ERR(0, 77, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":78
 * 
 * HORIZONTAL_GRADIENT = 0
 * VERTICAL_GRADIENT = 1             # <<<<<<<<<<<<<<
 * 
 * GRADIENT_TYPES = [
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VERTICAL_GRADIENT, __pyx_int_1) < 0) __PYX_ERR(0, 78, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":80
 * VERTICAL_GRADIENT = 1
 * 
 * GRADIENT_TYPES = [             # <<<<<<<<<<<<<<
 *     'Horizontal',
 *     'Vertical'
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_Horizontal);
  __Pyx_GIVEREF(__pyx_n_s_Horizontal);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_Horizontal);
  __Pyx_INCREF(__pyx_n_s_Vertical);
  __Pyx_GIVEREF(__pyx_n_s_Vertical);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_Vertical);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GRADIENT_TYPES, __pyx_t_1) < 0) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":85
 * ]
 * 
 * SHAPE_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'InverseX',
 *     'InverseY'
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BitDict); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SHAPE_FLAGS, __pyx_t_2) < 0) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":149
 *         return SHAPE_TYPES[self.shape]
 * 
 * NONE_OBSTACLE = 0             # <<<<<<<<<<<<<<
 * SOLID_OBSTACLE = 1
 * PLATFORM_OBSTACLE = 2
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NONE_OBSTACLE, __pyx_int_0) < 0) __PYX_ERR(0, 149, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":150
 * 
 * NONE_OBSTACLE = 0
 * SOLID_OBSTACLE = 1             # <<<<<<<<<<<<<<
 * PLATFORM_OBSTACLE = 2
 * LADDER_OBSTACLE = 3
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SOLID_OBSTACLE, __pyx_int_1) < 0) __PYX_ERR(0, 150, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":151
 * NONE_OBSTACLE = 0
 * SOLID_OBSTACLE = 1
 * PLATFORM_OBSTACLE = 2             # <<<<<<<<<<<<<<
 * LADDER_OBSTACLE = 3
 * TRANSPARENT_OBSTACLE = 4
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PLATFORM_OBSTACLE, __pyx_int_2) < 0) __PYX_ERR(0, 151, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":152
 * SOLID_OBSTACLE = 1
 * PLATFORM_OBSTACLE = 2
 * LADDER_OBSTACLE = 3             # <<<<<<<<<<<<<<
 * TRANSPARENT_OBSTACLE = 4
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LADDER_OBSTACLE, __pyx_int_3) < 0) __PYX_ERR(0, 152, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":153
 * PLATFORM_OBSTACLE = 2
 * LADDER_OBSTACLE = 3
 * TRANSPARENT_OBSTACLE = 4             # <<<<<<<<<<<<<<
 * 
 * OBSTACLE_TYPES = [
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TRANSPARENT_OBSTACLE, __pyx_int_4) < 0) __PYX_ERR(0, 153, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":155
 * TRANSPARENT_OBSTACLE = 4
 * 
 * OBSTACLE_TYPES = [             # <<<<<<<<<<<<<<
 *     'None',
 *     'Solid',
 */
  __pyx_t_2 = PyList_New(5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_None);
  __Pyx_GIVEREF(__pyx_n_s_None);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_None);
  __Pyx_INCREF(__pyx_n_s_Solid);
  __Pyx_GIVEREF(__pyx_n_s_Solid);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_Solid);
  __Pyx_INCREF(__pyx_n_s_Platform);
  __Pyx_GIVEREF(__pyx_n_s_Platform);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_Platform);
  __Pyx_INCREF(__pyx_n_s_Ladder);
  __Pyx_GIVEREF(__pyx_n_s_Ladder);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_Ladder);
  __Pyx_INCREF(__pyx_n_s_Transparent);
  __Pyx_GIVEREF(__pyx_n_s_Transparent);
  PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_Transparent);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OBSTACLE_TYPES, __pyx_t_2) < 0) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":163
 * ]
 * 
 * FINE_COLLISION = 0             # <<<<<<<<<<<<<<
 * BOX_COLLISION = 1
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FINE_COLLISION, __pyx_int_0) < 0) __PYX_ERR(0, 163, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":164
 * 
 * FINE_COLLISION = 0
 * BOX_COLLISION = 1             # <<<<<<<<<<<<<<
 * 
 * COLLISION_MODES = [
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BOX_COLLISION, __pyx_int_1) < 0) __PYX_ERR(0, 164, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":166
 * BOX_COLLISION = 1
 * 
 * COLLISION_MODES = [             # <<<<<<<<<<<<<<
 *     'Fine',
 *     'Box'
 */
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Fine);
  __Pyx_GIVEREF(__pyx_n_s_Fine);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Fine);
  __Pyx_INCREF(__pyx_n_s_Box);
  __Pyx_GIVEREF(__pyx_n_s_Box);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_Box);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_COLLISION_MODES, __pyx_t_2) < 0) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":236
 *         return imageBank.fromHandle(self.image)
 * 
 * HAS_SINGLE_SPEED = [             # <<<<<<<<<<<<<<
 *     0, 3, 4, 6
 * ]
 */
  __pyx_t_2 = PyList_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_int_0);
  __Pyx_INCREF(__pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_int_3);
  __Pyx_INCREF(__pyx_int_4);
  __Pyx_GIVEREF(__pyx_int_4);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_int_4);
  __Pyx_INCREF(__pyx_int_6);
  __Pyx_GIVEREF(__pyx_int_6);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_int_6);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAS_SINGLE_SPEED, __pyx_t_2) < 0) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":313
 *         return backward[0]
 * 
 * ANIMATION_NAMES = [             # <<<<<<<<<<<<<<
 *     'Stopped',
 *     'Walking',
 */
  __pyx_t_2 = PyList_New(16); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 313, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Stopped);
  __Pyx_GIVEREF(__pyx_n_s_Stopped);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Stopped);
  __Pyx_INCREF(__pyx_n_s_Walking);
  __Pyx_GIVEREF(__pyx_n_s_Walking);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_Walking);
  __Pyx_INCREF(__pyx_n_s_Running);
  __Pyx_GIVEREF(__pyx_n_s_Running);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_Running);
  __Pyx_INCREF(__pyx_n_s_Appearing);
  __Pyx_GIVEREF(__pyx_n_s_Appearing);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_Appearing);
  __Pyx_INCREF(__pyx_n_s_Disappearing);
  __Pyx_GIVEREF(__pyx_n_s_Disappearing);
  PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_Disappearing);
  __Pyx_INCREF(__pyx_n_s_Bouncing);
  __Pyx_GIVEREF(__pyx_n_s_Bouncing);
  PyList_SET_ITEM(__pyx_t_2, 5, __pyx_n_s_Bouncing);
  __Pyx_INCREF(__pyx_n_s_Shooting);
  __Pyx_GIVEREF(__pyx_n_s_Shooting);
  PyList_SET_ITEM(__pyx_t_2, 6, __pyx_n_s_Shooting);
  __Pyx_INCREF(__pyx_n_s_Jumping);
  __Pyx_GIVEREF(__pyx_n_s_Jumping);
  PyList_SET_ITEM(__pyx_t_2, 7, __pyx_n_s_Jumping);
  __Pyx_INCREF(__pyx_n_s_Falling);
  __Pyx_GIVEREF(__pyx_n_s_Falling);
  PyList_SET_ITEM(__pyx_t_2, 8, __pyx_n_s_Falling);
  __Pyx_INCREF(__pyx_n_s_Climbing);
  __Pyx_GIVEREF(__pyx_n_s_Climbing);
  PyList_SET_ITEM(__pyx_t_2, 9, __pyx_n_s_Climbing);
  __Pyx_INCREF(__pyx_kp_s_Crouch_down);
  __Pyx_GIVEREF(__pyx_kp_s_Crouch_down);
  PyList_SET_ITEM(__pyx_t_2, 10, __pyx_kp_s_Crouch_down);
  __Pyx_INCREF(__pyx_kp_s_Stand_up);
  __Pyx_GIVEREF(__pyx_kp_s_Stand_up);
  PyList_SET_ITEM(__pyx_t_2, 11, __pyx_kp_s_Stand_up);
  __Pyx_INCREF(__pyx_kp_s_User_defined_1);
  __Pyx_GIVEREF(__pyx_kp_s_User_defined_1);
  PyList_SET_ITEM(__pyx_t_2, 12, __pyx_kp_s_User_defined_1);
  __Pyx_INCREF(__pyx_kp_s_User_defined_2);
  __Pyx_GIVEREF(__pyx_kp_s_User_defined_2);
  PyList_SET_ITEM(__pyx_t_2, 13, __pyx_kp_s_User_defined_2);
  __Pyx_INCREF(__pyx_kp_s_User_defined_3);
  __Pyx_GIVEREF(__pyx_kp_s_User_defined_3);
  PyList_SET_ITEM(__pyx_t_2, 14, __pyx_kp_s_User_defined_3);
  __Pyx_INCREF(__pyx_kp_s_User_defined_4);
  __Pyx_GIVEREF(__pyx_kp_s_User_defined_4);
  PyList_SET_ITEM(__pyx_t_2, 15, __pyx_kp_s_User_defined_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ANIMATION_NAMES, __pyx_t_2) < 0) __PYX_ERR(0, 313, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":378
 *             return 'User defined %s' % (index - 12 + 1)
 * 
 * STOPPED = 0             # <<<<<<<<<<<<<<
 * WALKING = 1
 * RUNNING = 2
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_STOPPED, __pyx_int_0) < 0) __PYX_ERR(0, 378, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":379
 * 
 * STOPPED = 0
 * WALKING = 1             # <<<<<<<<<<<<<<
 * RUNNING = 2
 * APPEARING = 3
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WALKING, __pyx_int_1) < 0) __PYX_ERR(0, 379, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":380
 * STOPPED = 0
 * WALKING = 1
 * RUNNING = 2             # <<<<<<<<<<<<<<
 * APPEARING = 3
 * DISAPPEARING = 4
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RUNNING, __pyx_int_2) < 0) __PYX_ERR(0, 380, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":381
 * WALKING = 1
 * RUNNING = 2
 * APPEARING = 3             # <<<<<<<<<<<<<<
 * DISAPPEARING = 4
 * BOUNCING = 5
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_APPEARING, __pyx_int_3) < 0) __PYX_ERR(0, 381, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":382
 * RUNNING = 2
 * APPEARING = 3
 * DISAPPEARING = 4             # <<<<<<<<<<<<<<
 * BOUNCING = 5
 * SHOOTING = 6
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DISAPPEARING, __pyx_int_4) < 0) __PYX_ERR(0, 382, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":383
 * APPEARING = 3
 * DISAPPEARING = 4
 * BOUNCING = 5             # <<<<<<<<<<<<<<
 * SHOOTING = 6
 * JUMPING = 7
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BOUNCING, __pyx_int_5) < 0) __PYX_ERR(0, 383, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":384
 * DISAPPEARING = 4
 * BOUNCING = 5
 * SHOOTING = 6             # <<<<<<<<<<<<<<
 * JUMPING = 7
 * FALLING = 8
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SHOOTING, __pyx_int_6) < 0) __PYX_ERR(0, 384, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":385
 * BOUNCING = 5
 * SHOOTING = 6
 * JUMPING = 7             # <<<<<<<<<<<<<<
 * FALLING = 8
 * CLIMBING = 9
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JUMPING, __pyx_int_7) < 0) __PYX_ERR(0, 385, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":386
 * SHOOTING = 6
 * JUMPING = 7
 * FALLING = 8             # <<<<<<<<<<<<<<
 * CLIMBING = 9
 * CROUCH_DOWN = 10
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FALLING, __pyx_int_8) < 0) __PYX_ERR(0, 386, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":387
 * JUMPING = 7
 * FALLING = 8
 * CLIMBING = 9             # <<<<<<<<<<<<<<
 * CROUCH_DOWN = 10
 * STAND_UP = 11
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CLIMBING, __pyx_int_9) < 0) __PYX_ERR(0, 387, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":388
 * FALLING = 8
 * CLIMBING = 9
 * CROUCH_DOWN = 10             # <<<<<<<<<<<<<<
 * STAND_UP = 11
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CROUCH_DOWN, __pyx_int_10) < 0) __PYX_ERR(0, 388, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":389
 * CLIMBING = 9
 * CROUCH_DOWN = 10
 * STAND_UP = 11             # <<<<<<<<<<<<<<
 * 
 * ANIMATION_ALTERNATIVES = {
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_STAND_UP, __pyx_int_11) < 0) __PYX_ERR(0, 389, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":392
 * 
 * ANIMATION_ALTERNATIVES = {
 *     STOPPED : [APPEARING, WALKING, RUNNING],             # <<<<<<<<<<<<<<
 *     WALKING : [RUNNING],
 *     RUNNING : [WALKING],
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_STOPPED); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_APPEARING); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyList_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_3);
  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_6, 2, __pyx_t_5);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_t_6) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":393
 * ANIMATION_ALTERNATIVES = {
 *     STOPPED : [APPEARING, WALKING, RUNNING],
 *     WALKING : [RUNNING],             # <<<<<<<<<<<<<<
 *     RUNNING : [WALKING],
 *     APPEARING : [WALKING, RUNNING],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyList_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_6, __pyx_t_5) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":394
 *     STOPPED : [APPEARING, WALKING, RUNNING],
 *     WALKING : [RUNNING],
 *     RUNNING : [WALKING],             # <<<<<<<<<<<<<<
 *     APPEARING : [WALKING, RUNNING],
 *     BOUNCING : [WALKING, RUNNING],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 394, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
  __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_5, __pyx_t_1) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":395
 *     WALKING : [RUNNING],
 *     RUNNING : [WALKING],
 *     APPEARING : [WALKING, RUNNING],             # <<<<<<<<<<<<<<
 *     BOUNCING : [WALKING, RUNNING],
 *     SHOOTING : [WALKING, RUNNING],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_APPEARING); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_t_4) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":396
 *     RUNNING : [WALKING],
 *     APPEARING : [WALKING, RUNNING],
 *     BOUNCING : [WALKING, RUNNING],             # <<<<<<<<<<<<<<
 *     SHOOTING : [WALKING, RUNNING],
 *     JUMPING : [WALKING, RUNNING],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_BOUNCING); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_4, __pyx_t_5) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":397
 *     APPEARING : [WALKING, RUNNING],
 *     BOUNCING : [WALKING, RUNNING],
 *     SHOOTING : [WALKING, RUNNING],             # <<<<<<<<<<<<<<
 *     JUMPING : [WALKING, RUNNING],
 *     FALLING : [WALKING, RUNNING],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_SHOOTING); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
  __pyx_t_4 = 0;
  __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_5, __pyx_t_1) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":398
 *     BOUNCING : [WALKING, RUNNING],
 *     SHOOTING : [WALKING, RUNNING],
 *     JUMPING : [WALKING, RUNNING],             # <<<<<<<<<<<<<<
 *     FALLING : [WALKING, RUNNING],
 *     CLIMBING : [WALKING, RUNNING],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_JUMPING); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_t_4) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":399
 *     SHOOTING : [WALKING, RUNNING],
 *     JUMPING : [WALKING, RUNNING],
 *     FALLING : [WALKING, RUNNING],             # <<<<<<<<<<<<<<
 *     CLIMBING : [WALKING, RUNNING],
 *     CROUCH_DOWN : [WALKING, RUNNING],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_FALLING); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_4, __pyx_t_5) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":400
 *     JUMPING : [WALKING, RUNNING],
 *     FALLING : [WALKING, RUNNING],
 *     CLIMBING : [WALKING, RUNNING],             # <<<<<<<<<<<<<<
 *     CROUCH_DOWN : [WALKING, RUNNING],
 *     STAND_UP : [WALKING, RUNNING]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_CLIMBING); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 400, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_4);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
  __pyx_t_4 = 0;
  __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_5, __pyx_t_1) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":401
 *     FALLING : [WALKING, RUNNING],
 *     CLIMBING : [WALKING, RUNNING],
 *     CROUCH_DOWN : [WALKING, RUNNING],             # <<<<<<<<<<<<<<
 *     STAND_UP : [WALKING, RUNNING]
 * }
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_CROUCH_DOWN); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = PyList_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyList_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_1, __pyx_t_4) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":402
 *     CLIMBING : [WALKING, RUNNING],
 *     CROUCH_DOWN : [WALKING, RUNNING],
 *     STAND_UP : [WALKING, RUNNING]             # <<<<<<<<<<<<<<
 * }
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_STAND_UP); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_WALKING); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_RUNNING); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyList_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_6);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_t_4, __pyx_t_5) < 0) __PYX_ERR(0, 392, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ANIMATION_ALTERNATIVES, __pyx_t_2) < 0) __PYX_ERR(0, 391, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":405
 * }
 * 
 * def getClosestAnimation(index, animationDict, count):             # <<<<<<<<<<<<<<
 *     try:
 *         return animationDict[index]
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_1getClosestAnimation, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 405, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_getClosestAnimation, __pyx_t_2) < 0) __PYX_ERR(0, 405, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":470
 *         return self.items[index]
 * 
 * HIDDEN = 0             # <<<<<<<<<<<<<<
 * NUMBERS = 1
 * VERTICAL_BAR = 2
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HIDDEN, __pyx_int_0) < 0) __PYX_ERR(0, 470, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":471
 * 
 * HIDDEN = 0
 * NUMBERS = 1             # <<<<<<<<<<<<<<
 * VERTICAL_BAR = 2
 * HORIZONTAL_BAR = 3
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NUMBERS, __pyx_int_1) < 0) __PYX_ERR(0, 471, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":472
 * HIDDEN = 0
 * NUMBERS = 1
 * VERTICAL_BAR = 2             # <<<<<<<<<<<<<<
 * HORIZONTAL_BAR = 3
 * ANIMATION = 4
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VERTICAL_BAR, __pyx_int_2) < 0) __PYX_ERR(0, 472, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":473
 * NUMBERS = 1
 * VERTICAL_BAR = 2
 * HORIZONTAL_BAR = 3             # <<<<<<<<<<<<<<
 * ANIMATION = 4
 * TEXT_COUNTER = 5
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HORIZONTAL_BAR, __pyx_int_3) < 0) __PYX_ERR(0, 473, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":474
 * VERTICAL_BAR = 2
 * HORIZONTAL_BAR = 3
 * ANIMATION = 4             # <<<<<<<<<<<<<<
 * TEXT_COUNTER = 5
 * 
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ANIMATION, __pyx_int_4) < 0) __PYX_ERR(0, 474, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":475
 * HORIZONTAL_BAR = 3
 * ANIMATION = 4
 * TEXT_COUNTER = 5             # <<<<<<<<<<<<<<
 * 
 * DISPLAY_NAMES = [
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TEXT_COUNTER, __pyx_int_5) < 0) __PYX_ERR(0, 475, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":477
 * TEXT_COUNTER = 5
 * 
 * DISPLAY_NAMES = [             # <<<<<<<<<<<<<<
 *     'Hidden',
 *     'Numbers',
 */
  __pyx_t_2 = PyList_New(6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Hidden);
  __Pyx_GIVEREF(__pyx_n_s_Hidden);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Hidden);
  __Pyx_INCREF(__pyx_n_s_Numbers);
  __Pyx_GIVEREF(__pyx_n_s_Numbers);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_Numbers);
  __Pyx_INCREF(__pyx_n_s_VerticalBar);
  __Pyx_GIVEREF(__pyx_n_s_VerticalBar);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_VerticalBar);
  __Pyx_INCREF(__pyx_n_s_HorizontalBar);
  __Pyx_GIVEREF(__pyx_n_s_HorizontalBar);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_HorizontalBar);
  __Pyx_INCREF(__pyx_n_s_Animation);
  __Pyx_GIVEREF(__pyx_n_s_Animation);
  PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_Animation);
  __Pyx_INCREF(__pyx_n_s_Text);
  __Pyx_GIVEREF(__pyx_n_s_Text);
  PyList_SET_ITEM(__pyx_t_2, 5, __pyx_n_s_Text);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DISPLAY_NAMES, __pyx_t_2) < 0) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":486
 * ]
 * 
 * COUNTER_FRAMES = [             # <<<<<<<<<<<<<<
 *     '0',
 *     '1',
 */
  __pyx_t_2 = PyList_New(14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 486, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_kp_s_0);
  __Pyx_GIVEREF(__pyx_kp_s_0);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_0);
  __Pyx_INCREF(__pyx_kp_s_1);
  __Pyx_GIVEREF(__pyx_kp_s_1);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_kp_s_1);
  __Pyx_INCREF(__pyx_kp_s_2);
  __Pyx_GIVEREF(__pyx_kp_s_2);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_kp_s_2);
  __Pyx_INCREF(__pyx_kp_s_3);
  __Pyx_GIVEREF(__pyx_kp_s_3);
  PyList_SET_ITEM(__pyx_t_2, 3, __pyx_kp_s_3);
  __Pyx_INCREF(__pyx_kp_s_4);
  __Pyx_GIVEREF(__pyx_kp_s_4);
  PyList_SET_ITEM(__pyx_t_2, 4, __pyx_kp_s_4);
  __Pyx_INCREF(__pyx_kp_s_5);
  __Pyx_GIVEREF(__pyx_kp_s_5);
  PyList_SET_ITEM(__pyx_t_2, 5, __pyx_kp_s_5);
  __Pyx_INCREF(__pyx_kp_s_6);
  __Pyx_GIVEREF(__pyx_kp_s_6);
  PyList_SET_ITEM(__pyx_t_2, 6, __pyx_kp_s_6);
  __Pyx_INCREF(__pyx_kp_s_7);
  __Pyx_GIVEREF(__pyx_kp_s_7);
  PyList_SET_ITEM(__pyx_t_2, 7, __pyx_kp_s_7);
  __Pyx_INCREF(__pyx_kp_s_8);
  __Pyx_GIVEREF(__pyx_kp_s_8);
  PyList_SET_ITEM(__pyx_t_2, 8, __pyx_kp_s_8);
  __Pyx_INCREF(__pyx_kp_s_9);
  __Pyx_GIVEREF(__pyx_kp_s_9);
  PyList_SET_ITEM(__pyx_t_2, 9, __pyx_kp_s_9);
  __Pyx_INCREF(__pyx_kp_s__20);
  __Pyx_GIVEREF(__pyx_kp_s__20);
  PyList_SET_ITEM(__pyx_t_2, 10, __pyx_kp_s__20);
  __Pyx_INCREF(__pyx_kp_s__21);
  __Pyx_GIVEREF(__pyx_kp_s__21);
  PyList_SET_ITEM(__pyx_t_2, 11, __pyx_kp_s__21);
  __Pyx_INCREF(__pyx_kp_s__22);
  __Pyx_GIVEREF(__pyx_kp_s__22);
  PyList_SET_ITEM(__pyx_t_2, 12, __pyx_kp_s__22);
  __Pyx_INCREF(__pyx_n_s_e);
  __Pyx_GIVEREF(__pyx_n_s_e);
  PyList_SET_ITEM(__pyx_t_2, 13, __pyx_n_s_e);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_COUNTER_FRAMES, __pyx_t_2) < 0) __PYX_ERR(0, 486, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":503
 * ]
 * 
 * class InvalidFont(object):             # <<<<<<<<<<<<<<
 *     handle = None
 *     checksum = None
 */
  __pyx_t_2 = __Pyx_CalculateMetaclass(NULL, __pyx_tuple__23); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_Py3MetaclassPrepare(__pyx_t_2, __pyx_tuple__23, __pyx_n_s_InvalidFont, __pyx_n_s_InvalidFont, (PyObject *) NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3, (PyObject *) NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "mmfparser/data/chunkloaders/objects.pyx":504
 * 
 * class InvalidFont(object):
 *     handle = None             # <<<<<<<<<<<<<<
 *     checksum = None
 *     references = None
 */
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_handle, Py_None) < 0) __PYX_ERR(0, 504, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":505
 * class InvalidFont(object):
 *     handle = None
 *     checksum = None             # <<<<<<<<<<<<<<
 *     references = None
 *     value = None
 */
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_checksum, Py_None) < 0) __PYX_ERR(0, 505, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":506
 *     handle = None
 *     checksum = None
 *     references = None             # <<<<<<<<<<<<<<
 *     value = None
 * 
 */
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_references, Py_None) < 0) __PYX_ERR(0, 506, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":507
 *     checksum = None
 *     references = None
 *     value = None             # <<<<<<<<<<<<<<
 * 
 * INVALID_FONT = InvalidFont()
 */
  if (__Pyx_SetNameInClass(__pyx_t_5, __pyx_n_s_value, Py_None) < 0) __PYX_ERR(0, 507, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":503
 * ]
 * 
 * class InvalidFont(object):             # <<<<<<<<<<<<<<
 *     handle = None
 *     checksum = None
 */
  __pyx_t_4 = __Pyx_Py3ClassCreate(__pyx_t_2, __pyx_n_s_InvalidFont, __pyx_tuple__23, __pyx_t_5, NULL, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_InvalidFont, __pyx_t_4) < 0) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":509
 *     value = None
 * 
 * INVALID_FONT = InvalidFont()             # <<<<<<<<<<<<<<
 * 
 * cdef int INT_DIGITS_MASK = 0xF
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_InvalidFont); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 509, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 509, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_INVALID_FONT, __pyx_t_5) < 0) __PYX_ERR(0, 509, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":511
 * INVALID_FONT = InvalidFont()
 * 
 * cdef int INT_DIGITS_MASK = 0xF             # <<<<<<<<<<<<<<
 * cdef int FLOAT_DIGITS_MASK = 0xF0
 * cdef int FORMAT_FLOAT = 0x0200
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_7objects_INT_DIGITS_MASK = 0xF;

  /* "mmfparser/data/chunkloaders/objects.pyx":512
 * 
 * cdef int INT_DIGITS_MASK = 0xF
 * cdef int FLOAT_DIGITS_MASK = 0xF0             # <<<<<<<<<<<<<<
 * cdef int FORMAT_FLOAT = 0x0200
 * cdef int FLOAT_DIGITS_SHIFT = 4
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DIGITS_MASK = 0xF0;

  /* "mmfparser/data/chunkloaders/objects.pyx":513
 * cdef int INT_DIGITS_MASK = 0xF
 * cdef int FLOAT_DIGITS_MASK = 0xF0
 * cdef int FORMAT_FLOAT = 0x0200             # <<<<<<<<<<<<<<
 * cdef int FLOAT_DIGITS_SHIFT = 4
 * cdef int USE_DECIMALS = 0x0400
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FORMAT_FLOAT = 0x0200;

  /* "mmfparser/data/chunkloaders/objects.pyx":514
 * cdef int FLOAT_DIGITS_MASK = 0xF0
 * cdef int FORMAT_FLOAT = 0x0200
 * cdef int FLOAT_DIGITS_SHIFT = 4             # <<<<<<<<<<<<<<
 * cdef int USE_DECIMALS = 0x0400
 * cdef int FLOAT_DECIMALS_MASK = 0xF000
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DIGITS_SHIFT = 4;

  /* "mmfparser/data/chunkloaders/objects.pyx":515
 * cdef int FORMAT_FLOAT = 0x0200
 * cdef int FLOAT_DIGITS_SHIFT = 4
 * cdef int USE_DECIMALS = 0x0400             # <<<<<<<<<<<<<<
 * cdef int FLOAT_DECIMALS_MASK = 0xF000
 * cdef int FLOAT_DECIMALS_SHIFT = 12
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_7objects_USE_DECIMALS = 0x0400;

  /* "mmfparser/data/chunkloaders/objects.pyx":516
 * cdef int FLOAT_DIGITS_SHIFT = 4
 * cdef int USE_DECIMALS = 0x0400
 * cdef int FLOAT_DECIMALS_MASK = 0xF000             # <<<<<<<<<<<<<<
 * cdef int FLOAT_DECIMALS_SHIFT = 12
 * cdef int FLOAT_PAD = 0x0800
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DECIMALS_MASK = 0xF000;

  /* "mmfparser/data/chunkloaders/objects.pyx":517
 * cdef int USE_DECIMALS = 0x0400
 * cdef int FLOAT_DECIMALS_MASK = 0xF000
 * cdef int FLOAT_DECIMALS_SHIFT = 12             # <<<<<<<<<<<<<<
 * cdef int FLOAT_PAD = 0x0800
 * 
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_DECIMALS_SHIFT = 12;

  /* "mmfparser/data/chunkloaders/objects.pyx":518
 * cdef int FLOAT_DECIMALS_MASK = 0xF000
 * cdef int FLOAT_DECIMALS_SHIFT = 12
 * cdef int FLOAT_PAD = 0x0800             # <<<<<<<<<<<<<<
 * 
 * cdef class Counters(DataLoader):
 */
  __pyx_v_9mmfparser_4data_12chunkloaders_7objects_FLOAT_PAD = 0x0800;

  /* "mmfparser/data/chunkloaders/objects.pyx":592
 *         return DISPLAY_NAMES[self.displayType]
 * 
 * PARAGRAPH_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'HorizontalCenter',
 *     'RightAligned',
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_BitDict); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "mmfparser/data/chunkloaders/objects.pyx":597
 *     'VerticalCenter',
 *     'BottomAligned',
 *     None, None, None, None,             # <<<<<<<<<<<<<<
 *     'Correct',
 *     'Relief'
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PARAGRAPH_FLAGS, __pyx_t_2) < 0) __PYX_ERR(0, 592, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":667
 *         reader.writeReader(paragraphData)
 * 
 * RTF_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'Transparent',
 *     'VerticalSlider',
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BitDict); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RTF_FLAGS, __pyx_t_5) < 0) __PYX_ERR(0, 667, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":707
 * 
 * DOCK_POSITIONS = {
 *     (False, False) : 'Left',             # <<<<<<<<<<<<<<
 *     (True, False) : 'Top',
 *     (False, True) : 'Right',
 */
  __pyx_t_5 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 707, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_tuple__26, __pyx_n_s_Left) < 0) __PYX_ERR(0, 707, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":708
 * DOCK_POSITIONS = {
 *     (False, False) : 'Left',
 *     (True, False) : 'Top',             # <<<<<<<<<<<<<<
 *     (False, True) : 'Right',
 *     (True, True) : 'Bottom'
 */
  if (PyDict_SetItem(__pyx_t_5, __pyx_tuple__27, __pyx_n_s_Top) < 0) __PYX_ERR(0, 707, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":709
 *     (False, False) : 'Left',
 *     (True, False) : 'Top',
 *     (False, True) : 'Right',             # <<<<<<<<<<<<<<
 *     (True, True) : 'Bottom'
 * }
 */
  if (PyDict_SetItem(__pyx_t_5, __pyx_tuple__28, __pyx_n_s_Right) < 0) __PYX_ERR(0, 707, __pyx_L1_error)

  /* "mmfparser/data/chunkloaders/objects.pyx":710
 *     (True, False) : 'Top',
 *     (False, True) : 'Right',
 *     (True, True) : 'Bottom'             # <<<<<<<<<<<<<<
 * }
 * 
 */
  if (PyDict_SetItem(__pyx_t_5, __pyx_tuple__29, __pyx_n_s_Bottom) < 0) __PYX_ERR(0, 707, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DOCK_POSITIONS, __pyx_t_5) < 0) __PYX_ERR(0, 706, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":713
 * }
 * 
 * SUBAPPLICATION_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'ShareGlobals',
 *     'ShareLives',
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_BitDict); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 713, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "mmfparser/data/chunkloaders/objects.pyx":731
 *     'HideOnClose',
 *     'CustomableSize',
 *     None,#'INTERNALABOUTBOX',             # <<<<<<<<<<<<<<
 *     'ClipSiblings',
 *     'SharePlayerControls',
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 713, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SUBAPPLICATION_FLAGS, __pyx_t_2) < 0) __PYX_ERR(0, 713, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":803
 * # everything's good now! thanks Villy!
 * 
 * NEW_OBJECT_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'DoNotSaveBackground',
 *     'SolidBackground',
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BitDict); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NEW_OBJECT_FLAGS, __pyx_t_5) < 0) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":813
 * )
 * 
 * OBJECT_FLAGS = BitDict(             # <<<<<<<<<<<<<<
 *     'DisplayInFront',
 *     'Background',
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_BitDict); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OBJECT_FLAGS, __pyx_t_2) < 0) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":836
 * )
 * 
 * OBJECT_PREFERENCES = BitDict(             # <<<<<<<<<<<<<<
 *     'Backsave',
 *     'ScrollingIndependant',
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BitDict); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 836, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OBJECT_PREFERENCES, __pyx_t_5) < 0) __PYX_ERR(0, 836, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1126
 *         return self.flags['QuickDisplay'] or self.flags['Background']
 * 
 * __all__ = ['AlterableValues', 'AlterableStrings', 'Backdrop', 'QuickBackdrop',             # <<<<<<<<<<<<<<
 *     'AnimationDirection', 'Animation', 'AnimationHeader', 'ObjectCommon']
 */
  __pyx_t_5 = PyList_New(8); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_n_s_AlterableValues);
  __Pyx_GIVEREF(__pyx_n_s_AlterableValues);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_n_s_AlterableValues);
  __Pyx_INCREF(__pyx_n_s_AlterableStrings);
  __Pyx_GIVEREF(__pyx_n_s_AlterableStrings);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_n_s_AlterableStrings);
  __Pyx_INCREF(__pyx_n_s_Backdrop);
  __Pyx_GIVEREF(__pyx_n_s_Backdrop);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_n_s_Backdrop);
  __Pyx_INCREF(__pyx_n_s_QuickBackdrop);
  __Pyx_GIVEREF(__pyx_n_s_QuickBackdrop);
  PyList_SET_ITEM(__pyx_t_5, 3, __pyx_n_s_QuickBackdrop);
  __Pyx_INCREF(__pyx_n_s_AnimationDirection);
  __Pyx_GIVEREF(__pyx_n_s_AnimationDirection);
  PyList_SET_ITEM(__pyx_t_5, 4, __pyx_n_s_AnimationDirection);
  __Pyx_INCREF(__pyx_n_s_Animation);
  __Pyx_GIVEREF(__pyx_n_s_Animation);
  PyList_SET_ITEM(__pyx_t_5, 5, __pyx_n_s_Animation);
  __Pyx_INCREF(__pyx_n_s_AnimationHeader);
  __Pyx_GIVEREF(__pyx_n_s_AnimationHeader);
  PyList_SET_ITEM(__pyx_t_5, 6, __pyx_n_s_AnimationHeader);
  __Pyx_INCREF(__pyx_n_s_ObjectCommon);
  __Pyx_GIVEREF(__pyx_n_s_ObjectCommon);
  PyList_SET_ITEM(__pyx_t_5, 7, __pyx_n_s_ObjectCommon);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_all, __pyx_t_5) < 0) __PYX_ERR(0, 1126, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_AlterableValues(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_3__pyx_unpickle_AlterableValues, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_AlterableValues, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_AlterableValues__set_state(<AlterableValues> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AlterableValues__set_state(AlterableValues __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.parent = __pyx_state[1]; __pyx_result.settings = __pyx_state[2]
 *     if len(__pyx_state) > 3 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_5__pyx_unpickle_AlterableStrings, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_AlterableStrings, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Shape(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_7__pyx_unpickle_Shape, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_Shape, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_Shape__set_state(<Shape> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Shape__set_state(Shape __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.borderColor = __pyx_state[0]; __pyx_result.borderSize = __pyx_state[1]; __pyx_result.color1 = __pyx_state[2]; __pyx_result.color2 = __pyx_state[3]; __pyx_result.fillType = __pyx_state[4]; __pyx_result.gradientFlags = __pyx_state[5]; __pyx_result.image = __pyx_state[6]; __pyx_result.lineFlags = __pyx_state[7]; __pyx_result.parent = __pyx_state[8]; __pyx_result.settings = __pyx_state[9]; __pyx_result.shape = __pyx_state[10]
 *     if len(__pyx_state) > 11 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_9__pyx_unpickle__Background, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle__Background, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_QuickBackdrop(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_11__pyx_unpickle_QuickBackdrop, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_QuickBackdrop, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_QuickBackdrop__set_state(<QuickBackdrop> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_QuickBackdrop__set_state(QuickBackdrop __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.collisionMode = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.obstacleType = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.shape = __pyx_state[5]; __pyx_result.width = __pyx_state[6]
 *     if len(__pyx_state) > 7 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_13__pyx_unpickle_Backdrop, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_Backdrop, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_AnimationDirection(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_15__pyx_unpickle_AnimationDirection, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_AnimationDirectio, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_AnimationDirection__set_state(<AnimationDirection> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationDirection__set_state(AnimationDirection __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.backTo = __pyx_state[0]; __pyx_result.frames = __pyx_state[1]; __pyx_result.hasSingle = __pyx_state[2]; __pyx_result.maxSpeed = __pyx_state[3]; __pyx_result.minSpeed = __pyx_state[4]; __pyx_result.parent = __pyx_state[5]; __pyx_result.repeat = __pyx_state[6]; __pyx_result.settings = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_17__pyx_unpickle_Animation, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_Animation, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_AnimationHeader(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_19__pyx_unpickle_AnimationHeader, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_AnimationHeader, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_AnimationHeader__set_state(<AnimationHeader> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_AnimationHeader__set_state(AnimationHeader __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.items = __pyx_state[0]; __pyx_result.loadedAnimations = __pyx_state[1]; __pyx_result.parent = __pyx_state[2]; __pyx_result.settings = __pyx_state[3]
 *     if len(__pyx_state) > 4 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_21__pyx_unpickle_Counters, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_Counters, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Paragraph(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_23__pyx_unpickle_Paragraph, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_Paragraph, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_Paragraph__set_state(<Paragraph> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Paragraph__set_state(Paragraph __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.color = __pyx_state[0]; __pyx_result.flags = __pyx_state[1]; __pyx_result.font = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]
 *     if len(__pyx_state) > 6 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_25__pyx_unpickle_Text, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_Text, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_RTFObject(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_27__pyx_unpickle_RTFObject, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_RTFObject, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_RTFObject__set_state(<RTFObject> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_RTFObject__set_state(RTFObject __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.backColor = __pyx_state[0]; __pyx_result.height = __pyx_state[1]; __pyx_result.options = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]; __pyx_result.value = __pyx_state[5]; __pyx_result.version = __pyx_state[6]; __pyx_result.width = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_29__pyx_unpickle_SubApplication, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_SubApplication, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Counter(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_31__pyx_unpickle_Counter, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_Counter, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_Counter__set_state(<Counter> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Counter__set_state(Counter __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.initial = __pyx_state[0]; __pyx_result.maximum = __pyx_state[1]; __pyx_result.minimum = __pyx_state[2]; __pyx_result.parent = __pyx_state[3]; __pyx_result.settings = __pyx_state[4]
 *     if len(__pyx_state) > 5 and hasattr(__pyx_result, '__dict__'):
 */
  __pyx_t_5 = PyCFunction_NewEx(&__pyx_mdef_9mmfparser_4data_12chunkloaders_7objects_33__pyx_unpickle_ObjectCommon, NULL, __pyx_n_s_mmfparser_data_chunkloaders_obje_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_ObjectCommon, __pyx_t_5) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "mmfparser/data/chunkloaders/objects.pyx":1
 * # Copyright (c) Mathias Kaerlev 2012.             # <<<<<<<<<<<<<<
 * 
 * # This file is part of Anaconda.
 */
  __pyx_t_5 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_5) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init mmfparser.data.chunkloaders.objects", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init mmfparser.data.chunkloaders.objects");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (__Pyx_PyFastCFunction_Check(func)) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* GetAttr3 */
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r = __Pyx_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
}

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#if defined(__Pyx_CyFunction_USED) && defined(NDEBUG)
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr = NULL;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* PyIntCompare */
static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_FALSE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a != b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_TRUE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_TRUE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a != (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_NE));
}

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a - b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* UnpackUnboundCMethod */
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    }
#endif
    return 0;
}

/* CallUnboundCMethod0 */
static PyObject* __Pyx__CallUnboundCMethod0(__Pyx_CachedCFunction* cfunc, PyObject* self) {
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_ASSUME_SAFE_MACROS
    args = PyTuple_New(1);
    if (unlikely(!args)) goto bad;
    Py_INCREF(self);
    PyTuple_SET_ITEM(args, 0, self);
#else
    args = PyTuple_Pack(1, self);
    if (unlikely(!args)) goto bad;
#endif
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    Py_DECREF(args);
bad:
    return result;
}

/* py_dict_keys */
static CYTHON_INLINE PyObject* __Pyx_PyDict_Keys(PyObject* d) {
    if (PY_MAJOR_VERSION >= 3)
        return __Pyx_CallUnboundCMethod0(&__pyx_umethod_PyDict_Type_keys, d);
    else
        return PyDict_Keys(d);
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            #else
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            #endif
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    if (likely(cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
            return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, args, 2);
            #else
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
            #endif
        }
        #if PY_VERSION_HEX >= 0x030700A0
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
        #endif
    }
    return __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(3);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 1, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 2, arg2);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(3, self, arg1, arg2);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* dict_getitem_default */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value) {
    PyObject* value;
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (unlikely(PyErr_Occurred()))
            return NULL;
        value = default_value;
    }
    Py_INCREF(value);
    if ((1));
#else
    if (PyString_CheckExact(key) || PyUnicode_CheckExact(key) || PyInt_CheckExact(key)) {
        value = PyDict_GetItem(d, key);
        if (unlikely(!value)) {
            value = default_value;
        }
        Py_INCREF(value);
    }
#endif
    else {
        if (default_value == Py_None)
            value = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_get, d, key);
        else
            value = __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyDict_Type_get, d, key, default_value);
    }
    return value;
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* HasAttr */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (unlikely(!r)) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* CallNextTpDealloc */
static void __Pyx_call_next_tp_dealloc(PyObject* obj, destructor current_tp_dealloc) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_dealloc != current_tp_dealloc)
        type = type->tp_base;
    while (type && type->tp_dealloc == current_tp_dealloc)
        type = type->tp_base;
    if (type)
        type->tp_dealloc(obj);
}

/* CallNextTpTraverse */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

/* CallNextTpClear */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

/* TypeImport */
#ifndef __PYX_HAVE_RT_ImportType_0_29_35
#define __PYX_HAVE_RT_ImportType_0_29_35
static PyTypeObject *__Pyx_ImportType_0_29_35(PyObject *module, const char *module_name, const char *class_name,
    size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_0_29_35 check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
    Py_ssize_t itemsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
    PyObject *py_itemsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
    itemsize = ((PyTypeObject *)result)->tp_itemsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
    py_itemsize = PyObject_GetAttrString(result, "__itemsize__");
    if (!py_itemsize)
        goto bad;
    itemsize = PyLong_AsSsize_t(py_itemsize);
    Py_DECREF(py_itemsize);
    py_itemsize = 0;
    if (itemsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (itemsize) {
        if (size % alignment) {
            alignment = size % alignment;
        }
        if (itemsize < (Py_ssize_t)alignment)
            itemsize = (Py_ssize_t)alignment;
    }
    if ((size_t)(basicsize + itemsize) < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error_0_29_35 && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn_0_29_35 && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* GetVTable */
static void* __Pyx_GetVtable(PyObject *dict) {
    void* ptr;
    PyObject *ob = PyObject_GetItem(dict, __pyx_n_s_pyx_vtable);
    if (!ob)
        goto bad;
#if PY_VERSION_HEX >= 0x02070000
    ptr = PyCapsule_GetPointer(ob, 0);
#else
    ptr = PyCObject_AsVoidPtr(ob);
#endif
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* PyObjectGetAttrStrNoError */
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* SetupReduce */
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name_2);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_getstate = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
    PyObject *getstate = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    getstate = _PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate);
#else
    getstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_getstate);
    if (!getstate && PyErr_Occurred()) {
        goto __PYX_BAD;
    }
#endif
    if (getstate) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_getstate = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_getstate);
#else
        object_getstate = __Pyx_PyObject_GetAttrStrNoError((PyObject*)&PyBaseObject_Type, __pyx_n_s_getstate);
        if (!object_getstate && PyErr_Occurred()) {
            goto __PYX_BAD;
        }
#endif
        if (object_getstate != getstate) {
            goto __PYX_GOOD;
        }
    }
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
    Py_XDECREF(object_getstate);
    Py_XDECREF(getstate);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* CalculateMetaclass */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases = PyTuple_GET_SIZE(bases);
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* Py3ClassCreate */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStr(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs = PyTuple_Pack(2, name, bases);
            if (unlikely(!pargs)) {
                Py_DECREF(prep);
                return NULL;
            }
            ns = PyObject_Call(prep, pargs, mkw);
            Py_DECREF(prep);
            Py_DECREF(pargs);
        } else {
            if (unlikely(!PyErr_ExceptionMatches(PyExc_AttributeError)))
                return NULL;
            PyErr_Clear();
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result, *margs;
    PyObject *owned_metaclass = NULL;
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    margs = PyTuple_Pack(3, name, bases, dict);
    if (unlikely(!margs)) {
        result = NULL;
    } else {
        result = PyObject_Call(metaclass, margs, mkw);
        Py_DECREF(margs);
    }
    Py_XDECREF(owned_metaclass);
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);  // XDECREF since it's only set on Py3 if cline
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_short(short value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const short neg_one = (short) -1, const_zero = (short) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(short) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(short) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(short) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(short) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(short) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(short),
                                     little, !is_unsigned);
    }
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[5];
    int same=1, i, found_dot;
    const char* rt_from_call = Py_GetVersion();
    PyOS_snprintf(ctversion, 5, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    found_dot = 0;
    for (i = 0; i < 4; i++) {
        if (!ctversion[i]) {
            same = (rt_from_call[i] < '0' || rt_from_call[i] > '9');
            break;
        }
        if (rt_from_call[i] != ctversion[i]) {
            same = 0;
            break;
        }
    }
    if (!same) {
        char rtversion[5] = {'\0'};
        char message[200];
        for (i=0; i<4; ++i) {
            if (rt_from_call[i] == '.') {
                if (found_dot) break;
                found_dot = 1;
            } else if (rt_from_call[i] < '0' || rt_from_call[i] > '9') {
                break;
            }
            rtversion[i] = rt_from_call[i];
        }
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
